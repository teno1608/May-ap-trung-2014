;/*****************************************************
;
;Chip type               : ATmega64
;Program type            : Application
;AVR Core Clock frequency: 16.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 1024
;*****************************************************/
;
;#include <mega64.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Alphanumeric LCD Module functions
;#include <alcd.h>
;#include <stdio.h>
;#include <stdlib.h>
;#include <delay.h>
;// Declare your global variables here
;
;void beep()
; 0000 0015 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0016 DDRC.7=1;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0017 PORTC.7=0;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0018 delay_ms(30);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0019 PORTC.7=1;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001A delay_ms(70);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001B }
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;
;///////////////////////////////////////
;#define ddrdata DDRC.6
;#define portdata PORTC.6
;#define data PINC.6
;long doamh, doaml, nhietdoh, nhietdol, nhietdo, doam;
;void read_am2301()   // Clock value: 1382.400 kHz
; 0000 0023      {
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0024      int i,a;
; 0000 0025      a=128;
;PCODE: $0000001F VOL: 0
;	i -> R16,R17
;	a -> R18,R19
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0026      ddrdata=1;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0027      portdata=0;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0028      delay_us(1000);
;PCODE: $00000026 VOL: 0
; 0000 0029      portdata=1;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 002A      delay_us(30);
;PCODE: $00000029 VOL: 0
; 0000 002B      portdata=0;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 002C      ddrdata=0;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 002D      while(data==0)
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 002E           {
; 0000 002F           }
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0030      while(data==1)
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0031           {
; 0000 0032           }
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0033      while(data==0)
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0034           {
; 0000 0035           }
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0036      a=128;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0037      for (i=0;i<8;i++)
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0038           {
; 0000 0039           TCNT2=0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 003A           TCCR2=0x02;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 003B           while(data==1)
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 003C                {
; 0000 003D                }
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 003E           if (TCNT2 > 96) doamh = doamh + a ;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 003F           a=a/2;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0040           TCNT2=0x00;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0041           TCCR2=0x00;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0042           while (data==0)
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0043                {
; 0000 0044                }
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0045           }
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0046      a=128;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0047      for (i=0;i<8;i++)
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0048           {
; 0000 0049           TCNT2=0x00;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 004A           TCCR2=0x02;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 004B           while(data==1)
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 004C                {
; 0000 004D                }
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 004E           if (TCNT2 > 96) doaml = doaml + a ;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 004F           a=a/2;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0050           TCNT2=0x00;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0051           TCCR2=0x00;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0052           while (data==0)
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0053                {
; 0000 0054                }
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0055           }
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0056      a=128;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0057      for (i=0;i<8;i++)
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0058           {
; 0000 0059           TCNT2=0x00;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 005A           TCCR2=0x02;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 005B           while(data==1)
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 005C                {
; 0000 005D                }
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 005E           if (TCNT2 > 96 ) nhietdoh = nhietdoh + a ;
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 005F           a=a/2;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0060           TCNT2=0x00;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0061           TCCR2=0x00;
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0062           while (data==0)
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0063                {
; 0000 0064                }
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 0065           }
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 0066      a=128;
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0067      for (i=0;i<8;i++)
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0068           {
; 0000 0069           TCNT2=0x00;
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 006A           TCCR2=0x02;
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 006B           while(data==1)
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 006C                {
; 0000 006D                }
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 006E           if (TCNT2 > 96) nhietdol = nhietdol + a ;
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 006F           a=a/2;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 0070           TCNT2=0x00;
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 0071           TCCR2=0x00;
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 0072           while (data==0)
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 0073                {
; 0000 0074                }
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 0075           }
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 0076      nhietdo = nhietdoh*256 + nhietdol;
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 0077      doam = doamh*256 + doaml;
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0078      doamh=doaml=nhietdoh=nhietdol=0;
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 0079      portdata=1;
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 007A      }
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;
;///////////////////////////////////////
;#define daotrung PORTB.4
;#define ctht1 PIND.6
;#define ctht2 PIND.7
;
;eeprom char hong1=0x00, hong2=0xff, hong3=0x7f, hong4=0xff;
;eeprom int solandtr=0;
;eeprom unsigned char dempdtr=0;
;
;int demcb=0, demwdog=0, demquat=0, demdtr=0 ;
;bit kichquat=0;
;
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0089 {
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 008A // Reinitialize Timer 0 value
; 0000 008B TCNT0=0x27;
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 008C // Place your code here
; 0000 008D demdtr++;
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 008E demcb++;
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 008F demwdog++;
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 0090 demquat++;
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 0091 if (demwdog >=50)
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 0092     {
; 0000 0093     demwdog=0;
;PCODE: $0000012E VOL: 0
; 0000 0094     #asm("WDR") ;
;PCODE: $0000012F VOL: 0
	WDR
;PCODE: $00000130 VOL: 0
; 0000 0095     }
; 0000 0096 if (demcb >=100)
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 0097     {
; 0000 0098     demcb=0;
;PCODE: $00000135 VOL: 0
; 0000 0099     read_am2301();
;PCODE: $00000136 VOL: 0
; 0000 009A     };
;PCODE: $00000137 VOL: 0
; 0000 009B 
; 0000 009C switch (demquat)
;PCODE: $00000138 VOL: 0
; 0000 009D     {
; 0000 009E     case 3 :
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 009F         kichquat=1;
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 00A0         break;
;PCODE: $0000013E VOL: 0
; 0000 00A1     case 600 :
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 00A2         kichquat=0;
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 00A3         break;
;PCODE: $00000145 VOL: 0
; 0000 00A4     case 5000 :
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 00A5         demquat=0;
;PCODE: $00000149 VOL: 0
; 0000 00A6         break;
;PCODE: $0000014A VOL: 0
; 0000 00A7     }
;PCODE: $0000014B VOL: 0
; 0000 00A8 
; 0000 00A9 }
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;
;//////////////////////////////////
;char select=0;
;void kiemtradr()
; 0000 00AE {
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 00AF     if (demdtr >=9000)
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 00B0     {
; 0000 00B1     demdtr=0;
;PCODE: $00000154 VOL: 0
; 0000 00B2     dempdtr++;
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 00B3     if (dempdtr >=60)
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 00B4         {
; 0000 00B5         dempdtr=0;
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 00B6         solandtr++;
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 00B7         if ((ctht1==0)|((ctht1==1)&(ctht1==1))) {select=1;}
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 00B8         if (ctht2==0) {select=2;}
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 00B9         daotrung=0;
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 00BA         beep();
;PCODE: $00000182 VOL: 0
; 0000 00BB         }
; 0000 00BC     }
;PCODE: $00000183 VOL: 0
; 0000 00BD       if (select==1) {if (ctht2==0) {beep(); daotrung=1; select=0;}}
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0000 00BE       if (select==2) {if (ctht1==0) {beep(); daotrung=1; select=0;}}
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 00BF }
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;
;/////////////////////////////////
;char display_buffer[80];
;void hienthilcd()
; 0000 00C4 {
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 00C5     lcd_clear();
;PCODE: $000001A1 VOL: 0
; 0000 00C6     lcd_gotoxy(5,0);
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0000 00C7     lcd_puts("Fairy-Elab");
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 00C8     sprintf(display_buffer,"Nhiet Do:%6i.%-u%cC\nDo Am:%9i.%-u%%",
; 0000 00C9     nhietdo/10,abs(nhietdo%10),0xdf,doam/10,abs(doam%10),0xdf);
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0000 00CA     lcd_gotoxy(0,1);
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 00CB     lcd_puts(display_buffer);
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
; 0000 00CC     sprintf(display_buffer,"Dao: %-i",solandtr);
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 00CD     lcd_gotoxy(0,3);
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
; 0000 00CE     lcd_puts(display_buffer);
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 00CF     sprintf(display_buffer,"%-u",dempdtr);
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 00D0     lcd_gotoxy(10,3);
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 00D1     lcd_puts(display_buffer);
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
; 0000 00D2     sprintf(display_buffer,"%-i",demdtr);
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0000 00D3     lcd_gotoxy(15,3);
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
; 0000 00D4     lcd_puts(display_buffer);
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 00D5     delay_ms(50);
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0000 00D6 }
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0

	.DSEG
_0x5C:
	.BYTE 0xB
;
;void main(void)
; 0000 00D9 {

	.CSEG
;PCODE: $00000219 VOL: 0
; 0000 00DA // Declare your local variables here
; 0000 00DB unsigned char k, biennd;
; 0000 00DC 
; 0000 00DD // Input/Output Ports initialization
; 0000 00DE // Port A initialization
; 0000 00DF // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 00E0 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 00E1 PORTA=0x00;
;	k -> R17
;	biennd -> R16
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
; 0000 00E2 DDRA=0x00;
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
; 0000 00E3 
; 0000 00E4 // Port B initialization
; 0000 00E5 // Func7=Out Func6=Out Func5=Out Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 00E6 // State7=0 State6=0 State5=0 State4=T State3=T State2=T State1=T State0=T
; 0000 00E7 PORTB=0xff;
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
; 0000 00E8 DDRB=0xff;
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 00E9 
; 0000 00EA // Port C initialization
; 0000 00EB // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 00EC // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 00ED PORTC=0b00010000;
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
; 0000 00EE DDRC=0b00001111;
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0000 00EF 
; 0000 00F0 // Port D initialization
; 0000 00F1 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 00F2 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 00F3 PORTD=0xff;
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
; 0000 00F4 DDRD=0x00;
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 00F5 
; 0000 00F6 // Port E initialization
; 0000 00F7 // Func7=In Func6=In Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=In
; 0000 00F8 // State7=T State6=T State5=0 State4=0 State3=0 State2=T State1=T State0=T
; 0000 00F9 PORTE=0xff;
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
; 0000 00FA DDRE=0xff;
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0000 00FB 
; 0000 00FC // Port F initialization
; 0000 00FD // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 00FE // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 00FF PORTF=0x00;
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
; 0000 0100 DDRF=0x00;
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 0101 
; 0000 0102 // Port G initialization
; 0000 0103 // Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0104 // State4=T State3=T State2=T State1=T State0=T
; 0000 0105 PORTG=0x00;
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
; 0000 0106 DDRG=0x00;
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
; 0000 0107 
; 0000 0108 // Timer/Counter 0 initialization
; 0000 0109 // Clock source: System Clock
; 0000 010A // Clock value: 10.800 kHz
; 0000 010B // Mode: Normal top=0xFF
; 0000 010C // OC0 output: Disconnected
; 0000 010D ASSR=0x00;
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
; 0000 010E TCCR0=0x07;
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
; 0000 010F TCNT0=0x27;
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
; 0000 0110 OCR0=0x00;
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
; 0000 0111 
; 0000 0112 // Timer/Counter 1 initialization
; 0000 0113 // Clock source: System Clock
; 0000 0114 // Clock value: 11059,200 kHz
; 0000 0115 // Mode: Fast PWM top=ICR1
; 0000 0116 // OC1A output: Inverted
; 0000 0117 // OC1B output: Inverted
; 0000 0118 // OC1C output: Inverted
; 0000 0119 // Noise Canceler: Off
; 0000 011A // Input Capture on Falling Edge
; 0000 011B // Timer1 Overflow Interrupt: Off
; 0000 011C // Input Capture Interrupt: Off
; 0000 011D // Compare A Match Interrupt: Off
; 0000 011E // Compare B Match Interrupt: Off
; 0000 011F // Compare C Match Interrupt: Off
; 0000 0120 TCCR1A=0xFE;
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
; 0000 0121 TCCR1B=0x19;
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
; 0000 0122 TCNT1H=0x00;
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
; 0000 0123 TCNT1L=0x00;
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
; 0000 0124 ICR1H=0x00;
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
; 0000 0125 ICR1L=0x00;
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
; 0000 0126 ICR1=50000;
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0000 0127 OCR1AH=0x00;
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
; 0000 0128 OCR1AL=0x00;
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
; 0000 0129 OCR1BH=0x00;
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
; 0000 012A OCR1BL=0x00;
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
; 0000 012B OCR1CH=0x00;
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
; 0000 012C OCR1CL=0x00;
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 012D 
; 0000 012E // Timer/Counter 2 initialization
; 0000 012F // Clock source: System Clock
; 0000 0130 // Clock value: Timer2 Stopped
; 0000 0131 // Mode: Normal top=0xFF
; 0000 0132 // OC2 output: Disconnected
; 0000 0133 TCCR2=0x00;
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
; 0000 0134 TCNT2=0x00;
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
; 0000 0135 OCR2=0x00;
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
; 0000 0136 
; 0000 0137 // Timer/Counter 3 initialization
; 0000 0138 // Clock source: System Clock
; 0000 0139 // Clock value: 11059,200 kHz
; 0000 013A // Mode: Fast PWM top=ICR3
; 0000 013B // OC3A output: Inverted
; 0000 013C // OC3B output: Inverted
; 0000 013D // OC3C output: Inverted
; 0000 013E // Noise Canceler: Off
; 0000 013F // Input Capture on Falling Edge
; 0000 0140 // Timer3 Overflow Interrupt: Off
; 0000 0141 // Input Capture Interrupt: Off
; 0000 0142 // Compare A Match Interrupt: Off
; 0000 0143 // Compare B Match Interrupt: Off
; 0000 0144 // Compare C Match Interrupt: Off
; 0000 0145 TCCR3A=0xFE;
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
; 0000 0146 TCCR3B=0x19;
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
; 0000 0147 TCNT3H=0x00;
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
; 0000 0148 TCNT3L=0x00;
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
; 0000 0149 ICR3H=0xc3;
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
; 0000 014A ICR3L=0x50;
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
; 0000 014B OCR3AH=0x00;
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
; 0000 014C OCR3AL=0x00;
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
; 0000 014D OCR3BH=0x00;
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
; 0000 014E OCR3BL=0x00;
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
; 0000 014F OCR3CH=0x00;
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
; 0000 0150 OCR3CL=0x00;
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
; 0000 0151 
; 0000 0152 // External Interrupt(s) initialization
; 0000 0153 // INT0: Off
; 0000 0154 // INT1: Off
; 0000 0155 // INT2: Off
; 0000 0156 // INT3: Off
; 0000 0157 // INT4: Off
; 0000 0158 // INT5: Off
; 0000 0159 // INT6: Off
; 0000 015A // INT7: Off
; 0000 015B EICRA=0x00;
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
; 0000 015C EICRB=0x00;
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
; 0000 015D EIMSK=0x00;
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
; 0000 015E 
; 0000 015F // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0160 TIMSK=0x01;
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 0161 
; 0000 0162 ETIMSK=0x00;
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
; 0000 0163 
; 0000 0164 // USART0 initialization
; 0000 0165 // USART0 disabled
; 0000 0166 UCSR0B=0x00;
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
; 0000 0167 
; 0000 0168 // USART1 initialization
; 0000 0169 // USART1 disabled
; 0000 016A UCSR1B=0x00;
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
; 0000 016B 
; 0000 016C // Analog Comparator initialization
; 0000 016D // Analog Comparator: Off
; 0000 016E // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 016F ACSR=0x80;
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
; 0000 0170 SFIOR=0x00;
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
; 0000 0171 
; 0000 0172 // ADC initialization
; 0000 0173 // ADC disabled
; 0000 0174 ADCSRA=0x00;
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
; 0000 0175 
; 0000 0176 // SPI initialization
; 0000 0177 // SPI disabled
; 0000 0178 SPCR=0x00;
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
; 0000 0179 
; 0000 017A // TWI initialization
; 0000 017B // TWI disabled
; 0000 017C TWCR=0x00;
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
; 0000 017D 
; 0000 017E // Alphanumeric LCD initialization
; 0000 017F // Connections specified in the
; 0000 0180 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0181 // RS - PORTA Bit 0
; 0000 0182 // RD - PORTA Bit 1
; 0000 0183 // EN - PORTA Bit 2
; 0000 0184 // D4 - PORTA Bit 4
; 0000 0185 // D5 - PORTA Bit 5
; 0000 0186 // D6 - PORTA Bit 6
; 0000 0187 // D7 - PORTA Bit 7
; 0000 0188 // Characters/line: 20
; 0000 0189 lcd_init(20);
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
; 0000 018A 
; 0000 018B lcd_putsf("NQ Fairy");
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
; 0000 018C for (k=0;k<4;k++) beep();
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
; 0000 018D lcd_clear();
;PCODE: $000002A4 VOL: 0
; 0000 018E 
; 0000 018F // Watchdog Timer initialization
; 0000 0190 // Watchdog Timer Prescaler: OSC/2048k
; 0000 0191 #pragma optsize-
; 0000 0192 WDTCR=0x1F;
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
; 0000 0193 WDTCR=0x0F;
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
; 0000 0194 #ifdef _OPTIMIZE_SIZE_
; 0000 0195 #pragma optsize+
; 0000 0196 #endif
; 0000 0197 
; 0000 0198 #asm("sei")
;PCODE: $000002A9 VOL: 0
	sei
;PCODE: $000002AA VOL: 0
; 0000 0199 
; 0000 019A hong1=0x00;
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
; 0000 019B hong2=0xff;
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0000 019C hong3=0x7f;
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
; 0000 019D hong4=0xff;
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
; 0000 019E 
; 0000 019F read_am2301();
;PCODE: $000002B7 VOL: 0
; 0000 01A0 while (1)
;PCODE: $000002B8 VOL: 0
; 0000 01A1       {
; 0000 01A2       if (nhietdo<373)
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
; 0000 01A3        {
; 0000 01A4        kichquat=0;
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 01A5 
; 0000 01A6        OCR3BH=0;
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
; 0000 01A7        OCR3BL=0;
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
; 0000 01A8 
; 0000 01A9        OCR3CH=0;
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
; 0000 01AA        OCR3CL=0;
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
; 0000 01AB        }
; 0000 01AC       if (nhietdo<=365) biennd=1;
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
; 0000 01AD       if ((nhietdo>365)&(nhietdo<368)) biennd=2;
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
; 0000 01AE       if (nhietdo>=368) biennd=3;
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
; 0000 01AF       if (kichquat==1)
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
; 0000 01B0         {
; 0000 01B1         OCR3BH=0x55;
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
; 0000 01B2         OCR3BL=0xf0;
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
; 0000 01B3 
; 0000 01B4         OCR3CH=0x2e;
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
; 0000 01B5         OCR3CL=0xe0;
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
; 0000 01B6         }
; 0000 01B7       else
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
; 0000 01B8         {
; 0000 01B9         OCR3BH=0;
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
; 0000 01BA         OCR3BL=0;
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
; 0000 01BB 
; 0000 01BC         OCR3CH=0;
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
; 0000 01BD         OCR3CL=0;
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
; 0000 01BE         }
;PCODE: $000002F5 VOL: 0
; 0000 01BF 
; 0000 01C0       switch (biennd)
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
; 0000 01C1         {
; 0000 01C2             case 1 :
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
; 0000 01C3                 OCR1A=40000;
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
; 0000 01C4 
; 0000 01C5                 OCR1CH=0x9c;
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
; 0000 01C6                 OCR1CL=0x40;
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
; 0000 01C7 
; 0000 01C8                 break;
;PCODE: $00000300 VOL: 0
; 0000 01C9             case 2 :
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
; 0000 01CA                 OCR1A=0;
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
; 0000 01CB 
; 0000 01CC                 OCR1CH=0;
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
; 0000 01CD                 OCR1CL=0;
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
; 0000 01CE 
; 0000 01CF                 break;
;PCODE: $0000030A VOL: 0
; 0000 01D0             case 3 :
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
; 0000 01D1                 OCR3BH=0x9c;
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
; 0000 01D2                 OCR3BL=0x40;
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
; 0000 01D3 
; 0000 01D4                 OCR3CH=0x9c;
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
; 0000 01D5                 OCR3CL=0x40;
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
; 0000 01D6                 break;
;PCODE: $00000316 VOL: 0
; 0000 01D7         };
;PCODE: $00000317 VOL: 0
; 0000 01D8       if (doam < 750)
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
; 0000 01D9         {
; 0000 01DA         OCR1B=50000;
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
; 0000 01DB         }
; 0000 01DC       else
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
; 0000 01DD         {
; 0000 01DE         OCR1B=0;
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
; 0000 01DF         }
;PCODE: $00000321 VOL: 0
; 0000 01E0 
; 0000 01E1       kiemtradr();
;PCODE: $00000322 VOL: 0
; 0000 01E2       hienthilcd();
;PCODE: $00000323 VOL: 0
; 0000 01E3 
; 0000 01E4       }
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
; 0000 01E5 }
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
