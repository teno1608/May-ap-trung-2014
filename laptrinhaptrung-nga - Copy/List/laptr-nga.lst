
AVRASM ver. 2.1.30  D:\may ap trung\laptrinhaptrung-nga - Copy\List\laptr-nga.asm Mon Dec 22 09:14:00 2014

D:\may ap trung\laptrinhaptrung-nga - Copy\List\laptr-nga.asm(1057): warning: Register r4 already defined by the .DEF directive
D:\may ap trung\laptrinhaptrung-nga - Copy\List\laptr-nga.asm(1058): warning: Register r6 already defined by the .DEF directive
D:\may ap trung\laptrinhaptrung-nga - Copy\List\laptr-nga.asm(1059): warning: Register r8 already defined by the .DEF directive
D:\may ap trung\laptrinhaptrung-nga - Copy\List\laptr-nga.asm(1060): warning: Register r10 already defined by the .DEF directive
D:\may ap trung\laptrinhaptrung-nga - Copy\List\laptr-nga.asm(1061): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega8
                 ;Program type             : Application
                 ;Clock frequency          : 16.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _count_am2301=R4
                 	.DEF _count_key=R6
                 	.DEF _count_delay=R8
                 	.DEF _count_eep=R10
                 	.DEF _ht_count_egg=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c065      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 c08c      	RJMP _timer1_ovf_isr
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _tbl10_G100:
000013 2710
000014 03e8
000015 0064
000016 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000017 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000018 1000
000019 0100
00001a 0010
00001b 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
00001c 0078      	.DW  0x0078
                 
                 _0x56:
D:\may ap trung\laptrinhaptrung-nga - Copy\List\laptr-nga.asm(1101): warning: .cseg .db misalignment - padding zero byte
00001d 0001      	.DB  0x1
                 _0xCF:
00001e 0000
00001f 0000
000020 0000
000021 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x0:
000022 002e
000023 3a54
000024 0020
000025 2020      	.DB  0x2E,0x0,0x54,0x3A,0x20,0x0,0x20,0x20
000026 203e
000027 0020
000028 3a48
000029 0020      	.DB  0x3E,0x20,0x20,0x0,0x48,0x3A,0x20,0x0
00002a 2020
00002b 2020
00002c 2020
00002d 4400      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x0,0x44
00002e 6f61
00002f 5420
000030 7572
000031 676e      	.DB  0x61,0x6F,0x20,0x54,0x72,0x75,0x6E,0x67
000032 2020
000033 2020
000034 2020
000035 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000036 2020
000037 2020
000038 2020
000039 4220      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x42
00003a 6e61
00003b 2067
00003c 6154
00003d 0079      	.DB  0x61,0x6E,0x67,0x20,0x54,0x61,0x79,0x0
00003e 6144
00003f 206f
000040 7254
000041 6e75      	.DB  0x44,0x61,0x6F,0x20,0x54,0x72,0x75,0x6E
000042 2067
000043 2020
000044 2020
000045 2020      	.DB  0x67,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000046 2020
000047 2020
000048 2020
000049 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00004a 7554
00004b 4420
00004c 6e6f
00004d 2067      	.DB  0x54,0x75,0x20,0x44,0x6F,0x6E,0x67,0x20
D:\may ap trung\laptrinhaptrung-nga - Copy\List\laptr-nga.asm(1116): warning: .cseg .db misalignment - padding zero byte
00004e 0000      	.DB  0x0
                 _0x2020060:
D:\may ap trung\laptrinhaptrung-nga - Copy\List\laptr-nga.asm(1118): warning: .cseg .db misalignment - padding zero byte
00004f 0001      	.DB  0x1
                 _0x2020000:
000050 4e2d
000051 4e41
000052 4900
000053 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\may ap trung\laptrinhaptrung-nga - Copy\List\laptr-nga.asm(1121): warning: .cseg .db misalignment - padding zero byte
000054 0000      	.DB  0x0
                 _0x2040003:
000055 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000056 0001      	.DW  0x01
000057 0002      	.DW  0x02
000058 0038      	.DW  __REG_BIT_VARS*2
                 
000059 0001      	.DW  0x01
00005a 0178      	.DW  _remember_t
00005b 003a      	.DW  _0x56*2
                 
00005c 0008      	.DW  0x08
00005d 0004      	.DW  0x04
00005e 003c      	.DW  _0xCF*2
                 
00005f 0001      	.DW  0x01
000060 017b      	.DW  __seed_G101
000061 009e      	.DW  _0x2020060*2
                 
000062 0002      	.DW  0x02
000063 017f      	.DW  __base_y_G102
000064 00aa      	.DW  _0x2040003*2
                 
                 _0xFFFFFFFF:
000065 0000      	.DW  0
                 
                 __RESET:
000066 94f8      	CLI
000067 27ee      	CLR  R30
000068 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000069 e0f1      	LDI  R31,1
00006a bffb      	OUT  GICR,R31
00006b bfeb      	OUT  GICR,R30
00006c bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
00006d e1f8      	LDI  R31,0x18
00006e bdf1      	OUT  WDTCR,R31
00006f bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000070 e08d      	LDI  R24,(14-2)+1
000071 e0a2      	LDI  R26,2
000072 27bb      	CLR  R27
                 __CLEAR_REG:
000073 93ed      	ST   X+,R30
000074 958a      	DEC  R24
000075 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000076 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000077 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000078 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000079 93ed      	ST   X+,R30
00007a 9701      	SBIW R24,1
00007b f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00007c eaec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00007d e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00007e 9185      	LPM  R24,Z+
00007f 9195      	LPM  R25,Z+
000080 9700      	SBIW R24,0
000081 f061      	BREQ __GLOBAL_INI_END
000082 91a5      	LPM  R26,Z+
000083 91b5      	LPM  R27,Z+
000084 9005      	LPM  R0,Z+
000085 9015      	LPM  R1,Z+
000086 01bf      	MOVW R22,R30
000087 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000088 9005      	LPM  R0,Z+
000089 920d      	ST   X+,R0
00008a 9701      	SBIW R24,1
00008b f7e1      	BRNE __GLOBAL_INI_LOOP
00008c 01fb      	MOVW R30,R22
00008d cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00008e e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00008f bfed      	OUT  SPL,R30
000090 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000091 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000092 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000093 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000094 c1f7      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Chip type               : ATmega8
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 16.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 256
                 ;*****************************************************/
                 ;
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;
                 ;eeprom unsigned int hong1,hong2,hong3;
                 ;////////////////////////////////////////
                 ;unsigned int count_am2301=0, count_key=0, count_delay=0, count_eep=0;
                 ;eeprom unsigned int count_egg=0;
                 ;bit set_am2301=0, set_key=0, set_egg=0;
                 ;unsigned int ht_count_egg;
                 ;
                 ;// Timer1 overflow interrupt service routine >>>>>> overflow 1ms
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 0019 {
                 
                 	.CSEG
                 _timer1_ovf_isr:
000095 938a      	ST   -Y,R24
000096 939a      	ST   -Y,R25
000097 93aa      	ST   -Y,R26
000098 93ba      	ST   -Y,R27
000099 93ea      	ST   -Y,R30
00009a 93fa      	ST   -Y,R31
00009b b7ef      	IN   R30,SREG
00009c 93ea      	ST   -Y,R30
                 ; 0000 001A // Reinitialize Timer1 value
                 ; 0000 001B TCNT1H=0xFF;
00009d d37a      	RCALL SUBOPT_0x0
                 ; 0000 001C TCNT1L=0x05;
                 ; 0000 001D // Place your code here
                 ; 0000 001E count_am2301++;
00009e 01f2      	MOVW R30,R4
00009f 9631      	ADIW R30,1
0000a0 012f      	MOVW R4,R30
                 ; 0000 001F count_key++;
0000a1 01f3      	MOVW R30,R6
0000a2 9631      	ADIW R30,1
0000a3 013f      	MOVW R6,R30
                 ; 0000 0020 count_delay++;
0000a4 01f4      	MOVW R30,R8
0000a5 9631      	ADIW R30,1
0000a6 014f      	MOVW R8,R30
                 ; 0000 0021 count_eep++;
0000a7 01f5      	MOVW R30,R10
0000a8 9631      	ADIW R30,1
0000a9 015f      	MOVW R10,R30
                 ; 0000 0022 if (count_am2301 >= 1500) { set_am2301=1; count_am2301=0;}
0000aa edec      	LDI  R30,LOW(1500)
0000ab e0f5      	LDI  R31,HIGH(1500)
0000ac 164e      	CP   R4,R30
0000ad 065f      	CPC  R5,R31
0000ae f020      	BRLO _0x3
0000af 9468      	SET
0000b0 f820      	BLD  R2,0
0000b1 2444      	CLR  R4
0000b2 2455      	CLR  R5
                 ; 0000 0023 if (count_key >= 150) {set_key=1; count_key=0;}
                 _0x3:
0000b3 e9e6      	LDI  R30,LOW(150)
0000b4 e0f0      	LDI  R31,HIGH(150)
0000b5 166e      	CP   R6,R30
0000b6 067f      	CPC  R7,R31
0000b7 f020      	BRLO _0x4
0000b8 9468      	SET
0000b9 f821      	BLD  R2,1
0000ba 2466      	CLR  R6
0000bb 2477      	CLR  R7
                 ; 0000 0024 if (count_eep >= 30000)
                 _0x4:
0000bc e3e0      	LDI  R30,LOW(30000)
0000bd e7f5      	LDI  R31,HIGH(30000)
0000be 16ae      	CP   R10,R30
0000bf 06bf      	CPC  R11,R31
0000c0 f080      	BRLO _0x5
                 ; 0000 0025     {
                 ; 0000 0026     count_egg++;
0000c1 d35b      	RCALL SUBOPT_0x1
0000c2 9631      	ADIW R30,1
0000c3 d55a      	RCALL __EEPROMWRW
0000c4 9731      	SBIW R30,1
                 ; 0000 0027     ht_count_egg=count_egg;
0000c5 d357      	RCALL SUBOPT_0x1
0000c6 016f      	MOVW R12,R30
                 ; 0000 0028     if (count_egg >= 4) {set_egg=1; count_egg=0;}
0000c7 d355      	RCALL SUBOPT_0x1
0000c8 9734      	SBIW R30,4
0000c9 f028      	BRLO _0x6
0000ca 9468      	SET
0000cb f822      	BLD  R2,2
0000cc e0a6      	LDI  R26,LOW(_count_egg)
0000cd e0b0      	LDI  R27,HIGH(_count_egg)
0000ce d352      	RCALL SUBOPT_0x2
                 ; 0000 0029     count_eep=0;
                 _0x6:
0000cf 24aa      	CLR  R10
0000d0 24bb      	CLR  R11
                 ; 0000 002A     }
                 ; 0000 002B }
                 _0x5:
0000d1 91e9      	LD   R30,Y+
0000d2 bfef      	OUT  SREG,R30
0000d3 91f9      	LD   R31,Y+
0000d4 91e9      	LD   R30,Y+
0000d5 91b9      	LD   R27,Y+
0000d6 91a9      	LD   R26,Y+
0000d7 9199      	LD   R25,Y+
0000d8 9189      	LD   R24,Y+
0000d9 9518      	RETI
                 ;/////////////////////////////////
                 ;void reset_all()
                 ; 0000 002E     {
                 _reset_all:
                 ; 0000 002F     count_am2301=0;
0000da 2444      	CLR  R4
0000db 2455      	CLR  R5
                 ; 0000 0030     count_key=0;
0000dc 2466      	CLR  R6
0000dd 2477      	CLR  R7
                 ; 0000 0031     count_eep=0;
0000de 24aa      	CLR  R10
0000df 24bb      	CLR  R11
                 ; 0000 0032     set_am2301=0;
0000e0 94e8      	CLT
0000e1 f820      	BLD  R2,0
                 ; 0000 0033     set_key=0;
0000e2 f821      	BLD  R2,1
                 ; 0000 0034     set_egg=0;
0000e3 f822      	BLD  R2,2
                 ; 0000 0035     }
0000e4 9508      	RET
                 ;
                 ;//////////////////////////////////
                 ;void delay_mms(int time_delay)
                 ; 0000 0039     {
                 _delay_mms:
                 ; 0000 003A     count_delay=0;
                 ;	time_delay -> Y+0
0000e5 2488      	CLR  R8
0000e6 2499      	CLR  R9
                 ; 0000 003B     while (count_delay<time_delay) {}
                 _0x7:
0000e7 81e8      	LD   R30,Y
0000e8 81f9      	LDD  R31,Y+1
0000e9 168e      	CP   R8,R30
0000ea 069f      	CPC  R9,R31
0000eb f3d8      	BRLO _0x7
                 ; 0000 003C     }
0000ec c2c0      	RJMP _0x20C0002
                 ;
                 ;//////////////////////////////////
                 ;#define loa PORTB.0
                 ;#define ddrloa DDRB.0
                 ;void beep(int ton , int toff , int count)
                 ; 0000 0042 {
                 _beep:
                 ; 0000 0043 int i;
                 ; 0000 0044 for (i=0; i<count ;i++)
0000ed d555      	RCALL __SAVELOCR2
                 ;	ton -> Y+6
                 ;	toff -> Y+4
                 ;	count -> Y+2
                 ;	i -> R16,R17
0000ee d336      	RCALL SUBOPT_0x3
                 _0xB:
0000ef 81ea      	LDD  R30,Y+2
0000f0 81fb      	LDD  R31,Y+2+1
0000f1 170e      	CP   R16,R30
0000f2 071f      	CPC  R17,R31
0000f3 f45c      	BRGE _0xC
                 ; 0000 0045     {
                 ; 0000 0046 ddrloa=1;
0000f4 9ab8      	SBI  0x17,0
                 ; 0000 0047 loa=0;
0000f5 98c0      	CBI  0x18,0
                 ; 0000 0048 delay_mms(ton);
0000f6 81ee      	LDD  R30,Y+6
0000f7 81ff      	LDD  R31,Y+6+1
0000f8 d32f      	RCALL SUBOPT_0x4
                 ; 0000 0049 loa=1;
0000f9 9ac0      	SBI  0x18,0
                 ; 0000 004A delay_mms(toff);
0000fa 81ec      	LDD  R30,Y+4
0000fb 81fd      	LDD  R31,Y+4+1
0000fc d32b      	RCALL SUBOPT_0x4
                 ; 0000 004B     }
0000fd d32d      	RCALL SUBOPT_0x5
0000fe cff0      	RJMP _0xB
                 _0xC:
                 ; 0000 004C }
0000ff d548      	RCALL __LOADLOCR2
000100 9628      	ADIW R28,8
000101 9508      	RET
                 ;/////
                 ;/*
                 ;void beepe(int ton , int toff , int count)
                 ;{
                 ;int i;
                 ;for (i=0; i<count ;i++)
                 ;    {
                 ;ddrloa=1;
                 ;loa=0;
                 ;delay_ms(ton);
                 ;loa=1;
                 ;delay_ms(toff);
                 ;    }
                 ;}
                 ;*/
                 ;
                 ;//////////////////////////////////////////////////
                 ;#define ddrdata DDRD.0
                 ;#define portdata PORTD.0
                 ;#define data PIND.0
                 ;long doamh, doaml, nhietdoh, nhietdol, nhietdo, doam;
                 ;
                 ;void read_am2301()    // Clock value: 1382.400 kHz
                 ; 0000 0064      {
                 _read_am2301:
                 ; 0000 0065      int i,a;
                 ; 0000 0066      #asm("cli")
000102 d53e      	RCALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	a -> R18,R19
000103 94f8      	cli
                 ; 0000 0067      TCCR1A=0x00;
000104 e0e0      	LDI  R30,LOW(0)
000105 bdef      	OUT  0x2F,R30
                 ; 0000 0068      TCCR1B=0x00;
000106 bdee      	OUT  0x2E,R30
                 ; 0000 0069 
                 ; 0000 006A      a=128;
000107 d326      	RCALL SUBOPT_0x6
                 ; 0000 006B      ddrdata=1;
000108 9a88      	SBI  0x11,0
                 ; 0000 006C      portdata=0;
000109 9890      	CBI  0x12,0
                 ; 0000 006D 
                 ; 0000 006E      //delay_ms(1);
                 ; 0000 006F      TCCR0=0x03;
00010a e0e3      	LDI  R30,LOW(3)
00010b d325      	RCALL SUBOPT_0x7
                 ; 0000 0070      TCNT0=0x00;
                 ; 0000 0071      while (TCNT0<250) {}
                 _0x17:
00010c b7e2      	IN   R30,0x32
00010d 3fea      	CPI  R30,LOW(0xFA)
00010e f3e8      	BRLO _0x17
                 ; 0000 0072      TCCR0=0x00;
00010f e0e0      	LDI  R30,LOW(0)
000110 d320      	RCALL SUBOPT_0x7
                 ; 0000 0073      TCNT0=0x00;
                 ; 0000 0074 
                 ; 0000 0075      portdata=1;
000111 9a90      	SBI  0x12,0
                 ; 0000 0076 
                 ; 0000 0077      //delay_us(30);
                 ; 0000 0078      TCCR0=0x02;
000112 e0e2      	LDI  R30,LOW(2)
000113 d31d      	RCALL SUBOPT_0x7
                 ; 0000 0079      TCNT0=0x00;
                 ; 0000 007A      while (TCNT0<60) {}
                 _0x1C:
000114 b7e2      	IN   R30,0x32
000115 33ec      	CPI  R30,LOW(0x3C)
000116 f3e8      	BRLO _0x1C
                 ; 0000 007B      TCCR0=0x00;
000117 e0e0      	LDI  R30,LOW(0)
000118 d318      	RCALL SUBOPT_0x7
                 ; 0000 007C      TCNT0=0x00;
                 ; 0000 007D 
                 ; 0000 007E      portdata=0;
000119 9890      	CBI  0x12,0
                 ; 0000 007F      ddrdata=0;
00011a 9888      	CBI  0x11,0
                 ; 0000 0080      while(data==0)
                 _0x23:
00011b 9b80      	SBIS 0x10,0
                 ; 0000 0081           {
                 ; 0000 0082           }
00011c cffe      	RJMP _0x23
                 ; 0000 0083      while(data==1)
                 _0x26:
00011d 9980      	SBIC 0x10,0
                 ; 0000 0084           {
                 ; 0000 0085           }
00011e cffe      	RJMP _0x26
                 ; 0000 0086      while(data==0)
                 _0x29:
00011f 9b80      	SBIS 0x10,0
                 ; 0000 0087           {
                 ; 0000 0088           }
000120 cffe      	RJMP _0x29
                 ; 0000 0089      a=128;
000121 d30c      	RCALL SUBOPT_0x6
                 ; 0000 008A      for (i=0;i<8;i++)
000122 d302      	RCALL SUBOPT_0x3
                 _0x2D:
000123 d311      	RCALL SUBOPT_0x8
000124 f4bc      	BRGE _0x2E
                 ; 0000 008B           {
                 ; 0000 008C           TCNT2=0x00;
000125 d313      	RCALL SUBOPT_0x9
                 ; 0000 008D           TCCR2=0x02;
000126 d315      	RCALL SUBOPT_0xA
                 ; 0000 008E           while(data==1)
                 _0x2F:
000127 9980      	SBIC 0x10,0
                 ; 0000 008F                {
                 ; 0000 0090                }
000128 cffe      	RJMP _0x2F
                 ; 0000 0091           if (TCNT2 > 96) doamh = doamh + a ;
000129 d315      	RCALL SUBOPT_0xB
00012a f058      	BRLO _0x32
00012b 01f9      	MOVW R30,R18
00012c 91a0 0160 	LDS  R26,_doamh
00012e 91b0 0161 	LDS  R27,_doamh+1
000130 9180 0162 	LDS  R24,_doamh+2
000132 9190 0163 	LDS  R25,_doamh+3
000134 d30d      	RCALL SUBOPT_0xC
000135 d30f      	RCALL SUBOPT_0xD
                 ; 0000 0092           a=a/2;
                 _0x32:
000136 d317      	RCALL SUBOPT_0xE
                 ; 0000 0093           TCNT2=0x00;
                 ; 0000 0094           TCCR2=0x00;
000137 d31c      	RCALL SUBOPT_0xF
                 ; 0000 0095           while (data==0)
                 _0x33:
000138 9b80      	SBIS 0x10,0
                 ; 0000 0096                {
                 ; 0000 0097                }
000139 cffe      	RJMP _0x33
                 ; 0000 0098           }
00013a d2f0      	RCALL SUBOPT_0x5
00013b cfe7      	RJMP _0x2D
                 _0x2E:
                 ; 0000 0099      a=128;
00013c d2f1      	RCALL SUBOPT_0x6
                 ; 0000 009A      for (i=0;i<8;i++)
00013d d2e7      	RCALL SUBOPT_0x3
                 _0x37:
00013e d2f6      	RCALL SUBOPT_0x8
00013f f484      	BRGE _0x38
                 ; 0000 009B           {
                 ; 0000 009C           TCNT2=0x00;
000140 d2f8      	RCALL SUBOPT_0x9
                 ; 0000 009D           TCCR2=0x02;
000141 d2fa      	RCALL SUBOPT_0xA
                 ; 0000 009E           while(data==1)
                 _0x39:
000142 9980      	SBIC 0x10,0
                 ; 0000 009F                {
                 ; 0000 00A0                }
000143 cffe      	RJMP _0x39
                 ; 0000 00A1           if (TCNT2 > 96) doaml = doaml + a ;
000144 d2fa      	RCALL SUBOPT_0xB
000145 f020      	BRLO _0x3C
000146 01f9      	MOVW R30,R18
000147 d30f      	RCALL SUBOPT_0x10
000148 d2f9      	RCALL SUBOPT_0xC
000149 d316      	RCALL SUBOPT_0x11
                 ; 0000 00A2           a=a/2;
                 _0x3C:
00014a d303      	RCALL SUBOPT_0xE
                 ; 0000 00A3           TCNT2=0x00;
                 ; 0000 00A4           TCCR2=0x00;
00014b d308      	RCALL SUBOPT_0xF
                 ; 0000 00A5           while (data==0)
                 _0x3D:
00014c 9b80      	SBIS 0x10,0
                 ; 0000 00A6                {
                 ; 0000 00A7                }
00014d cffe      	RJMP _0x3D
                 ; 0000 00A8           }
00014e d2dc      	RCALL SUBOPT_0x5
00014f cfee      	RJMP _0x37
                 _0x38:
                 ; 0000 00A9      a=128;
000150 d2dd      	RCALL SUBOPT_0x6
                 ; 0000 00AA      for (i=0;i<8;i++)
000151 d2d3      	RCALL SUBOPT_0x3
                 _0x41:
000152 d2e2      	RCALL SUBOPT_0x8
000153 f4bc      	BRGE _0x42
                 ; 0000 00AB           {
                 ; 0000 00AC           TCNT2=0x00;
000154 d2e4      	RCALL SUBOPT_0x9
                 ; 0000 00AD           TCCR2=0x02;
000155 d2e6      	RCALL SUBOPT_0xA
                 ; 0000 00AE           while(data==1)
                 _0x43:
000156 9980      	SBIC 0x10,0
                 ; 0000 00AF                {
                 ; 0000 00B0                }
000157 cffe      	RJMP _0x43
                 ; 0000 00B1           if (TCNT2 > 96 ) nhietdoh = nhietdoh + a ;
000158 d2e6      	RCALL SUBOPT_0xB
000159 f058      	BRLO _0x46
00015a 01f9      	MOVW R30,R18
00015b 91a0 0168 	LDS  R26,_nhietdoh
00015d 91b0 0169 	LDS  R27,_nhietdoh+1
00015f 9180 016a 	LDS  R24,_nhietdoh+2
000161 9190 016b 	LDS  R25,_nhietdoh+3
000163 d2de      	RCALL SUBOPT_0xC
000164 d304      	RCALL SUBOPT_0x12
                 ; 0000 00B2           a=a/2;
                 _0x46:
000165 d2e8      	RCALL SUBOPT_0xE
                 ; 0000 00B3           TCNT2=0x00;
                 ; 0000 00B4           TCCR2=0x00;
000166 d2ed      	RCALL SUBOPT_0xF
                 ; 0000 00B5           while (data==0)
                 _0x47:
000167 9b80      	SBIS 0x10,0
                 ; 0000 00B6                {
                 ; 0000 00B7                }
000168 cffe      	RJMP _0x47
                 ; 0000 00B8           }
000169 d2c1      	RCALL SUBOPT_0x5
00016a cfe7      	RJMP _0x41
                 _0x42:
                 ; 0000 00B9      a=128;
00016b d2c2      	RCALL SUBOPT_0x6
                 ; 0000 00BA      for (i=0;i<8;i++)
00016c d2b8      	RCALL SUBOPT_0x3
                 _0x4B:
00016d d2c7      	RCALL SUBOPT_0x8
00016e f484      	BRGE _0x4C
                 ; 0000 00BB           {
                 ; 0000 00BC           TCNT2=0x00;
00016f d2c9      	RCALL SUBOPT_0x9
                 ; 0000 00BD           TCCR2=0x02;
000170 d2cb      	RCALL SUBOPT_0xA
                 ; 0000 00BE           while(data==1)
                 _0x4D:
000171 9980      	SBIC 0x10,0
                 ; 0000 00BF                {
                 ; 0000 00C0                }
000172 cffe      	RJMP _0x4D
                 ; 0000 00C1           if (TCNT2 > 96) nhietdol = nhietdol + a ;
000173 d2cb      	RCALL SUBOPT_0xB
000174 f020      	BRLO _0x50
000175 01f9      	MOVW R30,R18
000176 d2fb      	RCALL SUBOPT_0x13
000177 d2ca      	RCALL SUBOPT_0xC
000178 d302      	RCALL SUBOPT_0x14
                 ; 0000 00C2           a=a/2;
                 _0x50:
000179 d2d4      	RCALL SUBOPT_0xE
                 ; 0000 00C3           TCNT2=0x00;
                 ; 0000 00C4           TCCR2=0x00;
00017a d2d9      	RCALL SUBOPT_0xF
                 ; 0000 00C5           while (data==0)
                 _0x51:
00017b 9b80      	SBIS 0x10,0
                 ; 0000 00C6                {
                 ; 0000 00C7                }
00017c cffe      	RJMP _0x51
                 ; 0000 00C8           }
00017d d2ad      	RCALL SUBOPT_0x5
00017e cfee      	RJMP _0x4B
                 _0x4C:
                 ; 0000 00C9      nhietdo = nhietdoh*256 + nhietdol;
00017f 91e0 0168 	LDS  R30,_nhietdoh
000181 91f0 0169 	LDS  R31,_nhietdoh+1
000183 9160 016a 	LDS  R22,_nhietdoh+2
000185 9170 016b 	LDS  R23,_nhietdoh+3
000187 d2fc      	RCALL SUBOPT_0x15
000188 d2e9      	RCALL SUBOPT_0x13
000189 d3ba      	RCALL __ADDD12
00018a 93e0 0170 	STS  _nhietdo,R30
00018c 93f0 0171 	STS  _nhietdo+1,R31
00018e 9360 0172 	STS  _nhietdo+2,R22
000190 9370 0173 	STS  _nhietdo+3,R23
                 ; 0000 00CA      doam = doamh*256 + doaml;
000192 91e0 0160 	LDS  R30,_doamh
000194 91f0 0161 	LDS  R31,_doamh+1
000196 9160 0162 	LDS  R22,_doamh+2
000198 9170 0163 	LDS  R23,_doamh+3
00019a d2e9      	RCALL SUBOPT_0x15
00019b d2bb      	RCALL SUBOPT_0x10
00019c d3a7      	RCALL __ADDD12
00019d 93e0 0174 	STS  _doam,R30
00019f 93f0 0175 	STS  _doam+1,R31
0001a1 9360 0176 	STS  _doam+2,R22
0001a3 9370 0177 	STS  _doam+3,R23
                 ; 0000 00CB      doamh=doaml=nhietdoh=nhietdol=0;
                +
0001a5 e0e0     +LDI R30 , LOW ( 0x0 )
0001a6 e0f0     +LDI R31 , HIGH ( 0x0 )
0001a7 e060     +LDI R22 , BYTE3 ( 0x0 )
0001a8 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
0001a9 d2d1      	RCALL SUBOPT_0x14
0001aa d2be      	RCALL SUBOPT_0x12
0001ab d2b4      	RCALL SUBOPT_0x11
0001ac d298      	RCALL SUBOPT_0xD
                 ; 0000 00CC      portdata=1;
0001ad 9a90      	SBI  0x12,0
                 ; 0000 00CD 
                 ; 0000 00CE      TCCR1A=0x00;
0001ae d2db      	RCALL SUBOPT_0x16
                 ; 0000 00CF      TCCR1B=0x03;
                 ; 0000 00D0      TCNT1H=0xFF;
                 ; 0000 00D1      TCNT1L=0x05;
                 ; 0000 00D2      ICR1H=0x00;
0001af d2df      	RCALL SUBOPT_0x17
                 ; 0000 00D3      ICR1L=0x00;
                 ; 0000 00D4      #asm("sei")
0001b0 9478      	sei
                 ; 0000 00D5      }
0001b1 d494      	RCALL __LOADLOCR4
0001b2 9624      	ADIW R28,4
0001b3 9508      	RET
                 ;
                 ;
                 ;///////////////////////////////////////////////////
                 ;#define fan_o2 PORTC.2
                 ;#define fan_top PORTC.1
                 ;#define fan_bottom PORTC.0
                 ;#define lamp PORTC.5
                 ;#define motor PORTC.4
                 ;#define humidifier PORTC.3
                 ;
                 ;#define on 0
                 ;#define off 1
                 ;eeprom unsigned int nhietdocd=370;
                 ;char remember_t=1;
                 
                 	.DSEG
                 ;
                 ;void control_remember()
                 ; 0000 00E6     {
                 
                 	.CSEG
                 _control_remember:
                 ; 0000 00E7 
                 ; 0000 00E8     switch (remember_t) {
0001b4 91e0 0178 	LDS  R30,_remember_t
0001b6 e0f0      	LDI  R31,0
                 ; 0000 00E9         case 1:
0001b7 30e1      	CPI  R30,LOW(0x1)
0001b8 e0a0      	LDI  R26,HIGH(0x1)
0001b9 07fa      	CPC  R31,R26
0001ba f459      	BRNE _0x5A
                 ; 0000 00EA             lamp=off;
0001bb 9aad      	SBI  0x15,5
                 ; 0000 00EB             fan_top=off;
0001bc 9aa9      	SBI  0x15,1
                 ; 0000 00EC             fan_bottom=on;
0001bd 98a8      	CBI  0x15,0
                 ; 0000 00ED             fan_o2=off;
0001be 9aaa      	SBI  0x15,2
                 ; 0000 00EE             if (nhietdo < nhietdocd+2) remember_t=2;
0001bf d2d3      	RCALL SUBOPT_0x18
0001c0 9632      	ADIW R30,2
0001c1 d2d5      	RCALL SUBOPT_0x19
0001c2 f414      	BRGE _0x63
0001c3 e0e2      	LDI  R30,LOW(2)
0001c4 d2de      	RCALL SUBOPT_0x1A
                 ; 0000 00EF             break;
                 _0x63:
0001c5 c02c      	RJMP _0x59
                 ; 0000 00F0         case 2:
                 _0x5A:
0001c6 30e2      	CPI  R30,LOW(0x2)
0001c7 e0a0      	LDI  R26,HIGH(0x2)
0001c8 07fa      	CPC  R31,R26
0001c9 f471      	BRNE _0x64
                 ; 0000 00F1             lamp=off;
0001ca 9aad      	SBI  0x15,5
                 ; 0000 00F2             fan_top=on;
0001cb d2da      	RCALL SUBOPT_0x1B
                 ; 0000 00F3             fan_bottom=on;
                 ; 0000 00F4             fan_o2=on;
                 ; 0000 00F5             if (nhietdo < nhietdocd-2) remember_t=3;
0001cc 9732      	SBIW R30,2
0001cd d2c9      	RCALL SUBOPT_0x19
0001ce f414      	BRGE _0x6D
0001cf e0e3      	LDI  R30,LOW(3)
0001d0 d2d2      	RCALL SUBOPT_0x1A
                 ; 0000 00F6             if (nhietdo >= nhietdocd+3) remember_t=1;
                 _0x6D:
0001d1 d2c1      	RCALL SUBOPT_0x18
0001d2 9633      	ADIW R30,3
0001d3 d2c3      	RCALL SUBOPT_0x19
0001d4 f014      	BRLT _0x6E
0001d5 e0e1      	LDI  R30,LOW(1)
0001d6 d2cc      	RCALL SUBOPT_0x1A
                 ; 0000 00F7             break;
                 _0x6E:
0001d7 c01a      	RJMP _0x59
                 ; 0000 00F8         case 3:
                 _0x64:
0001d8 30e3      	CPI  R30,LOW(0x3)
0001d9 e0a0      	LDI  R26,HIGH(0x3)
0001da 07fa      	CPC  R31,R26
0001db f4b1      	BRNE _0x59
                 ; 0000 00F9             lamp=on;
0001dc 98ad      	CBI  0x15,5
                 ; 0000 00FA             fan_top=on;
0001dd d2c8      	RCALL SUBOPT_0x1B
                 ; 0000 00FB             fan_bottom=on;
                 ; 0000 00FC             fan_o2=on;
                 ; 0000 00FD             if (nhietdo > nhietdocd) remember_t=2;
0001de 91a0 0170 	LDS  R26,_nhietdo
0001e0 91b0 0171 	LDS  R27,_nhietdo+1
0001e2 9180 0172 	LDS  R24,_nhietdo+2
0001e4 9190 0173 	LDS  R25,_nhietdo+3
0001e6 2766      	CLR  R22
0001e7 2777      	CLR  R23
0001e8 d44e      	RCALL __CPD12
0001e9 f414      	BRGE _0x78
0001ea e0e2      	LDI  R30,LOW(2)
0001eb d2b7      	RCALL SUBOPT_0x1A
                 ; 0000 00FE             if (nhietdo >= nhietdocd+3) remember_t=1;
                 _0x78:
0001ec d2a6      	RCALL SUBOPT_0x18
0001ed 9633      	ADIW R30,3
0001ee d2a8      	RCALL SUBOPT_0x19
0001ef f014      	BRLT _0x79
0001f0 e0e1      	LDI  R30,LOW(1)
0001f1 d2b1      	RCALL SUBOPT_0x1A
                 ; 0000 00FF             break;
                 _0x79:
                 ; 0000 0100         }
                 _0x59:
                 ; 0000 0101 
                 ; 0000 0102     }
0001f2 9508      	RET
                 ;
                 ;////////////////////////////////////////////
                 ;
                 ;#define led PORTB.1
                 ;#define button_l PINB.2
                 ;#define button_x PINB.3
                 ;#define button_m PINB.4
                 ;#define button_s PINB.5
                 ;bit button_tl=1, button_tx=1, button_motor=1, button_sw=1;
                 ;
                 ;void scan_key(){
                 ; 0000 010D void scan_key(){
                 _scan_key:
                 ; 0000 010E PORTB.2=1; PORTB.3=1; PORTB.4=1; PORTB.5=1;
0001f3 9ac2      	SBI  0x18,2
0001f4 9ac3      	SBI  0x18,3
0001f5 9ac4      	SBI  0x18,4
0001f6 9ac5      	SBI  0x18,5
                 ; 0000 010F DDRB=0b00000011;
0001f7 e0e3      	LDI  R30,LOW(3)
0001f8 bbe7      	OUT  0x17,R30
                 ; 0000 0110 delay_mms(2);
0001f9 d2b0      	RCALL SUBOPT_0x1C
                 ; 0000 0111 if(button_l==0) button_tl=0; else button_tl=1;
0001fa 99b2      	SBIC 0x16,2
0001fb c002      	RJMP _0x82
0001fc 94e8      	CLT
0001fd c001      	RJMP _0xC6
                 _0x82:
0001fe 9468      	SET
                 _0xC6:
0001ff f823      	BLD  R2,3
                 ; 0000 0112 delay_mms(2);
000200 d2a9      	RCALL SUBOPT_0x1C
                 ; 0000 0113 if(button_x==0) button_tx=0; else button_tx=1;
000201 99b3      	SBIC 0x16,3
000202 c002      	RJMP _0x84
000203 94e8      	CLT
000204 c001      	RJMP _0xC7
                 _0x84:
000205 9468      	SET
                 _0xC7:
000206 f824      	BLD  R2,4
                 ; 0000 0114 delay_mms(2);
000207 d2a2      	RCALL SUBOPT_0x1C
                 ; 0000 0115 if(button_m==0) button_motor=0; else button_motor=1;
000208 99b4      	SBIC 0x16,4
000209 c002      	RJMP _0x86
00020a 94e8      	CLT
00020b c001      	RJMP _0xC8
                 _0x86:
00020c 9468      	SET
                 _0xC8:
00020d f825      	BLD  R2,5
                 ; 0000 0116 delay_mms(2);
00020e d29b      	RCALL SUBOPT_0x1C
                 ; 0000 0117 if(button_s==0) button_sw=0; else button_sw=1;
00020f 99b5      	SBIC 0x16,5
000210 c002      	RJMP _0x88
000211 94e8      	CLT
000212 c001      	RJMP _0xC9
                 _0x88:
000213 9468      	SET
                 _0xC9:
000214 f826      	BLD  R2,6
                 ; 0000 0118 delay_mms(2);
000215 d294      	RCALL SUBOPT_0x1C
                 ; 0000 0119 }
000216 9508      	RET
                 ;
                 ;void read_key()
                 ; 0000 011C {
                 _read_key:
                 ; 0000 011D scan_key();
000217 dfdb      	RCALL _scan_key
                 ; 0000 011E if (button_tl ==on){
000218 fc23      	SBRC R2,3
000219 c005      	RJMP _0x8A
                 ; 0000 011F         nhietdocd++;
00021a d278      	RCALL SUBOPT_0x18
00021b 9631      	ADIW R30,1
00021c d401      	RCALL __EEPROMWRW
00021d 9731      	SBIW R30,1
                 ; 0000 0120         beep(10,40,1);
00021e d28e      	RCALL SUBOPT_0x1D
                 ; 0000 0121         }
                 ; 0000 0122 if (button_tx ==on){
                 _0x8A:
00021f fc24      	SBRC R2,4
000220 c005      	RJMP _0x8B
                 ; 0000 0123         nhietdocd--;
000221 d271      	RCALL SUBOPT_0x18
000222 9731      	SBIW R30,1
000223 d3fa      	RCALL __EEPROMWRW
000224 9631      	ADIW R30,1
                 ; 0000 0124         beep(10,40,1);
000225 d287      	RCALL SUBOPT_0x1D
                 ; 0000 0125         }
                 ; 0000 0126 }
                 _0x8B:
000226 9508      	RET
                 ;
                 ;///////////////////////////////////////
                 ;
                 ;void lcd_putnum (long so,unsigned char x,unsigned char y)
                 ; 0000 012B {
                 _lcd_putnum:
                 ; 0000 012C    long a, b, c;
                 ; 0000 012D    a = so / 100;
000227 d292      	RCALL SUBOPT_0x1E
                 ;	so -> Y+14
                 ;	x -> Y+13
                 ;	y -> Y+12
                 ;	a -> Y+8
                 ;	b -> Y+4
                 ;	c -> Y+0
                 ; 0000 012E    b = (so - 100 * a) / 10;
                 ; 0000 012F    c = so - 100 * a - 10 * b;
000228 937f      	PUSH R23
000229 936f      	PUSH R22
00022a 93ff      	PUSH R31
00022b 93ef      	PUSH R30
00022c d2be      	RCALL SUBOPT_0x1F
00022d 91af      	POP  R26
00022e 91bf      	POP  R27
00022f 918f      	POP  R24
000230 919f      	POP  R25
000231 d2c3      	RCALL SUBOPT_0x20
                 ; 0000 0130    lcd_gotoxy (x, y) ;
                 ; 0000 0131    lcd_putchar (a + 48) ;
                 ; 0000 0132    lcd_putchar (b + 48) ;
                 ; 0000 0133    lcd_putsf(".");
                +
000232 e4e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000233 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000234 d2cf      	RCALL SUBOPT_0x21
                 ; 0000 0134    lcd_putchar (c + 48) ;
000235 c00b      	RJMP _0x20C0003
                 ; 0000 0135 }
                 ;
                 ;void lcd_putnum2 (long so,unsigned char x,unsigned char y)
                 ; 0000 0138 {
                 _lcd_putnum2:
                 ; 0000 0139    long a, b, c;
                 ; 0000 013A    a = so / 100;
000236 d283      	RCALL SUBOPT_0x1E
                 ;	so -> Y+14
                 ;	x -> Y+13
                 ;	y -> Y+12
                 ;	a -> Y+8
                 ;	b -> Y+4
                 ;	c -> Y+0
                 ; 0000 013B    b = (so - 100 * a) / 10;
                 ; 0000 013C    c = so - 100 * a - 10 * b;
000237 937f      	PUSH R23
000238 936f      	PUSH R22
000239 93ff      	PUSH R31
00023a 93ef      	PUSH R30
00023b d2af      	RCALL SUBOPT_0x1F
00023c 91af      	POP  R26
00023d 91bf      	POP  R27
00023e 918f      	POP  R24
00023f 919f      	POP  R25
000240 d2b4      	RCALL SUBOPT_0x20
                 ; 0000 013D    lcd_gotoxy (x, y) ;
                 ; 0000 013E    lcd_putchar (a + 48) ;
                 ; 0000 013F    lcd_putchar (b + 48) ;
                 ; 0000 0140    lcd_putchar (c + 48) ;
                 _0x20C0003:
000241 81e8      	LD   R30,Y
000242 5de0      	SUBI R30,-LOW(48)
000243 93ea      	ST   -Y,R30
000244 d178      	RCALL _lcd_putchar
                 ; 0000 0141 }
000245 9662      	ADIW R28,18
000246 9508      	RET
                 ;
                 ;//char display_buffer[32];
                 ;void hienthi_lcd()
                 ; 0000 0145 {
                 _hienthi_lcd:
                 ; 0000 0146     lcd_gotoxy(0,0);
000247 d2bf      	RCALL SUBOPT_0x22
000248 d2be      	RCALL SUBOPT_0x22
000249 d155      	RCALL _lcd_gotoxy
                 ; 0000 0147     lcd_putsf("T: ");
                +
00024a e4e6     +LDI R30 , LOW ( 2 * _0x0 + ( 2 ) )
00024b e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 2 ) )
                 	__POINTW1FN _0x0,2
00024c d2b7      	RCALL SUBOPT_0x21
                 ; 0000 0148     lcd_putnum(nhietdo,3,0);
00024d 91e0 0170 	LDS  R30,_nhietdo
00024f 91f0 0171 	LDS  R31,_nhietdo+1
000251 9160 0172 	LDS  R22,_nhietdo+2
000253 9170 0173 	LDS  R23,_nhietdo+3
000255 d3a6      	RCALL __PUTPARD1
000256 e0e3      	LDI  R30,LOW(3)
000257 93ea      	ST   -Y,R30
000258 d2ae      	RCALL SUBOPT_0x22
000259 dfcd      	RCALL _lcd_putnum
                 ; 0000 0149     lcd_gotoxy(7,0);
00025a e0e7      	LDI  R30,LOW(7)
00025b 93ea      	ST   -Y,R30
00025c d2aa      	RCALL SUBOPT_0x22
00025d d141      	RCALL _lcd_gotoxy
                 ; 0000 014A     lcd_putsf("  >  ");
                +
00025e e4ea     +LDI R30 , LOW ( 2 * _0x0 + ( 6 ) )
00025f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW1FN _0x0,6
000260 d2a3      	RCALL SUBOPT_0x21
                 ; 0000 014B     lcd_putnum(nhietdocd,12,0);
000261 d231      	RCALL SUBOPT_0x18
000262 2766      	CLR  R22
000263 2777      	CLR  R23
000264 d397      	RCALL __PUTPARD1
000265 e0ec      	LDI  R30,LOW(12)
000266 93ea      	ST   -Y,R30
000267 d29f      	RCALL SUBOPT_0x22
000268 dfbe      	RCALL _lcd_putnum
                 ; 0000 014C     lcd_gotoxy(0,1);
000269 d29d      	RCALL SUBOPT_0x22
00026a d29f      	RCALL SUBOPT_0x23
00026b d133      	RCALL _lcd_gotoxy
                 ; 0000 014D     lcd_putsf("H: ");
                +
00026c e5e0     +LDI R30 , LOW ( 2 * _0x0 + ( 12 ) )
00026d e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 12 ) )
                 	__POINTW1FN _0x0,12
00026e d295      	RCALL SUBOPT_0x21
                 ; 0000 014E     lcd_putnum(doam,3,1);
00026f 91e0 0174 	LDS  R30,_doam
000271 91f0 0175 	LDS  R31,_doam+1
000273 9160 0176 	LDS  R22,_doam+2
000275 9170 0177 	LDS  R23,_doam+3
000277 d384      	RCALL __PUTPARD1
000278 e0e3      	LDI  R30,LOW(3)
000279 93ea      	ST   -Y,R30
00027a d28f      	RCALL SUBOPT_0x23
00027b dfab      	RCALL _lcd_putnum
                 ; 0000 014F     lcd_gotoxy(7,1);
00027c e0e7      	LDI  R30,LOW(7)
00027d 93ea      	ST   -Y,R30
00027e d28b      	RCALL SUBOPT_0x23
00027f d11f      	RCALL _lcd_gotoxy
                 ; 0000 0150     lcd_putsf("      ");
                +
000280 e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 16 ) )
000281 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 16 ) )
                 	__POINTW1FN _0x0,16
000282 d281      	RCALL SUBOPT_0x21
                 ; 0000 0151     lcd_putnum2(ht_count_egg,13,1);
000283 01f6      	MOVW R30,R12
000284 2766      	CLR  R22
000285 2777      	CLR  R23
000286 d375      	RCALL __PUTPARD1
000287 e0ed      	LDI  R30,LOW(13)
000288 93ea      	ST   -Y,R30
000289 d280      	RCALL SUBOPT_0x23
00028a dfab      	RCALL _lcd_putnum2
                 ; 0000 0152 
                 ; 0000 0153 }
00028b 9508      	RET
                 ;
                 ;
                 ;///////////////////////////////////////////////
                 ;int count_i=0;
                 ;eeprom int dttudong=0;
                 ;
                 ;void main(void)
                 ; 0000 015B {
                 _main:
                 ; 0000 015C 
                 ; 0000 015D // Declare your local variables here
                 ; 0000 015E PORTB=0b1111111;
00028c e7ef      	LDI  R30,LOW(127)
00028d bbe8      	OUT  0x18,R30
                 ; 0000 015F DDRB=0b00000011;
00028e e0e3      	LDI  R30,LOW(3)
00028f bbe7      	OUT  0x17,R30
                 ; 0000 0160 
                 ; 0000 0161 PORTC=0xff;
000290 efef      	LDI  R30,LOW(255)
000291 bbe5      	OUT  0x15,R30
                 ; 0000 0162 DDRC=0xff;
000292 bbe4      	OUT  0x14,R30
                 ; 0000 0163 
                 ; 0000 0164 PORTD=0xff;
000293 bbe2      	OUT  0x12,R30
                 ; 0000 0165 DDRD=0x00;
000294 e0e0      	LDI  R30,LOW(0)
000295 bbe1      	OUT  0x11,R30
                 ; 0000 0166 
                 ; 0000 0167 // Timer/Counter 0 initialization
                 ; 0000 0168 // Clock source: System Clock
                 ; 0000 0169 // Clock value: Timer 0 Stopped
                 ; 0000 016A TCCR0=0x00;
000296 d19a      	RCALL SUBOPT_0x7
                 ; 0000 016B TCNT0=0x00;
                 ; 0000 016C 
                 ; 0000 016D // Timer/Counter 1 initialization
                 ; 0000 016E // Clock source: System Clock
                 ; 0000 016F // Clock value: 250.000 kHz
                 ; 0000 0170 // Mode: Normal top=0xFFFF
                 ; 0000 0171 // OC1A output: Discon.
                 ; 0000 0172 // OC1B output: Discon.
                 ; 0000 0173 // Noise Canceler: Off
                 ; 0000 0174 // Input Capture on Falling Edge
                 ; 0000 0175 // Timer1 Overflow Interrupt: On
                 ; 0000 0176 // Input Capture Interrupt: Off
                 ; 0000 0177 // Compare A Match Interrupt: Off
                 ; 0000 0178 // Compare B Match Interrupt: Off
                 ; 0000 0179 TCCR1A=0x00;
000297 d1f2      	RCALL SUBOPT_0x16
                 ; 0000 017A TCCR1B=0x03;
                 ; 0000 017B TCNT1H=0xFF;
                 ; 0000 017C TCNT1L=0x05;
                 ; 0000 017D ICR1H=0x00;
000298 d1f6      	RCALL SUBOPT_0x17
                 ; 0000 017E ICR1L=0x00;
                 ; 0000 017F OCR1AH=0x00;
000299 e0e0      	LDI  R30,LOW(0)
00029a bdeb      	OUT  0x2B,R30
                 ; 0000 0180 OCR1AL=0x00;
00029b bdea      	OUT  0x2A,R30
                 ; 0000 0181 OCR1BH=0x00;
00029c bde9      	OUT  0x29,R30
                 ; 0000 0182 OCR1BL=0x00;
00029d bde8      	OUT  0x28,R30
                 ; 0000 0183 
                 ; 0000 0184 // Timer/Counter 2 initialization
                 ; 0000 0185 // Clock source: System Clock
                 ; 0000 0186 // Clock value: Timer2 Stopped
                 ; 0000 0187 // Mode: Normal top=0xFF
                 ; 0000 0188 // OC2 output: Disconnected
                 ; 0000 0189 ASSR=0x00;
00029e bde2      	OUT  0x22,R30
                 ; 0000 018A TCCR2=0x00;
00029f d1b4      	RCALL SUBOPT_0xF
                 ; 0000 018B TCNT2=0x00;
0002a0 d198      	RCALL SUBOPT_0x9
                 ; 0000 018C OCR2=0x00;
0002a1 e0e0      	LDI  R30,LOW(0)
0002a2 bde3      	OUT  0x23,R30
                 ; 0000 018D 
                 ; 0000 018E // External Interrupt(s) initialization
                 ; 0000 018F // INT0: Off
                 ; 0000 0190 // INT1: Off
                 ; 0000 0191 MCUCR=0x00;
0002a3 bfe5      	OUT  0x35,R30
                 ; 0000 0192 
                 ; 0000 0193 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0194 TIMSK=0x04;
0002a4 e0e4      	LDI  R30,LOW(4)
0002a5 bfe9      	OUT  0x39,R30
                 ; 0000 0195 
                 ; 0000 0196 // USART initialization
                 ; 0000 0197 // USART disabled
                 ; 0000 0198 UCSRB=0x00;
0002a6 e0e0      	LDI  R30,LOW(0)
0002a7 b9ea      	OUT  0xA,R30
                 ; 0000 0199 
                 ; 0000 019A // Analog Comparator initialization
                 ; 0000 019B // Analog Comparator: Off
                 ; 0000 019C // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 019D ACSR=0x80;
0002a8 e8e0      	LDI  R30,LOW(128)
0002a9 b9e8      	OUT  0x8,R30
                 ; 0000 019E SFIOR=0x00;
0002aa e0e0      	LDI  R30,LOW(0)
0002ab bfe0      	OUT  0x30,R30
                 ; 0000 019F 
                 ; 0000 01A0 // ADC initialization
                 ; 0000 01A1 // ADC disabled
                 ; 0000 01A2 ADCSRA=0x00;
0002ac b9e6      	OUT  0x6,R30
                 ; 0000 01A3 
                 ; 0000 01A4 // SPI initialization
                 ; 0000 01A5 // SPI disabled
                 ; 0000 01A6 SPCR=0x00;
0002ad b9ed      	OUT  0xD,R30
                 ; 0000 01A7 
                 ; 0000 01A8 // TWI initialization
                 ; 0000 01A9 // TWI disabled
                 ; 0000 01AA TWCR=0x00;
0002ae bfe6      	OUT  0x36,R30
                 ; 0000 01AB 
                 ; 0000 01AC // Alphanumeric LCD initialization
                 ; 0000 01AD // Connections specified in the
                 ; 0000 01AE // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 01AF // RS - PORTD Bit 1
                 ; 0000 01B0 // RD - PORTD Bit 2
                 ; 0000 01B1 // EN - PORTD Bit 3
                 ; 0000 01B2 // D4 - PORTD Bit 4
                 ; 0000 01B3 // D5 - PORTD Bit 5
                 ; 0000 01B4 // D6 - PORTD Bit 6
                 ; 0000 01B5 // D7 - PORTD Bit 7
                 ; 0000 01B6 // Characters/line: 16
                 ; 0000 01B7 lcd_init(16);
0002af e1e0      	LDI  R30,LOW(16)
0002b0 93ea      	ST   -Y,R30
0002b1 d13b      	RCALL _lcd_init
                 ; 0000 01B8 
                 ; 0000 01B9 hong1=0;
0002b2 e0a0      	LDI  R26,LOW(_hong1)
0002b3 e0b0      	LDI  R27,HIGH(_hong1)
0002b4 d16c      	RCALL SUBOPT_0x2
                 ; 0000 01BA hong2=0;
0002b5 e0a2      	LDI  R26,LOW(_hong2)
0002b6 e0b0      	LDI  R27,HIGH(_hong2)
0002b7 d169      	RCALL SUBOPT_0x2
                 ; 0000 01BB hong3=0;
0002b8 e0a4      	LDI  R26,LOW(_hong3)
0002b9 e0b0      	LDI  R27,HIGH(_hong3)
0002ba d166      	RCALL SUBOPT_0x2
                 ; 0000 01BC 
                 ; 0000 01BD // Watchdog Timer initialization
                 ; 0000 01BE // Watchdog Timer Prescaler: OSC/2048k
                 ; 0000 01BF #pragma optsize-
                 ; 0000 01C0 WDTCR=0x1F;
0002bb e1ef      	LDI  R30,LOW(31)
0002bc bde1      	OUT  0x21,R30
                 ; 0000 01C1 WDTCR=0x0F;
0002bd e0ef      	LDI  R30,LOW(15)
0002be bde1      	OUT  0x21,R30
                 ; 0000 01C2 #ifdef _OPTIMIZE_SIZE_
                 ; 0000 01C3 #pragma optsize+
                 ; 0000 01C4 #endif
                 ; 0000 01C5 
                 ; 0000 01C6 // Global enable interrupts
                 ; 0000 01C7 #asm("sei")
0002bf 9478      	sei
                 ; 0000 01C8 
                 ; 0000 01C9 //lcd_putsf(">>>>NQ Fairy<<<<");
                 ; 0000 01CA delay_ms(10);
0002c0 d24c      	RCALL SUBOPT_0x24
0002c1 d24e      	RCALL SUBOPT_0x25
0002c2 d275      	RCALL _delay_ms
                 ; 0000 01CB //beepe(20,80,2);
                 ; 0000 01CC reset_all();
0002c3 de16      	RCALL _reset_all
                 ; 0000 01CD while (1)
                 _0x8C:
                 ; 0000 01CE    {
                 ; 0000 01CF       if (set_am2301==1)
0002c4 fe20      	SBRS R2,0
0002c5 c005      	RJMP _0x8F
                 ; 0000 01D0         {
                 ; 0000 01D1         set_am2301=0;
0002c6 94e8      	CLT
0002c7 f820      	BLD  R2,0
                 ; 0000 01D2         read_am2301();
0002c8 de39      	RCALL _read_am2301
                 ; 0000 01D3         control_remember();
0002c9 deea      	RCALL _control_remember
                 ; 0000 01D4         #asm("WDR");
0002ca 95a8      	WDR
                 ; 0000 01D5         }
                 ; 0000 01D6 
                 ; 0000 01D7       if (set_key==1)
                 _0x8F:
0002cb fe21      	SBRS R2,1
0002cc c063      	RJMP _0x90
                 ; 0000 01D8         {
                 ; 0000 01D9         read_key();
0002cd df49      	RCALL _read_key
                 ; 0000 01DA         if (button_motor == on)
0002ce fc25      	SBRC R2,5
0002cf c02e      	RJMP _0x91
                 ; 0000 01DB             {
                 ; 0000 01DC             for (count_i=0; count_i<=7; count_i++)
0002d0 e0e0      	LDI  R30,LOW(0)
0002d1 93e0 0179 	STS  _count_i,R30
0002d3 93e0 017a 	STS  _count_i+1,R30
                 _0x93:
0002d5 91a0 0179 	LDS  R26,_count_i
0002d7 91b0 017a 	LDS  R27,_count_i+1
0002d9 9718      	SBIW R26,8
0002da f51c      	BRGE _0x94
                 ; 0000 01DD               {
                 ; 0000 01DE                 delay_mms(50);
0002db d237      	RCALL SUBOPT_0x26
                 ; 0000 01DF                 if(button_m==0) button_motor=on; else button_motor=off;
0002dc 99b4      	SBIC 0x16,4
0002dd c002      	RJMP _0x95
0002de 94e8      	CLT
0002df c001      	RJMP _0xCA
                 _0x95:
0002e0 9468      	SET
                 _0xCA:
0002e1 f825      	BLD  R2,5
                 ; 0000 01E0                 delay_mms(50);
0002e2 d230      	RCALL SUBOPT_0x26
                 ; 0000 01E1                 if(button_motor==off)
0002e3 fe25      	SBRS R2,5
0002e4 c011      	RJMP _0x97
                 ; 0000 01E2                 {
                 ; 0000 01E3                 count_i=11;
0002e5 e0eb      	LDI  R30,LOW(11)
0002e6 e0f0      	LDI  R31,HIGH(11)
0002e7 93e0 0179 	STS  _count_i,R30
0002e9 93f0 017a 	STS  _count_i+1,R31
                 ; 0000 01E4                 if (dttudong==0) dttudong=1; else dttudong=0;
0002eb d22a      	RCALL SUBOPT_0x27
0002ec d321      	RCALL __EEPROMRDW
0002ed 9730      	SBIW R30,0
0002ee f419      	BRNE _0x98
0002ef d226      	RCALL SUBOPT_0x27
0002f0 d228      	RCALL SUBOPT_0x28
0002f1 c003      	RJMP _0xCB
                 _0x98:
0002f2 d223      	RCALL SUBOPT_0x27
0002f3 e0e0      	LDI  R30,LOW(0)
0002f4 e0f0      	LDI  R31,HIGH(0)
                 _0xCB:
0002f5 d328      	RCALL __EEPROMWRW
                 ; 0000 01E5                 }
                 ; 0000 01E6               }
                 _0x97:
0002f6 e7a9      	LDI  R26,LOW(_count_i)
0002f7 e0b1      	LDI  R27,HIGH(_count_i)
0002f8 91ed      	LD   R30,X+
0002f9 91fd      	LD   R31,X+
0002fa 9631      	ADIW R30,1
0002fb 93fe      	ST   -X,R31
0002fc 93ee      	ST   -X,R30
0002fd cfd7      	RJMP _0x93
                 _0x94:
                 ; 0000 01E7             }
                 ; 0000 01E8 
                 ; 0000 01E9         if (button_motor == on)
                 _0x91:
0002fe fc25      	SBRC R2,5
0002ff c020      	RJMP _0x9A
                 ; 0000 01EA             {
                 ; 0000 01EB             lcd_clear();
000300 d0ae      	RCALL _lcd_clear
                 ; 0000 01EC             delay_mms(10);
000301 d20b      	RCALL SUBOPT_0x24
000302 d125      	RCALL SUBOPT_0x4
                 ; 0000 01ED             lcd_putsf("Dao Trung               Bang Tay");
                +
000303 e5eb     +LDI R30 , LOW ( 2 * _0x0 + ( 23 ) )
000304 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 23 ) )
                 	__POINTW1FN _0x0,23
000305 d1fe      	RCALL SUBOPT_0x21
                 ; 0000 01EE             motor=on;
000306 98ac      	CBI  0x15,4
                 ; 0000 01EF             beep(20,30,1);
000307 d214      	RCALL SUBOPT_0x29
                 ; 0000 01F0             while (button_motor == on)
                 _0x9D:
000308 fc25      	SBRC R2,5
000309 c00f      	RJMP _0x9F
                 ; 0000 01F1             {
                 ; 0000 01F2             reset_all();
00030a ddcf      	RCALL _reset_all
                 ; 0000 01F3             delay_mms(70);
00030b e4e6      	LDI  R30,LOW(70)
00030c e0f0      	LDI  R31,HIGH(70)
00030d d11a      	RCALL SUBOPT_0x4
                 ; 0000 01F4             if(button_m==0) button_motor=0; else button_motor=1;
00030e 99b4      	SBIC 0x16,4
00030f c002      	RJMP _0xA0
000310 94e8      	CLT
000311 c001      	RJMP _0xCC
                 _0xA0:
000312 9468      	SET
                 _0xCC:
000313 f825      	BLD  R2,5
                 ; 0000 01F5             delay_mms(70);
000314 e4e6      	LDI  R30,LOW(70)
000315 e0f0      	LDI  R31,HIGH(70)
000316 d111      	RCALL SUBOPT_0x4
                 ; 0000 01F6             #asm("WDR");
000317 95a8      	WDR
                 ; 0000 01F7             }
000318 cfef      	RJMP _0x9D
                 _0x9F:
                 ; 0000 01F8             delay_mms(10);
000319 d1f3      	RCALL SUBOPT_0x24
00031a d10d      	RCALL SUBOPT_0x4
                 ; 0000 01F9             motor=off;
00031b 9aac      	SBI  0x15,4
                 ; 0000 01FA             lcd_clear();
00031c d092      	RCALL _lcd_clear
                 ; 0000 01FB             delay_mms(10);
00031d d1ef      	RCALL SUBOPT_0x24
00031e d109      	RCALL SUBOPT_0x4
                 ; 0000 01FC             reset_all();
00031f ddba      	RCALL _reset_all
                 ; 0000 01FD             }
                 ; 0000 01FE         if (dttudong==on) led=1;
                 _0x9A:
000320 d1f5      	RCALL SUBOPT_0x27
000321 d2ec      	RCALL __EEPROMRDW
000322 9730      	SBIW R30,0
000323 f411      	BRNE _0xA4
000324 9ac1      	SBI  0x18,1
                 ; 0000 01FF             else {led=0; count_eep=0; set_egg=0; ht_count_egg=0; }
000325 c007      	RJMP _0xA7
                 _0xA4:
000326 98c1      	CBI  0x18,1
000327 24aa      	CLR  R10
000328 24bb      	CLR  R11
000329 94e8      	CLT
00032a f822      	BLD  R2,2
00032b 24cc      	CLR  R12
00032c 24dd      	CLR  R13
                 _0xA7:
                 ; 0000 0200         hienthi_lcd();
00032d df19      	RCALL _hienthi_lcd
                 ; 0000 0201         set_key=0;
00032e 94e8      	CLT
00032f f821      	BLD  R2,1
                 ; 0000 0202         }
                 ; 0000 0203 
                 ; 0000 0204       if ((set_egg==1)&(dttudong==on))
                 _0x90:
000330 e0a0      	LDI  R26,0
000331 fc22      	SBRC R2,2
000332 e0a1      	LDI  R26,1
000333 e0e1      	LDI  R30,LOW(1)
000334 d22f      	RCALL __EQB12
000335 2e0e      	MOV  R0,R30
000336 d1df      	RCALL SUBOPT_0x27
000337 d2d6      	RCALL __EEPROMRDW
000338 e0a0      	LDI  R26,LOW(0)
000339 e0b0      	LDI  R27,HIGH(0)
00033a d22e      	RCALL __EQW12
00033b 21e0      	AND  R30,R0
00033c f181      	BREQ _0xAA
                 ; 0000 0205         {
                 ; 0000 0206          fan_top=fan_bottom=fan_o2=lamp=humidifier=motor=off;
00033d 9aac      	SBI  0x15,4
00033e 9aab      	SBI  0x15,3
00033f 9aad      	SBI  0x15,5
000340 9aaa      	SBI  0x15,2
000341 9aa8      	SBI  0x15,0
000342 9aa9      	SBI  0x15,1
                 ; 0000 0207          lcd_clear();
000343 d06b      	RCALL _lcd_clear
                 ; 0000 0208          beep(20,30,1);
000344 d1d7      	RCALL SUBOPT_0x29
                 ; 0000 0209          lcd_putsf("Dao Trung               Tu Dong ");
                +
000345 e7ec     +LDI R30 , LOW ( 2 * _0x0 + ( 56 ) )
000346 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 56 ) )
                 	__POINTW1FN _0x0,56
000347 d1bc      	RCALL SUBOPT_0x21
                 ; 0000 020A          motor=on;
000348 98ac      	CBI  0x15,4
                 ; 0000 020B          while (button_sw==1)
                 _0xB9:
000349 fe26      	SBRS R2,6
00034a c00a      	RJMP _0xBB
                 ; 0000 020C          {
                 ; 0000 020D          delay_mms(50);
00034b d1c7      	RCALL SUBOPT_0x26
                 ; 0000 020E          if(button_s==0) button_sw=0; else button_sw=1;
00034c 99b5      	SBIC 0x16,5
00034d c002      	RJMP _0xBC
00034e 94e8      	CLT
00034f c001      	RJMP _0xCD
                 _0xBC:
000350 9468      	SET
                 _0xCD:
000351 f826      	BLD  R2,6
                 ; 0000 020F          delay_mms(50);
000352 d1c0      	RCALL SUBOPT_0x26
                 ; 0000 0210          #asm("WDR");
000353 95a8      	WDR
                 ; 0000 0211          }
000354 cff4      	RJMP _0xB9
                 _0xBB:
                 ; 0000 0212          delay_mms(300);
000355 e2ec      	LDI  R30,LOW(300)
000356 e0f1      	LDI  R31,HIGH(300)
000357 d0d0      	RCALL SUBOPT_0x4
                 ; 0000 0213          while (button_sw==0)
                 _0xBE:
000358 fc26      	SBRC R2,6
000359 c00a      	RJMP _0xC0
                 ; 0000 0214          {
                 ; 0000 0215          delay_mms(50);
00035a d1b8      	RCALL SUBOPT_0x26
                 ; 0000 0216          if(button_s==0) button_sw=0; else button_sw=1;
00035b 99b5      	SBIC 0x16,5
00035c c002      	RJMP _0xC1
00035d 94e8      	CLT
00035e c001      	RJMP _0xCE
                 _0xC1:
00035f 9468      	SET
                 _0xCE:
000360 f826      	BLD  R2,6
                 ; 0000 0217          delay_mms(50);
000361 d1b1      	RCALL SUBOPT_0x26
                 ; 0000 0218          #asm("WDR");
000362 95a8      	WDR
                 ; 0000 0219          }
000363 cff4      	RJMP _0xBE
                 _0xC0:
                 ; 0000 021A          delay_mms(50);
000364 d1ae      	RCALL SUBOPT_0x26
                 ; 0000 021B          beep(20,30,1);
000365 d1b6      	RCALL SUBOPT_0x29
                 ; 0000 021C          set_egg=0;
000366 94e8      	CLT
000367 f822      	BLD  R2,2
                 ; 0000 021D          delay_mms(300);
000368 e2ec      	LDI  R30,LOW(300)
000369 e0f1      	LDI  R31,HIGH(300)
00036a d0bd      	RCALL SUBOPT_0x4
                 ; 0000 021E          motor=off;
00036b 9aac      	SBI  0x15,4
                 ; 0000 021F          reset_all();
00036c dd6d      	RCALL _reset_all
                 ; 0000 0220         }
                 ; 0000 0221 
                 ; 0000 0222    }
                 _0xAA:
00036d cf56      	RJMP _0x8C
                 ; 0000 0223 
                 ; 0000 0224 }
                 _0xC5:
00036e cfff      	RJMP _0xC5
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G102:
00036f 81e8      	LD   R30,Y
000370 71e0      	ANDI R30,LOW(0x10)
000371 f011      	BREQ _0x2040004
000372 9a94      	SBI  0x12,4
000373 c001      	RJMP _0x2040005
                 _0x2040004:
000374 9894      	CBI  0x12,4
                 _0x2040005:
000375 81e8      	LD   R30,Y
000376 72e0      	ANDI R30,LOW(0x20)
000377 f011      	BREQ _0x2040006
000378 9a95      	SBI  0x12,5
000379 c001      	RJMP _0x2040007
                 _0x2040006:
00037a 9895      	CBI  0x12,5
                 _0x2040007:
00037b 81e8      	LD   R30,Y
00037c 74e0      	ANDI R30,LOW(0x40)
00037d f011      	BREQ _0x2040008
00037e 9a96      	SBI  0x12,6
00037f c001      	RJMP _0x2040009
                 _0x2040008:
000380 9896      	CBI  0x12,6
                 _0x2040009:
000381 81e8      	LD   R30,Y
000382 78e0      	ANDI R30,LOW(0x80)
000383 f011      	BREQ _0x204000A
000384 9a97      	SBI  0x12,7
000385 c001      	RJMP _0x204000B
                 _0x204000A:
000386 9897      	CBI  0x12,7
                 _0x204000B:
                +
000387 e08b     +LDI R24 , LOW ( 11 )
                +__DELAY_USB_LOOP :
000388 958a     +DEC R24
000389 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 11
00038a 9a93      	SBI  0x12,3
                +
00038b e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00038c 958a     +DEC R24
00038d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
00038e 9893      	CBI  0x12,3
                +
00038f e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000390 958a     +DEC R24
000391 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000392 c083      	RJMP _0x20C0001
                 __lcd_write_data:
000393 81e8      	LD   R30,Y
000394 d190      	RCALL SUBOPT_0x2A
000395 81e8          ld    r30,y
000396 95e2          swap  r30
000397 83e8          st    y,r30
000398 81e8      	LD   R30,Y
000399 d18b      	RCALL SUBOPT_0x2A
                +
00039a ec88     +LDI R24 , LOW ( 200 )
00039b e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00039c 9701     +SBIW R24 , 1
00039d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00039e c077      	RJMP _0x20C0001
                 _lcd_gotoxy:
00039f 81e8      	LD   R30,Y
0003a0 e0f0      	LDI  R31,0
0003a1 58e1      	SUBI R30,LOW(-__base_y_G102)
0003a2 4ffe      	SBCI R31,HIGH(-__base_y_G102)
0003a3 81e0      	LD   R30,Z
0003a4 81a9      	LDD  R26,Y+1
0003a5 0fea      	ADD  R30,R26
0003a6 d180      	RCALL SUBOPT_0x2B
0003a7 81e9      	LDD  R30,Y+1
0003a8 93e0 0183 	STS  __lcd_x,R30
0003aa 81e8      	LD   R30,Y
0003ab 93e0 0184 	STS  __lcd_y,R30
                 _0x20C0002:
0003ad 9622      	ADIW R28,2
0003ae 9508      	RET
                 _lcd_clear:
0003af e0e2      	LDI  R30,LOW(2)
0003b0 d176      	RCALL SUBOPT_0x2B
0003b1 d177      	RCALL SUBOPT_0x2C
0003b2 e0ec      	LDI  R30,LOW(12)
0003b3 d173      	RCALL SUBOPT_0x2B
0003b4 d155      	RCALL SUBOPT_0x23
0003b5 dfdd      	RCALL __lcd_write_data
0003b6 d172      	RCALL SUBOPT_0x2C
0003b7 e0e0      	LDI  R30,LOW(0)
0003b8 93e0 0184 	STS  __lcd_y,R30
0003ba 93e0 0183 	STS  __lcd_x,R30
0003bc 9508      	RET
                 _lcd_putchar:
0003bd 81a8      	LD   R26,Y
0003be 30aa      	CPI  R26,LOW(0xA)
0003bf f031      	BREQ _0x2040011
0003c0 91e0 0185 	LDS  R30,__lcd_maxx
0003c2 91a0 0183 	LDS  R26,__lcd_x
0003c4 17ae      	CP   R26,R30
0003c5 f060      	BRLO _0x2040010
                 _0x2040011:
0003c6 d140      	RCALL SUBOPT_0x22
0003c7 91e0 0184 	LDS  R30,__lcd_y
0003c9 5fef      	SUBI R30,-LOW(1)
0003ca 93e0 0184 	STS  __lcd_y,R30
0003cc 93ea      	ST   -Y,R30
0003cd dfd1      	RCALL _lcd_gotoxy
0003ce 81a8      	LD   R26,Y
0003cf 30aa      	CPI  R26,LOW(0xA)
0003d0 f409      	BRNE _0x2040013
0003d1 c044      	RJMP _0x20C0001
                 _0x2040013:
                 _0x2040010:
0003d2 91e0 0183 	LDS  R30,__lcd_x
0003d4 5fef      	SUBI R30,-LOW(1)
0003d5 93e0 0183 	STS  __lcd_x,R30
0003d7 9a91      	SBI  0x12,1
0003d8 81e8      	LD   R30,Y
0003d9 d14d      	RCALL SUBOPT_0x2B
0003da 9891      	CBI  0x12,1
0003db c03a      	RJMP _0x20C0001
                 _lcd_putsf:
0003dc 931a      	ST   -Y,R17
                 _0x2040017:
0003dd 81e9      	LDD  R30,Y+1
0003de 81fa      	LDD  R31,Y+1+1
0003df 9631      	ADIW R30,1
0003e0 83e9      	STD  Y+1,R30
0003e1 83fa      	STD  Y+1+1,R31
0003e2 9731      	SBIW R30,1
0003e3 91e4      	LPM  R30,Z
0003e4 2f1e      	MOV  R17,R30
0003e5 30e0      	CPI  R30,0
0003e6 f019      	BREQ _0x2040019
0003e7 931a      	ST   -Y,R17
0003e8 dfd4      	RCALL _lcd_putchar
0003e9 cff3      	RJMP _0x2040017
                 _0x2040019:
0003ea 8118      	LDD  R17,Y+0
0003eb 9623      	ADIW R28,3
0003ec 9508      	RET
                 _lcd_init:
0003ed 9a8c      	SBI  0x11,4
0003ee 9a8d      	SBI  0x11,5
0003ef 9a8e      	SBI  0x11,6
0003f0 9a8f      	SBI  0x11,7
0003f1 9a8b      	SBI  0x11,3
0003f2 9a89      	SBI  0x11,1
0003f3 9a8a      	SBI  0x11,2
0003f4 9893      	CBI  0x12,3
0003f5 9891      	CBI  0x12,1
0003f6 9892      	CBI  0x12,2
0003f7 81e8      	LD   R30,Y
0003f8 93e0 0185 	STS  __lcd_maxx,R30
0003fa 58e0      	SUBI R30,-LOW(128)
                +
0003fb 93e0 0181+STS __base_y_G102 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G102,2
0003fd 81e8      	LD   R30,Y
0003fe 54e0      	SUBI R30,-LOW(192)
                +
0003ff 93e0 0182+STS __base_y_G102 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G102,3
000401 e1e4      	LDI  R30,LOW(20)
000402 e0f0      	LDI  R31,HIGH(20)
000403 d10c      	RCALL SUBOPT_0x25
000404 d133      	RCALL _delay_ms
000405 e3e0      	LDI  R30,LOW(48)
000406 d11e      	RCALL SUBOPT_0x2A
000407 d125      	RCALL SUBOPT_0x2D
000408 d124      	RCALL SUBOPT_0x2D
000409 d129      	RCALL SUBOPT_0x2E
00040a e2e0      	LDI  R30,LOW(32)
00040b d119      	RCALL SUBOPT_0x2A
00040c d126      	RCALL SUBOPT_0x2E
00040d e2e8      	LDI  R30,LOW(40)
00040e d118      	RCALL SUBOPT_0x2B
00040f e0e4      	LDI  R30,LOW(4)
000410 d116      	RCALL SUBOPT_0x2B
000411 e8e5      	LDI  R30,LOW(133)
000412 d114      	RCALL SUBOPT_0x2B
000413 e0e6      	LDI  R30,LOW(6)
000414 d112      	RCALL SUBOPT_0x2B
000415 df99      	RCALL _lcd_clear
                 _0x20C0001:
000416 9621      	ADIW R28,1
000417 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.ESEG
                 _hong1:
000000           	.BYTE 0x2
                 _hong2:
000002           	.BYTE 0x2
                 _hong3:
000004           	.BYTE 0x2
                 _count_egg:
000006 00 00     	.DW  0x0
                 
                 	.DSEG
                 _doamh:
000160           	.BYTE 0x4
                 _doaml:
000164           	.BYTE 0x4
                 _nhietdoh:
000168           	.BYTE 0x4
                 _nhietdol:
00016c           	.BYTE 0x4
                 _nhietdo:
000170           	.BYTE 0x4
                 _doam:
000174           	.BYTE 0x4
                 
                 	.ESEG
                 _nhietdocd:
000008 72 01     	.DW  0x172
                 
                 	.DSEG
                 _remember_t:
000178           	.BYTE 0x1
                 _count_i:
000179           	.BYTE 0x2
                 
                 	.ESEG
                 _dttudong:
00000a 00 00     	.DW  0x0
                 
                 	.DSEG
                 __seed_G101:
00017b           	.BYTE 0x4
                 __base_y_G102:
00017f           	.BYTE 0x4
                 __lcd_x:
000183           	.BYTE 0x1
                 __lcd_y:
000184           	.BYTE 0x1
                 __lcd_maxx:
000185           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x0:
000418 efef      	LDI  R30,LOW(255)
000419 bded      	OUT  0x2D,R30
00041a e0e5      	LDI  R30,LOW(5)
00041b bdec      	OUT  0x2C,R30
00041c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
00041d e0a6      	LDI  R26,LOW(_count_egg)
00041e e0b0      	LDI  R27,HIGH(_count_egg)
00041f d1ee      	RCALL __EEPROMRDW
000420 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2:
000421 e0e0      	LDI  R30,LOW(0)
000422 e0f0      	LDI  R31,HIGH(0)
000423 d1fa      	RCALL __EEPROMWRW
000424 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3:
                +
000425 e000     +LDI R16 , LOW ( 0 )
000426 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
000427 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0x4:
000428 93fa      	ST   -Y,R31
000429 93ea      	ST   -Y,R30
00042a ccba      	RJMP _delay_mms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
                +
00042b 5f0f     +SUBI R16 , LOW ( - 1 )
00042c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00042d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
                +
00042e e820     +LDI R18 , LOW ( 128 )
00042f e030     +LDI R19 , HIGH ( 128 )
                 	__GETWRN 18,19,128
000430 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
000431 bfe3      	OUT  0x33,R30
000432 e0e0      	LDI  R30,LOW(0)
000433 bfe2      	OUT  0x32,R30
000434 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x8:
                +
000435 3008     +CPI R16 , LOW ( 8 )
000436 e0e0     +LDI R30 , HIGH ( 8 )
000437 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000438 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x9:
000439 e0e0      	LDI  R30,LOW(0)
00043a bde4      	OUT  0x24,R30
00043b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
00043c e0e2      	LDI  R30,LOW(2)
00043d bde5      	OUT  0x25,R30
00043e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
00043f b5e4      	IN   R30,0x24
000440 36e1      	CPI  R30,LOW(0x61)
000441 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xC:
000442 d11c      	RCALL __CWD1
000443 d100      	RCALL __ADDD12
000444 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
000445 93e0 0160 	STS  _doamh,R30
000447 93f0 0161 	STS  _doamh+1,R31
000449 9360 0162 	STS  _doamh+2,R22
00044b 9370 0163 	STS  _doamh+3,R23
00044d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xE:
00044e 01d9      	MOVW R26,R18
00044f e0e2      	LDI  R30,LOW(2)
000450 e0f0      	LDI  R31,HIGH(2)
000451 d155      	RCALL __DIVW21
000452 019f      	MOVW R18,R30
000453 cfe5      	RJMP SUBOPT_0x9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xF:
000454 e0e0      	LDI  R30,LOW(0)
000455 bde5      	OUT  0x25,R30
000456 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
000457 91a0 0164 	LDS  R26,_doaml
000459 91b0 0165 	LDS  R27,_doaml+1
00045b 9180 0166 	LDS  R24,_doaml+2
00045d 9190 0167 	LDS  R25,_doaml+3
00045f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x11:
000460 93e0 0164 	STS  _doaml,R30
000462 93f0 0165 	STS  _doaml+1,R31
000464 9360 0166 	STS  _doaml+2,R22
000466 9370 0167 	STS  _doaml+3,R23
000468 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12:
000469 93e0 0168 	STS  _nhietdoh,R30
00046b 93f0 0169 	STS  _nhietdoh+1,R31
00046d 9360 016a 	STS  _nhietdoh+2,R22
00046f 9370 016b 	STS  _nhietdoh+3,R23
000471 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x13:
000472 91a0 016c 	LDS  R26,_nhietdol
000474 91b0 016d 	LDS  R27,_nhietdol+1
000476 9180 016e 	LDS  R24,_nhietdol+2
000478 9190 016f 	LDS  R25,_nhietdol+3
00047a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x14:
00047b 93e0 016c 	STS  _nhietdol,R30
00047d 93f0 016d 	STS  _nhietdol+1,R31
00047f 9360 016e 	STS  _nhietdol+2,R22
000481 9370 016f 	STS  _nhietdol+3,R23
000483 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x15:
                +
000484 e0a0     +LDI R26 , LOW ( 0x100 )
000485 e0b1     +LDI R27 , HIGH ( 0x100 )
000486 e080     +LDI R24 , BYTE3 ( 0x100 )
000487 e090     +LDI R25 , BYTE4 ( 0x100 )
                 	__GETD2N 0x100
000488 d106      	RCALL __MULD12
000489 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
00048a e0e0      	LDI  R30,LOW(0)
00048b bdef      	OUT  0x2F,R30
00048c e0e3      	LDI  R30,LOW(3)
00048d bdee      	OUT  0x2E,R30
00048e cf89      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
00048f e0e0      	LDI  R30,LOW(0)
000490 bde7      	OUT  0x27,R30
000491 bde6      	OUT  0x26,R30
000492 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x18:
000493 e0a8      	LDI  R26,LOW(_nhietdocd)
000494 e0b0      	LDI  R27,HIGH(_nhietdocd)
000495 d178      	RCALL __EEPROMRDW
000496 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:28 WORDS
                 SUBOPT_0x19:
000497 91a0 0170 	LDS  R26,_nhietdo
000499 91b0 0171 	LDS  R27,_nhietdo+1
00049b 9180 0172 	LDS  R24,_nhietdo+2
00049d 9190 0173 	LDS  R25,_nhietdo+3
00049f 2766      	CLR  R22
0004a0 2777      	CLR  R23
0004a1 d19a      	RCALL __CPD21
0004a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1A:
0004a3 93e0 0178 	STS  _remember_t,R30
0004a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
0004a6 98a9      	CBI  0x15,1
0004a7 98a8      	CBI  0x15,0
0004a8 98aa      	CBI  0x15,2
0004a9 cfe9      	RJMP SUBOPT_0x18
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1C:
0004aa e0e2      	LDI  R30,LOW(2)
0004ab e0f0      	LDI  R31,HIGH(2)
0004ac cf7b      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x1D:
0004ad e0ea      	LDI  R30,LOW(10)
0004ae e0f0      	LDI  R31,HIGH(10)
0004af 93fa      	ST   -Y,R31
0004b0 93ea      	ST   -Y,R30
0004b1 e2e8      	LDI  R30,LOW(40)
0004b2 e0f0      	LDI  R31,HIGH(40)
0004b3 93fa      	ST   -Y,R31
0004b4 93ea      	ST   -Y,R30
0004b5 e0e1      	LDI  R30,LOW(1)
0004b6 e0f0      	LDI  R31,HIGH(1)
0004b7 93fa      	ST   -Y,R31
0004b8 93ea      	ST   -Y,R30
0004b9 cc33      	RJMP _beep
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x1E:
0004ba 972c      	SBIW R28,12
                +
0004bb 85ae     +LDD R26 , Y + 14
0004bc 85bf     +LDD R27 , Y + 14 + 1
0004bd 8988     +LDD R24 , Y + 14 + 2
0004be 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
                +
0004bf e6e4     +LDI R30 , LOW ( 0x64 )
0004c0 e0f0     +LDI R31 , HIGH ( 0x64 )
0004c1 e060     +LDI R22 , BYTE3 ( 0x64 )
0004c2 e070     +LDI R23 , BYTE4 ( 0x64 )
                 	__GETD1N 0x64
0004c3 d10d      	RCALL __DIVD21
                +
0004c4 87e8     +STD Y + 8 , R30
0004c5 87f9     +STD Y + 8 + 1 , R31
0004c6 876a     +STD Y + 8 + 2 , R22
0004c7 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                +
0004c8 e6a4     +LDI R26 , LOW ( 0x64 )
0004c9 e0b0     +LDI R27 , HIGH ( 0x64 )
0004ca e080     +LDI R24 , BYTE3 ( 0x64 )
0004cb e090     +LDI R25 , BYTE4 ( 0x64 )
                 	__GETD2N 0x64
0004cc d0c2      	RCALL __MULD12
                +
0004cd 85ae     +LDD R26 , Y + 14
0004ce 85bf     +LDD R27 , Y + 14 + 1
0004cf 8988     +LDD R24 , Y + 14 + 2
0004d0 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
0004d1 d07c      	RCALL __SUBD21
                +
0004d2 e0ea     +LDI R30 , LOW ( 0xA )
0004d3 e0f0     +LDI R31 , HIGH ( 0xA )
0004d4 e060     +LDI R22 , BYTE3 ( 0xA )
0004d5 e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
0004d6 d0fa      	RCALL __DIVD21
                +
0004d7 83ec     +STD Y + 4 , R30
0004d8 83fd     +STD Y + 4 + 1 , R31
0004d9 836e     +STD Y + 4 + 2 , R22
0004da 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                +
0004db 85e8     +LDD R30 , Y + 8
0004dc 85f9     +LDD R31 , Y + 8 + 1
0004dd 856a     +LDD R22 , Y + 8 + 2
0004de 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
                +
0004df e6a4     +LDI R26 , LOW ( 0x64 )
0004e0 e0b0     +LDI R27 , HIGH ( 0x64 )
0004e1 e080     +LDI R24 , BYTE3 ( 0x64 )
0004e2 e090     +LDI R25 , BYTE4 ( 0x64 )
                 	__GETD2N 0x64
0004e3 d0ab      	RCALL __MULD12
                +
0004e4 85ae     +LDD R26 , Y + 14
0004e5 85bf     +LDD R27 , Y + 14 + 1
0004e6 8988     +LDD R24 , Y + 14 + 2
0004e7 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
0004e8 d118      	RCALL __SWAPD12
0004e9 d05f      	RCALL __SUBD12
0004ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1F:
                +
0004eb 81ec     +LDD R30 , Y + 4
0004ec 81fd     +LDD R31 , Y + 4 + 1
0004ed 816e     +LDD R22 , Y + 4 + 2
0004ee 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0004ef e0aa     +LDI R26 , LOW ( 0xA )
0004f0 e0b0     +LDI R27 , HIGH ( 0xA )
0004f1 e080     +LDI R24 , BYTE3 ( 0xA )
0004f2 e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
0004f3 d09b      	RCALL __MULD12
0004f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x20:
0004f5 d058      	RCALL __SUBD21
0004f6 d100      	RCALL __PUTD2S0
0004f7 85ed      	LDD  R30,Y+13
0004f8 93ea      	ST   -Y,R30
0004f9 85ed      	LDD  R30,Y+13
0004fa 93ea      	ST   -Y,R30
0004fb dea3      	RCALL _lcd_gotoxy
0004fc 85e8      	LDD  R30,Y+8
0004fd 5de0      	SUBI R30,-LOW(48)
0004fe 93ea      	ST   -Y,R30
0004ff debd      	RCALL _lcd_putchar
000500 81ec      	LDD  R30,Y+4
000501 5de0      	SUBI R30,-LOW(48)
000502 93ea      	ST   -Y,R30
000503 ceb9      	RJMP _lcd_putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x21:
000504 93fa      	ST   -Y,R31
000505 93ea      	ST   -Y,R30
000506 ced5      	RJMP _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x22:
000507 e0e0      	LDI  R30,LOW(0)
000508 93ea      	ST   -Y,R30
000509 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x23:
00050a e0e1      	LDI  R30,LOW(1)
00050b 93ea      	ST   -Y,R30
00050c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
00050d e0ea      	LDI  R30,LOW(10)
00050e e0f0      	LDI  R31,HIGH(10)
00050f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x25:
000510 93fa      	ST   -Y,R31
000511 93ea      	ST   -Y,R30
000512 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x26:
000513 e3e2      	LDI  R30,LOW(50)
000514 e0f0      	LDI  R31,HIGH(50)
000515 cf12      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x27:
000516 e0aa      	LDI  R26,LOW(_dttudong)
000517 e0b0      	LDI  R27,HIGH(_dttudong)
000518 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
000519 e0e1      	LDI  R30,LOW(1)
00051a e0f0      	LDI  R31,HIGH(1)
00051b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x29:
00051c e1e4      	LDI  R30,LOW(20)
00051d e0f0      	LDI  R31,HIGH(20)
00051e dff1      	RCALL SUBOPT_0x25
00051f e1ee      	LDI  R30,LOW(30)
000520 e0f0      	LDI  R31,HIGH(30)
000521 dfee      	RCALL SUBOPT_0x25
000522 dff6      	RCALL SUBOPT_0x28
000523 dfec      	RCALL SUBOPT_0x25
000524 cbc8      	RJMP _beep
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A:
000525 93ea      	ST   -Y,R30
000526 ce48      	RJMP __lcd_write_nibble_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B:
000527 93ea      	ST   -Y,R30
000528 ce6a      	RJMP __lcd_write_data
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
000529 e0e3      	LDI  R30,LOW(3)
00052a e0f0      	LDI  R31,HIGH(3)
00052b dfe4      	RCALL SUBOPT_0x25
00052c c00b      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D:
                +
00052d e980     +LDI R24 , LOW ( 400 )
00052e e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
00052f 9701     +SBIW R24 , 1
000530 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
000531 e3e0      	LDI  R30,LOW(48)
000532 cff2      	RJMP SUBOPT_0x2A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
                +
000533 e980     +LDI R24 , LOW ( 400 )
000534 e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
000535 9701     +SBIW R24 , 1
000536 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
000537 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000538 91e9      	ld   r30,y+
000539 91f9      	ld   r31,y+
00053a 9630      	adiw r30,0
00053b f039      	breq __delay_ms1
                 __delay_ms0:
                +
00053c ea80     +LDI R24 , LOW ( 0xFA0 )
00053d e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
00053e 9701     +SBIW R24 , 1
00053f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
000540 95a8      	wdr
000541 9731      	sbiw r30,1
000542 f7c9      	brne __delay_ms0
                 __delay_ms1:
000543 9508      	ret
                 
                 __ADDD12:
000544 0fea      	ADD  R30,R26
000545 1ffb      	ADC  R31,R27
000546 1f68      	ADC  R22,R24
000547 1f79      	ADC  R23,R25
000548 9508      	RET
                 
                 __SUBD12:
000549 1bea      	SUB  R30,R26
00054a 0bfb      	SBC  R31,R27
00054b 0b68      	SBC  R22,R24
00054c 0b79      	SBC  R23,R25
00054d 9508      	RET
                 
                 __SUBD21:
00054e 1bae      	SUB  R26,R30
00054f 0bbf      	SBC  R27,R31
000550 0b86      	SBC  R24,R22
000551 0b97      	SBC  R25,R23
000552 9508      	RET
                 
                 __ANEGW1:
000553 95f1      	NEG  R31
000554 95e1      	NEG  R30
000555 40f0      	SBCI R31,0
000556 9508      	RET
                 
                 __ANEGD1:
000557 95f0      	COM  R31
000558 9560      	COM  R22
000559 9570      	COM  R23
00055a 95e1      	NEG  R30
00055b 4fff      	SBCI R31,-1
00055c 4f6f      	SBCI R22,-1
00055d 4f7f      	SBCI R23,-1
00055e 9508      	RET
                 
                 __CWD1:
00055f 2f6f      	MOV  R22,R31
000560 0f66      	ADD  R22,R22
000561 0b66      	SBC  R22,R22
000562 2f76      	MOV  R23,R22
000563 9508      	RET
                 
                 __EQB12:
000564 17ea      	CP   R30,R26
000565 e0e1      	LDI  R30,1
000566 f009      	BREQ __EQB12T
000567 27ee      	CLR  R30
                 __EQB12T:
000568 9508      	RET
                 
                 __EQW12:
000569 17ea      	CP   R30,R26
00056a 07fb      	CPC  R31,R27
00056b e0e1      	LDI  R30,1
00056c f009      	BREQ __EQW12T
00056d 27ee      	CLR  R30
                 __EQW12T:
00056e 9508      	RET
                 
                 __MULD12U:
00056f 9f7a      	MUL  R23,R26
000570 2d70      	MOV  R23,R0
000571 9f6b      	MUL  R22,R27
000572 0d70      	ADD  R23,R0
000573 9ff8      	MUL  R31,R24
000574 0d70      	ADD  R23,R0
000575 9fe9      	MUL  R30,R25
000576 0d70      	ADD  R23,R0
000577 9f6a      	MUL  R22,R26
000578 2d60      	MOV  R22,R0
000579 0d71      	ADD  R23,R1
00057a 9ffb      	MUL  R31,R27
00057b 0d60      	ADD  R22,R0
00057c 1d71      	ADC  R23,R1
00057d 9fe8      	MUL  R30,R24
00057e 0d60      	ADD  R22,R0
00057f 1d71      	ADC  R23,R1
000580 2788      	CLR  R24
000581 9ffa      	MUL  R31,R26
000582 2df0      	MOV  R31,R0
000583 0d61      	ADD  R22,R1
000584 1f78      	ADC  R23,R24
000585 9feb      	MUL  R30,R27
000586 0df0      	ADD  R31,R0
000587 1d61      	ADC  R22,R1
000588 1f78      	ADC  R23,R24
000589 9fea      	MUL  R30,R26
00058a 2de0      	MOV  R30,R0
00058b 0df1      	ADD  R31,R1
00058c 1f68      	ADC  R22,R24
00058d 1f78      	ADC  R23,R24
00058e 9508      	RET
                 
                 __MULD12:
00058f d054      	RCALL __CHKSIGND
000590 dfde      	RCALL __MULD12U
000591 f40e      	BRTC __MULD121
000592 dfc4      	RCALL __ANEGD1
                 __MULD121:
000593 9508      	RET
                 
                 __DIVW21U:
000594 2400      	CLR  R0
000595 2411      	CLR  R1
000596 e190      	LDI  R25,16
                 __DIVW21U1:
000597 0faa      	LSL  R26
000598 1fbb      	ROL  R27
000599 1c00      	ROL  R0
00059a 1c11      	ROL  R1
00059b 1a0e      	SUB  R0,R30
00059c 0a1f      	SBC  R1,R31
00059d f418      	BRCC __DIVW21U2
00059e 0e0e      	ADD  R0,R30
00059f 1e1f      	ADC  R1,R31
0005a0 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0005a1 60a1      	SBR  R26,1
                 __DIVW21U3:
0005a2 959a      	DEC  R25
0005a3 f799      	BRNE __DIVW21U1
0005a4 01fd      	MOVW R30,R26
0005a5 01d0      	MOVW R26,R0
0005a6 9508      	RET
                 
                 __DIVW21:
0005a7 d02e      	RCALL __CHKSIGNW
0005a8 dfeb      	RCALL __DIVW21U
0005a9 f40e      	BRTC __DIVW211
0005aa dfa8      	RCALL __ANEGW1
                 __DIVW211:
0005ab 9508      	RET
                 
                 __DIVD21U:
0005ac 933f      	PUSH R19
0005ad 934f      	PUSH R20
0005ae 935f      	PUSH R21
0005af 2400      	CLR  R0
0005b0 2411      	CLR  R1
0005b1 2744      	CLR  R20
0005b2 2755      	CLR  R21
0005b3 e230      	LDI  R19,32
                 __DIVD21U1:
0005b4 0faa      	LSL  R26
0005b5 1fbb      	ROL  R27
0005b6 1f88      	ROL  R24
0005b7 1f99      	ROL  R25
0005b8 1c00      	ROL  R0
0005b9 1c11      	ROL  R1
0005ba 1f44      	ROL  R20
0005bb 1f55      	ROL  R21
0005bc 1a0e      	SUB  R0,R30
0005bd 0a1f      	SBC  R1,R31
0005be 0b46      	SBC  R20,R22
0005bf 0b57      	SBC  R21,R23
0005c0 f428      	BRCC __DIVD21U2
0005c1 0e0e      	ADD  R0,R30
0005c2 1e1f      	ADC  R1,R31
0005c3 1f46      	ADC  R20,R22
0005c4 1f57      	ADC  R21,R23
0005c5 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0005c6 60a1      	SBR  R26,1
                 __DIVD21U3:
0005c7 953a      	DEC  R19
0005c8 f759      	BRNE __DIVD21U1
0005c9 01fd      	MOVW R30,R26
0005ca 01bc      	MOVW R22,R24
0005cb 01d0      	MOVW R26,R0
0005cc 01ca      	MOVW R24,R20
0005cd 915f      	POP  R21
0005ce 914f      	POP  R20
0005cf 913f      	POP  R19
0005d0 9508      	RET
                 
                 __DIVD21:
0005d1 d012      	RCALL __CHKSIGND
0005d2 dfd9      	RCALL __DIVD21U
0005d3 f40e      	BRTC __DIVD211
0005d4 df82      	RCALL __ANEGD1
                 __DIVD211:
0005d5 9508      	RET
                 
                 __CHKSIGNW:
0005d6 94e8      	CLT
0005d7 fff7      	SBRS R31,7
0005d8 c002      	RJMP __CHKSW1
0005d9 df79      	RCALL __ANEGW1
0005da 9468      	SET
                 __CHKSW1:
0005db ffb7      	SBRS R27,7
0005dc c006      	RJMP __CHKSW2
0005dd 95a0      	COM  R26
0005de 95b0      	COM  R27
0005df 9611      	ADIW R26,1
0005e0 f800      	BLD  R0,0
0005e1 9403      	INC  R0
0005e2 fa00      	BST  R0,0
                 __CHKSW2:
0005e3 9508      	RET
                 
                 __CHKSIGND:
0005e4 94e8      	CLT
0005e5 ff77      	SBRS R23,7
0005e6 c002      	RJMP __CHKSD1
0005e7 df6f      	RCALL __ANEGD1
0005e8 9468      	SET
                 __CHKSD1:
0005e9 ff97      	SBRS R25,7
0005ea c00b      	RJMP __CHKSD2
0005eb 2400      	CLR  R0
0005ec 95a0      	COM  R26
0005ed 95b0      	COM  R27
0005ee 9580      	COM  R24
0005ef 9590      	COM  R25
0005f0 9611      	ADIW R26,1
0005f1 1d80      	ADC  R24,R0
0005f2 1d90      	ADC  R25,R0
0005f3 f800      	BLD  R0,0
0005f4 9403      	INC  R0
0005f5 fa00      	BST  R0,0
                 __CHKSD2:
0005f6 9508      	RET
                 
                 __PUTD2S0:
0005f7 83a8      	ST   Y,R26
0005f8 83b9      	STD  Y+1,R27
0005f9 838a      	STD  Y+2,R24
0005fa 839b      	STD  Y+3,R25
0005fb 9508      	RET
                 
                 __PUTPARD1:
0005fc 937a      	ST   -Y,R23
0005fd 936a      	ST   -Y,R22
0005fe 93fa      	ST   -Y,R31
0005ff 93ea      	ST   -Y,R30
000600 9508      	RET
                 
                 __SWAPD12:
000601 2e18      	MOV  R1,R24
000602 2f86      	MOV  R24,R22
000603 2d61      	MOV  R22,R1
000604 2e19      	MOV  R1,R25
000605 2f97      	MOV  R25,R23
000606 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000607 2e1b      	MOV  R1,R27
000608 2fbf      	MOV  R27,R31
000609 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00060a 2e1a      	MOV  R1,R26
00060b 2fae      	MOV  R26,R30
00060c 2de1      	MOV  R30,R1
00060d 9508      	RET
                 
                 __EEPROMRDW:
00060e 9611      	ADIW R26,1
00060f d002      	RCALL __EEPROMRDB
000610 2ffe      	MOV  R31,R30
000611 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
000612 99e1      	SBIC EECR,EEWE
000613 cffe      	RJMP __EEPROMRDB
000614 93ff      	PUSH R31
000615 b7ff      	IN   R31,SREG
000616 94f8      	CLI
000617 bbae      	OUT  EEARL,R26
000618 bbbf      	OUT  EEARH,R27
000619 9ae0      	SBI  EECR,EERE
00061a b3ed      	IN   R30,EEDR
00061b bfff      	OUT  SREG,R31
00061c 91ff      	POP  R31
00061d 9508      	RET
                 
                 __EEPROMWRW:
00061e d007      	RCALL __EEPROMWRB
00061f 9611      	ADIW R26,1
000620 93ef      	PUSH R30
000621 2fef      	MOV  R30,R31
000622 d003      	RCALL __EEPROMWRB
000623 91ef      	POP  R30
000624 9711      	SBIW R26,1
000625 9508      	RET
                 
                 __EEPROMWRB:
000626 9be1      	SBIS EECR,EEWE
000627 c002      	RJMP __EEPROMWRB1
000628 95a8      	WDR
000629 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
00062a b79f      	IN   R25,SREG
00062b 94f8      	CLI
00062c bbae      	OUT  EEARL,R26
00062d bbbf      	OUT  EEARH,R27
00062e 9ae0      	SBI  EECR,EERE
00062f b38d      	IN   R24,EEDR
000630 17e8      	CP   R30,R24
000631 f019      	BREQ __EEPROMWRB0
000632 bbed      	OUT  EEDR,R30
000633 9ae2      	SBI  EECR,EEMWE
000634 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000635 bf9f      	OUT  SREG,R25
000636 9508      	RET
                 
                 __CPD12:
000637 17ea      	CP   R30,R26
000638 07fb      	CPC  R31,R27
000639 0768      	CPC  R22,R24
00063a 0779      	CPC  R23,R25
00063b 9508      	RET
                 
                 __CPD21:
00063c 17ae      	CP   R26,R30
00063d 07bf      	CPC  R27,R31
00063e 0786      	CPC  R24,R22
00063f 0797      	CPC  R25,R23
000640 9508      	RET
                 
                 __SAVELOCR4:
000641 933a      	ST   -Y,R19
                 __SAVELOCR3:
000642 932a      	ST   -Y,R18
                 __SAVELOCR2:
000643 931a      	ST   -Y,R17
000644 930a      	ST   -Y,R16
000645 9508      	RET
                 
                 __LOADLOCR4:
000646 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000647 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000648 8119      	LDD  R17,Y+1
000649 8108      	LD   R16,Y
00064a 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :  35 r1 :  23 r2 :  29 r3 :   0 r4 :   5 r5 :   3 r6 :   5 r7 :   3 
r8 :   4 r9 :   2 r10:   6 r11:   4 r12:   3 r13:   1 r14:   0 r15:   0 
r16:   6 r17:  10 r18:   9 r19:   7 r20:   7 r21:   6 r22:  52 r23:  48 
r24:  60 r25:  40 r26:  80 r27:  48 r28:   8 r29:   1 r30: 334 r31: 113 
x  :   7 y  : 126 z  :   9 
Registers used: 32 out of 35 (91.4%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  16 add   :  14 
adiw  :  23 and   :   1 andi  :   4 asr   :   0 bclr  :   0 bld   :  20 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :  12 
brge  :   9 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  12 
brlt  :   2 brmi  :   0 brne  :  19 brpl  :   0 brsh  :   0 brtc  :   3 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   2 cbi   :  21 
cbr   :   0 clc   :   0 clh   :   0 cli   :   4 cln   :   0 clr   :  38 
cls   :   0 clt   :  15 clv   :   0 clz   :   0 com   :   9 cp    :  11 
cpc   :  16 cpi   :  10 cpse  :   0 dec   :   6 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   8 
inc   :   2 ld    :  29 ldd   :  39 ldi   : 197 lds   :  47 lpm   :   9 
lsl   :   2 lsr   :   0 mov   :  22 movw  :  25 mul   :  10 muls  :   0 
mulsu :   0 neg   :   3 nop   :   0 or    :   0 ori   :   0 out   :  52 
pop   :  13 push  :  13 rcall : 261 ret   :  72 reti  :   1 rjmp  : 107 
rol   :  10 ror   :   0 sbc   :  11 sbci  :   6 sbi   :  39 sbic  :  14 
sbis  :   7 sbiw  :  20 sbr   :   2 sbrc  :   7 sbrs  :   8 sec   :   0 
seh   :   0 sei   :   2 sen   :   0 ser   :   0 ses   :   0 set   :  13 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  53 std   :  13 
sts   :  38 sub   :   4 subi  :   9 swap  :   1 tst   :   0 wdr   :   6 

Instructions used: 61 out of 114 (53.5%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000c96   3056    166   3222    8192  39.3%
[.dseg] 0x000060 0x000186      0     38     38    1119   3.4%
[.eseg] 0x000000 0x00000c      0     12     12     512   2.3%

Assembly complete, 0 errors, 9 warnings
