
AVRASM ver. 2.1.30  D:\may ap trung\LAP TRINH MACH V1\laptrinhapmoi-M2\List\apmoi.asm Wed Apr 22 15:25:05 2015

D:\may ap trung\LAP TRINH MACH V1\laptrinhapmoi-M2\List\apmoi.asm(1057): warning: Register r4 already defined by the .DEF directive
D:\may ap trung\LAP TRINH MACH V1\laptrinhapmoi-M2\List\apmoi.asm(1058): warning: Register r6 already defined by the .DEF directive
D:\may ap trung\LAP TRINH MACH V1\laptrinhapmoi-M2\List\apmoi.asm(1059): warning: Register r9 already defined by the .DEF directive
D:\may ap trung\LAP TRINH MACH V1\laptrinhapmoi-M2\List\apmoi.asm(1060): warning: Register r8 already defined by the .DEF directive
D:\may ap trung\LAP TRINH MACH V1\laptrinhapmoi-M2\List\apmoi.asm(1061): warning: Register r11 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega8
                 ;Program type             : Application
                 ;Clock frequency          : 16.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _demdaotrung=R4
                 	.DEF _sldao=R6
                 	.DEF __lcd_x=R9
                 	.DEF __lcd_y=R8
                 	.DEF __lcd_maxx=R11
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c036      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 c122      	RJMP _timer1_compa_isr
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000013 0000      	.DW  0x0000
                 
                 _0x76:
000014 0000
000015 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x0:
000016 002e
000017 7453
000018 7261
000019 2074      	.DB  0x2E,0x0,0x53,0x74,0x61,0x72,0x74,0x20
00001a 7953
00001b 7473
00001c 6d65
00001d 2e2e      	.DB  0x53,0x79,0x73,0x74,0x65,0x6D,0x2E,0x2E
00001e 2e2e
00001f 002e
000020 203e
000021 3e00      	.DB  0x2E,0x2E,0x2E,0x0,0x3E,0x20,0x0,0x3E
000022 4600
000023 6100
000024 6900
000025 7200      	.DB  0x0,0x46,0x0,0x61,0x0,0x69,0x0,0x72
000026 7900
000027 2d00
000028 4500
000029 6c00      	.DB  0x0,0x79,0x0,0x2D,0x0,0x45,0x0,0x6C
00002a 6200
D:\may ap trung\LAP TRINH MACH V1\laptrinhapmoi-M2\List\apmoi.asm(1102): warning: .cseg .db misalignment - padding zero byte
00002b 0000      	.DB  0x0,0x62,0x0
                 _0x2000003:
00002c c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00002d 0001      	.DW  0x01
00002e 0002      	.DW  0x02
00002f 0026      	.DW  __REG_BIT_VARS*2
                 
000030 0004      	.DW  0x04
000031 0004      	.DW  0x04
000032 0028      	.DW  _0x76*2
                 
000033 0002      	.DW  0x02
000034 0184      	.DW  __base_y_G100
000035 0058      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000036 0000      	.DW  0
                 
                 __RESET:
000037 94f8      	CLI
000038 27ee      	CLR  R30
000039 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00003a e0f1      	LDI  R31,1
00003b bffb      	OUT  GICR,R31
00003c bfeb      	OUT  GICR,R30
00003d bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
00003e e1f8      	LDI  R31,0x18
00003f bdf1      	OUT  WDTCR,R31
000040 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000041 e08d      	LDI  R24,(14-2)+1
000042 e0a2      	LDI  R26,2
000043 27bb      	CLR  R27
                 __CLEAR_REG:
000044 93ed      	ST   X+,R30
000045 958a      	DEC  R24
000046 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000047 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000048 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000049 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004a 93ed      	ST   X+,R30
00004b 9701      	SBIW R24,1
00004c f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00004d e5ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00004e e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00004f 9185      	LPM  R24,Z+
000050 9195      	LPM  R25,Z+
000051 9700      	SBIW R24,0
000052 f061      	BREQ __GLOBAL_INI_END
000053 91a5      	LPM  R26,Z+
000054 91b5      	LPM  R27,Z+
000055 9005      	LPM  R0,Z+
000056 9015      	LPM  R1,Z+
000057 01bf      	MOVW R22,R30
000058 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000059 9005      	LPM  R0,Z+
00005a 920d      	ST   X+,R0
00005b 9701      	SBIW R24,1
00005c f7e1      	BRNE __GLOBAL_INI_LOOP
00005d 01fb      	MOVW R30,R22
00005e cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00005f e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000060 bfed      	OUT  SPL,R30
000061 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000062 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000063 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000064 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000065 c15b      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Chip type               : ATmega8
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 16.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 256
                 ;*****************************************************/
                 ;
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;// Alphanumeric LCD Module functions
                 ;#include <alcd.h>
                 ;
                 ;// Declare your global variables here
                 ;eeprom int nhietdodat @0x10;
                 ;eeprom int doamdat @0x15;
                 ;eeprom int timeoff @0x1a;
                 ;
                 ;eeprom int nhietdodat=370;
                 ;eeprom int doamdat=600;
                 ;eeprom int timeoff=1;
                 ;
                 ;void lcd_putnum (long so,unsigned char x,unsigned char y)
                 ; 0000 0019 {
                 
                 	.CSEG
                 _lcd_putnum:
                 ; 0000 001A    long a, b, c;
                 ; 0000 001B    a = so / 100;
000066 d2c9      	RCALL SUBOPT_0x0
                 ;	so -> Y+14
                 ;	x -> Y+13
                 ;	y -> Y+12
                 ;	a -> Y+8
                 ;	b -> Y+4
                 ;	c -> Y+0
                 ; 0000 001C    b = (so - 100 * a) / 10;
                 ; 0000 001D    c = so - 100 * a - 10 * b;
000067 937f      	PUSH R23
000068 936f      	PUSH R22
000069 93ff      	PUSH R31
00006a 93ef      	PUSH R30
00006b d2f5      	RCALL SUBOPT_0x1
00006c 91af      	POP  R26
00006d 91bf      	POP  R27
00006e 918f      	POP  R24
00006f 919f      	POP  R25
000070 d2fa      	RCALL SUBOPT_0x2
                 ; 0000 001E    lcd_gotoxy (x, y) ;
                 ; 0000 001F    lcd_putchar (a + 48) ;
                 ; 0000 0020    lcd_putchar (b + 48) ;
                 ; 0000 0021    lcd_putsf(".");
                +
000071 e2ec     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000072 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000073 d306      	RCALL SUBOPT_0x3
000074 d281      	RCALL _lcd_putsf
                 ; 0000 0022    lcd_putchar (c + 48) ;
000075 c00b      	RJMP _0x2020002
                 ; 0000 0023 }
                 ;
                 ;void lcd_putnum1 (long so,unsigned char x,unsigned char y)
                 ; 0000 0026 {
                 _lcd_putnum1:
                 ; 0000 0027    long a, b, c;
                 ; 0000 0028    a = so / 100;
000076 d2b9      	RCALL SUBOPT_0x0
                 ;	so -> Y+14
                 ;	x -> Y+13
                 ;	y -> Y+12
                 ;	a -> Y+8
                 ;	b -> Y+4
                 ;	c -> Y+0
                 ; 0000 0029    b = (so - 100 * a) / 10;
                 ; 0000 002A    c = so - 100 * a - 10 * b;
000077 937f      	PUSH R23
000078 936f      	PUSH R22
000079 93ff      	PUSH R31
00007a 93ef      	PUSH R30
00007b d2e5      	RCALL SUBOPT_0x1
00007c 91af      	POP  R26
00007d 91bf      	POP  R27
00007e 918f      	POP  R24
00007f 919f      	POP  R25
000080 d2ea      	RCALL SUBOPT_0x2
                 ; 0000 002B    lcd_gotoxy (x, y) ;
                 ; 0000 002C    lcd_putchar (a + 48) ;
                 ; 0000 002D    lcd_putchar (b + 48) ;
                 ; 0000 002E    lcd_putchar (c + 48) ;
                 _0x2020002:
000081 81e8      	LD   R30,Y
000082 5de0      	SUBI R30,-LOW(48)
000083 93ea      	ST   -Y,R30
000084 d25f      	RCALL _lcd_putchar
                 ; 0000 002F }
000085 9662      	ADIW R28,18
000086 9508      	RET
                 ;
                 ;#define data PIND.0
                 ;
                 ;long num, i, doamh, doaml, nhietdoh, nhietdol, a, nhietdo, doam;
                 ;
                 ;void read_am2301()
                 ; 0000 0036      {
                 _read_am2301:
                 ; 0000 0037      doamh=doaml=nhietdoh=nhietdol=0;
                +
000087 e0e0     +LDI R30 , LOW ( 0x0 )
000088 e0f0     +LDI R31 , HIGH ( 0x0 )
000089 e060     +LDI R22 , BYTE3 ( 0x0 )
00008a e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00008b d2f1      	RCALL SUBOPT_0x4
00008c d2f9      	RCALL SUBOPT_0x5
00008d d301      	RCALL SUBOPT_0x6
00008e d309      	RCALL SUBOPT_0x7
                 ; 0000 0038      a=128;
00008f d311      	RCALL SUBOPT_0x8
                 ; 0000 0039      DDRD=0xff;
000090 efef      	LDI  R30,LOW(255)
000091 bbe1      	OUT  0x11,R30
                 ; 0000 003A      PORTD.0=0;
000092 9890      	CBI  0x12,0
                 ; 0000 003B      delay_us(1000);
                +
000093 ea80     +LDI R24 , LOW ( 4000 )
000094 e09f     +LDI R25 , HIGH ( 4000 )
                +__DELAY_USW_LOOP :
000095 9701     +SBIW R24 , 1
000096 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 4000
                 ; 0000 003C      PORTD.0=1;
000097 9a90      	SBI  0x12,0
                 ; 0000 003D      delay_us(30);
                +
000098 ea80     +LDI R24 , LOW ( 160 )
                +__DELAY_USB_LOOP :
000099 958a     +DEC R24
00009a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 160
                 ; 0000 003E      PORTD.0=0;
00009b 9890      	CBI  0x12,0
                 ; 0000 003F      DDRD=0b11111110;
00009c efee      	LDI  R30,LOW(254)
00009d bbe1      	OUT  0x11,R30
                 ; 0000 0040      while(data==0)
                 _0x9:
00009e 9b80      	SBIS 0x10,0
                 ; 0000 0041           {
                 ; 0000 0042           }
00009f cffe      	RJMP _0x9
                 ; 0000 0043      while(data==1)
                 _0xC:
0000a0 9980      	SBIC 0x10,0
                 ; 0000 0044           {
                 ; 0000 0045           }
0000a1 cffe      	RJMP _0xC
                 ; 0000 0046 
                 ; 0000 0047      while(data==0)
                 _0xF:
0000a2 9b80      	SBIS 0x10,0
                 ; 0000 0048           {
                 ; 0000 0049           }
0000a3 cffe      	RJMP _0xF
                 ; 0000 004A      a=128;
0000a4 d2fc      	RCALL SUBOPT_0x8
                 ; 0000 004B      for (i=0;i<8;i++)
0000a5 d308      	RCALL SUBOPT_0x9
                 _0x13:
0000a6 d311      	RCALL SUBOPT_0xA
0000a7 f4bc      	BRGE _0x14
                 ; 0000 004C           {
                 ; 0000 004D           TCNT0=0x00;
0000a8 d31f      	RCALL SUBOPT_0xB
                 ; 0000 004E           TCCR0=0x02;
0000a9 d321      	RCALL SUBOPT_0xC
                 ; 0000 004F           while(data==1)
                 _0x15:
0000aa 9980      	SBIC 0x10,0
                 ; 0000 0050                {
                 ; 0000 0051                }
0000ab cffe      	RJMP _0x15
                 ; 0000 0052           if (TCNT0 > 96) doamh = doamh + a ;
0000ac d321      	RCALL SUBOPT_0xD
0000ad f058      	BRLO _0x18
0000ae d322      	RCALL SUBOPT_0xE
0000af 91a0 0164 	LDS  R26,_doamh
0000b1 91b0 0165 	LDS  R27,_doamh+1
0000b3 9180 0166 	LDS  R24,_doamh+2
0000b5 9190 0167 	LDS  R25,_doamh+3
0000b7 d3e9      	RCALL __ADDD12
0000b8 d2df      	RCALL SUBOPT_0x7
                 ; 0000 0053           a=a/2;
                 _0x18:
0000b9 d320      	RCALL SUBOPT_0xF
                 ; 0000 0054           TCNT0=0x00;
                 ; 0000 0055           TCCR0=0x00;
0000ba d335      	RCALL SUBOPT_0x10
                 ; 0000 0056           while (data==0)
                 _0x19:
0000bb 9b80      	SBIS 0x10,0
                 ; 0000 0057                {
                 ; 0000 0058                }
0000bc cffe      	RJMP _0x19
                 ; 0000 0059           }
0000bd d335      	RCALL SUBOPT_0x11
0000be cfe7      	RJMP _0x13
                 _0x14:
                 ; 0000 005A      a=128;
0000bf d2e1      	RCALL SUBOPT_0x8
                 ; 0000 005B      for (i=0;i<8;i++)
0000c0 d2ed      	RCALL SUBOPT_0x9
                 _0x1D:
0000c1 d2f6      	RCALL SUBOPT_0xA
0000c2 f47c      	BRGE _0x1E
                 ; 0000 005C           {
                 ; 0000 005D           TCNT0=0x00;
0000c3 d304      	RCALL SUBOPT_0xB
                 ; 0000 005E           TCCR0=0x02;
0000c4 d306      	RCALL SUBOPT_0xC
                 ; 0000 005F           while(data==1)
                 _0x1F:
0000c5 9980      	SBIC 0x10,0
                 ; 0000 0060                {
                 ; 0000 0061                }
0000c6 cffe      	RJMP _0x1F
                 ; 0000 0062           if (TCNT0 > 96) doaml = doaml + a ;
0000c7 d306      	RCALL SUBOPT_0xD
0000c8 f018      	BRLO _0x22
0000c9 d307      	RCALL SUBOPT_0xE
0000ca d331      	RCALL SUBOPT_0x12
0000cb d2c3      	RCALL SUBOPT_0x6
                 ; 0000 0063           a=a/2;
                 _0x22:
0000cc d30d      	RCALL SUBOPT_0xF
                 ; 0000 0064           TCNT0=0x00;
                 ; 0000 0065           TCCR0=0x00;
0000cd d322      	RCALL SUBOPT_0x10
                 ; 0000 0066           while (data==0)
                 _0x23:
0000ce 9b80      	SBIS 0x10,0
                 ; 0000 0067                {
                 ; 0000 0068                }
0000cf cffe      	RJMP _0x23
                 ; 0000 0069           }
0000d0 d322      	RCALL SUBOPT_0x11
0000d1 cfef      	RJMP _0x1D
                 _0x1E:
                 ; 0000 006A      a=128;
0000d2 d2ce      	RCALL SUBOPT_0x8
                 ; 0000 006B      for (i=0;i<8;i++)
0000d3 d2da      	RCALL SUBOPT_0x9
                 _0x27:
0000d4 d2e3      	RCALL SUBOPT_0xA
0000d5 f4bc      	BRGE _0x28
                 ; 0000 006C           {
                 ; 0000 006D           TCNT0=0x00;
0000d6 d2f1      	RCALL SUBOPT_0xB
                 ; 0000 006E           TCCR0=0x02;
0000d7 d2f3      	RCALL SUBOPT_0xC
                 ; 0000 006F           while(data==1)
                 _0x29:
0000d8 9980      	SBIC 0x10,0
                 ; 0000 0070                {
                 ; 0000 0071                }
0000d9 cffe      	RJMP _0x29
                 ; 0000 0072           if (TCNT0 > 96) nhietdoh = nhietdoh + a ;
0000da d2f3      	RCALL SUBOPT_0xD
0000db f058      	BRLO _0x2C
0000dc d2f4      	RCALL SUBOPT_0xE
0000dd 91a0 016c 	LDS  R26,_nhietdoh
0000df 91b0 016d 	LDS  R27,_nhietdoh+1
0000e1 9180 016e 	LDS  R24,_nhietdoh+2
0000e3 9190 016f 	LDS  R25,_nhietdoh+3
0000e5 d3bb      	RCALL __ADDD12
0000e6 d29f      	RCALL SUBOPT_0x5
                 ; 0000 0073           a=a/2;
                 _0x2C:
0000e7 d2f2      	RCALL SUBOPT_0xF
                 ; 0000 0074           TCNT0=0x00;
                 ; 0000 0075           TCCR0=0x00;
0000e8 d307      	RCALL SUBOPT_0x10
                 ; 0000 0076           while (data==0)
                 _0x2D:
0000e9 9b80      	SBIS 0x10,0
                 ; 0000 0077                {
                 ; 0000 0078                }
0000ea cffe      	RJMP _0x2D
                 ; 0000 0079           }
0000eb d307      	RCALL SUBOPT_0x11
0000ec cfe7      	RJMP _0x27
                 _0x28:
                 ; 0000 007A      a=128;
0000ed d2b3      	RCALL SUBOPT_0x8
                 ; 0000 007B      for (i=0;i<8;i++)
0000ee d2bf      	RCALL SUBOPT_0x9
                 _0x31:
0000ef d2c8      	RCALL SUBOPT_0xA
0000f0 f47c      	BRGE _0x32
                 ; 0000 007C           {
                 ; 0000 007D           TCNT0=0x00;
0000f1 d2d6      	RCALL SUBOPT_0xB
                 ; 0000 007E           TCCR0=0x02;
0000f2 d2d8      	RCALL SUBOPT_0xC
                 ; 0000 007F           while(data==1)
                 _0x33:
0000f3 9980      	SBIC 0x10,0
                 ; 0000 0080                {
                 ; 0000 0081                }
0000f4 cffe      	RJMP _0x33
                 ; 0000 0082           if (TCNT0 > 96) nhietdol = nhietdol + a ;
0000f5 d2d8      	RCALL SUBOPT_0xD
0000f6 f018      	BRLO _0x36
0000f7 d2d9      	RCALL SUBOPT_0xE
0000f8 d30d      	RCALL SUBOPT_0x13
0000f9 d283      	RCALL SUBOPT_0x4
                 ; 0000 0083           a=a/2;
                 _0x36:
0000fa d2df      	RCALL SUBOPT_0xF
                 ; 0000 0084           TCNT0=0x00;
                 ; 0000 0085           TCCR0=0x00;
0000fb d2f4      	RCALL SUBOPT_0x10
                 ; 0000 0086           while (data==0)
                 _0x37:
0000fc 9b80      	SBIS 0x10,0
                 ; 0000 0087                {
                 ; 0000 0088                }
0000fd cffe      	RJMP _0x37
                 ; 0000 0089           }
0000fe d2f4      	RCALL SUBOPT_0x11
0000ff cfef      	RJMP _0x31
                 _0x32:
                 ; 0000 008A      a=128;
000100 d2a0      	RCALL SUBOPT_0x8
                 ; 0000 008B 
                 ; 0000 008C      nhietdo = nhietdoh*256 + nhietdol;
000101 91e0 016c 	LDS  R30,_nhietdoh
000103 91f0 016d 	LDS  R31,_nhietdoh+1
000105 9160 016e 	LDS  R22,_nhietdoh+2
000107 9170 016f 	LDS  R23,_nhietdoh+3
000109 d306      	RCALL SUBOPT_0x14
00010a d2fb      	RCALL SUBOPT_0x13
00010b 93e0 0178 	STS  _nhietdo,R30
00010d 93f0 0179 	STS  _nhietdo+1,R31
00010f 9360 017a 	STS  _nhietdo+2,R22
000111 9370 017b 	STS  _nhietdo+3,R23
                 ; 0000 008D      doam = doamh*256 + doaml;
000113 91e0 0164 	LDS  R30,_doamh
000115 91f0 0165 	LDS  R31,_doamh+1
000117 9160 0166 	LDS  R22,_doamh+2
000119 9170 0167 	LDS  R23,_doamh+3
00011b d2f4      	RCALL SUBOPT_0x14
00011c d2df      	RCALL SUBOPT_0x12
00011d 93e0 017c 	STS  _doam,R30
00011f 93f0 017d 	STS  _doam+1,R31
000121 9360 017e 	STS  _doam+2,R22
000123 9370 017f 	STS  _doam+3,R23
                 ; 0000 008E      /*
                 ; 0000 008F      lcd_gotoxy(0,0);
                 ; 0000 0090      lcd_putsf("Nhiet Do: ");
                 ; 0000 0091      lcd_putnum(nhietdo,10,0);
                 ; 0000 0092      lcd_gotoxy(0,1);
                 ; 0000 0093      lcd_putsf("Do Am: ");
                 ; 0000 0094      lcd_putnum(doam,10,1);
                 ; 0000 0095      */
                 ; 0000 0096      DDRD=0xff;
000125 efef      	LDI  R30,LOW(255)
000126 bbe1      	OUT  0x11,R30
                 ; 0000 0097      PORTD.0=1;
000127 9a90      	SBI  0x12,0
                 ; 0000 0098      }
000128 9508      	RET
                 ;
                 ;#define role1 PORTC.2
                 ;#define role2 PORTC.3
                 ;#define role3 PORTC.4
                 ;#define role4 PORTC.5
                 ;
                 ;#define up1 PINB.0
                 ;#define down1 PINC.0
                 ;#define up2 PINB.1
                 ;#define down2 PINC.1
                 ;
                 ;
                 ;int demdaotrung=0, sldao=0;
                 ;long time1day=0;
                 ;bit error;
                 ;
                 ;// Timer1 output compare A interrupt service routine
                 ;// Interrupt 1 second <<<
                 ;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
                 ; 0000 00AC {
                 _timer1_compa_isr:
000129 920a      	ST   -Y,R0
00012a 921a      	ST   -Y,R1
00012b 92fa      	ST   -Y,R15
00012c 936a      	ST   -Y,R22
00012d 937a      	ST   -Y,R23
00012e 938a      	ST   -Y,R24
00012f 939a      	ST   -Y,R25
000130 93aa      	ST   -Y,R26
000131 93ba      	ST   -Y,R27
000132 93ea      	ST   -Y,R30
000133 93fa      	ST   -Y,R31
000134 b7ef      	IN   R30,SREG
000135 93ea      	ST   -Y,R30
                 ; 0000 00AD // Place your code here
                 ; 0000 00AE demdaotrung++;
000136 01f2      	MOVW R30,R4
000137 9631      	ADIW R30,1
000138 012f      	MOVW R4,R30
                 ; 0000 00AF time1day++;
000139 e8a0      	LDI  R26,LOW(_time1day)
00013a e0b1      	LDI  R27,HIGH(_time1day)
00013b d3f3      	RCALL __GETD1P_INC
                +
00013c 5fef     +SUBI R30 , LOW ( - 1 )
00013d 4fff     +SBCI R31 , HIGH ( - 1 )
00013e 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00013f 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
000140 d3f3      	RCALL __PUTDP1_DEC
                 ; 0000 00B0 if (time1day == 86400)
000141 91a0 0180 	LDS  R26,_time1day
000143 91b0 0181 	LDS  R27,_time1day+1
000145 9180 0182 	LDS  R24,_time1day+2
000147 9190 0183 	LDS  R25,_time1day+3
                +
000149 38a0     +CPI R26 , LOW ( 0x15180 )
00014a e5e1     +LDI R30 , HIGH ( 0x15180 )
00014b 07be     +CPC R27 , R30
00014c e0e1     +LDI R30 , BYTE3 ( 0x15180 )
00014d 078e     +CPC R24 , R30
00014e e0e0     +LDI R30 , BYTE4 ( 0x15180 )
00014f 079e     +CPC R25 , R30
                 	__CPD2N 0x15180
000150 f419      	BRNE _0x3C
                 ; 0000 00B1     {
                 ; 0000 00B2     timeoff++;
000151 e1aa      	LDI  R26,LOW(_timeoff)
000152 e0b0      	LDI  R27,HIGH(_timeoff)
000153 d2c2      	RCALL SUBOPT_0x15
                 ; 0000 00B3     }
                 ; 0000 00B4 while (timeoff == 1000)
                 _0x3C:
                 _0x3D:
000154 e1aa      	LDI  R26,LOW(_timeoff)
000155 e0b0      	LDI  R27,HIGH(_timeoff)
000156 d3f9      	RCALL __EEPROMRDW
000157 3ee8      	CPI  R30,LOW(0x3E8)
000158 e0a3      	LDI  R26,HIGH(0x3E8)
000159 07fa      	CPC  R31,R26
00015a f429      	BRNE _0x3F
                 ; 0000 00B5     {
                 ; 0000 00B6      #asm("cli")
00015b 94f8      	cli
                 ; 0000 00B7      lcd_clear();
00015c d177      	RCALL _lcd_clear
                 ; 0000 00B8      PORTC=0xff;
00015d efef      	LDI  R30,LOW(255)
00015e bbe5      	OUT  0x15,R30
                 ; 0000 00B9     }
00015f cff4      	RJMP _0x3D
                 _0x3F:
                 ; 0000 00BA 
                 ; 0000 00BB if (demdaotrung == 7195)
000160 e1eb      	LDI  R30,LOW(7195)
000161 e1fc      	LDI  R31,HIGH(7195)
000162 15e4      	CP   R30,R4
000163 05f5      	CPC  R31,R5
000164 f421      	BRNE _0x40
                 ; 0000 00BC     {
                 ; 0000 00BD     role3=0;
000165 98ac      	CBI  0x15,4
                 ; 0000 00BE     sldao++;
000166 01f3      	MOVW R30,R6
000167 9631      	ADIW R30,1
000168 013f      	MOVW R6,R30
                 ; 0000 00BF     }
                 ; 0000 00C0 if (demdaotrung == 7200)
                 _0x40:
000169 e2e0      	LDI  R30,LOW(7200)
00016a e1fc      	LDI  R31,HIGH(7200)
00016b 15e4      	CP   R30,R4
00016c 05f5      	CPC  R31,R5
00016d f419      	BRNE _0x43
                 ; 0000 00C1     {
                 ; 0000 00C2     demdaotrung =0;
00016e 2444      	CLR  R4
00016f 2455      	CLR  R5
                 ; 0000 00C3     role3=1;
000170 9aac      	SBI  0x15,4
                 ; 0000 00C4     }
                 ; 0000 00C5 if (error == 0) role4=role4^1; else role4=1;
                 _0x43:
000171 fc20      	SBRC R2,0
000172 c00a      	RJMP _0x46
000173 e0a0      	LDI  R26,0
000174 99ad      	SBIC 0x15,5
000175 e0a1      	LDI  R26,1
000176 e0e1      	LDI  R30,LOW(1)
000177 27ea      	EOR  R30,R26
000178 f411      	BRNE _0x47
000179 98ad      	CBI  0x15,5
00017a c001      	RJMP _0x48
                 _0x47:
00017b 9aad      	SBI  0x15,5
                 _0x48:
00017c c001      	RJMP _0x49
                 _0x46:
00017d 9aad      	SBI  0x15,5
                 ; 0000 00C6 
                 ; 0000 00C7 read_am2301();
                 _0x49:
00017e df08      	RCALL _read_am2301
                 ; 0000 00C8 }
00017f 91e9      	LD   R30,Y+
000180 bfef      	OUT  SREG,R30
000181 91f9      	LD   R31,Y+
000182 91e9      	LD   R30,Y+
000183 91b9      	LD   R27,Y+
000184 91a9      	LD   R26,Y+
000185 9199      	LD   R25,Y+
000186 9189      	LD   R24,Y+
000187 9179      	LD   R23,Y+
000188 9169      	LD   R22,Y+
000189 90f9      	LD   R15,Y+
00018a 9019      	LD   R1,Y+
00018b 9009      	LD   R0,Y+
00018c 9518      	RETI
                 ;
                 ;
                 ;void read_key()
                 ; 0000 00CC     {
                 _read_key:
                 ; 0000 00CD 
                 ; 0000 00CE     while (up1==0)
                 _0x4C:
00018d 99b0      	SBIC 0x16,0
00018e c010      	RJMP _0x4E
                 ; 0000 00CF         {
                 ; 0000 00D0         while (down2==0)
                 _0x4F:
00018f 9999      	SBIC 0x13,1
000190 c009      	RJMP _0x51
                 ; 0000 00D1             {
                 ; 0000 00D2             nhietdodat=370;
000191 d289      	RCALL SUBOPT_0x16
000192 e7e2      	LDI  R30,LOW(370)
000193 e0f1      	LDI  R31,HIGH(370)
000194 d3cb      	RCALL __EEPROMWRW
                 ; 0000 00D3             doamdat=600;
000195 d288      	RCALL SUBOPT_0x17
000196 e5e8      	LDI  R30,LOW(600)
000197 e0f2      	LDI  R31,HIGH(600)
000198 d3c7      	RCALL __EEPROMWRW
                 ; 0000 00D4             }
000199 cff5      	RJMP _0x4F
                 _0x51:
                 ; 0000 00D5         nhietdodat++;
00019a d280      	RCALL SUBOPT_0x16
00019b d27a      	RCALL SUBOPT_0x15
                 ; 0000 00D6         lcd_putnum(nhietdodat,7,0);
00019c d284      	RCALL SUBOPT_0x18
00019d d286      	RCALL SUBOPT_0x19
                 ; 0000 00D7         delay_ms(300);
                 ; 0000 00D8         }
00019e cfee      	RJMP _0x4C
                 _0x4E:
                 ; 0000 00D9     while (down1==0)
                 _0x52:
00019f 9998      	SBIC 0x13,0
0001a0 c007      	RJMP _0x54
                 ; 0000 00DA         {
                 ; 0000 00DB         nhietdodat--;
0001a1 d27f      	RCALL SUBOPT_0x18
0001a2 9731      	SBIW R30,1
0001a3 d3bc      	RCALL __EEPROMWRW
0001a4 9631      	ADIW R30,1
                 ; 0000 00DC         lcd_putnum(nhietdodat,7,0);
0001a5 d27b      	RCALL SUBOPT_0x18
0001a6 d27d      	RCALL SUBOPT_0x19
                 ; 0000 00DD         delay_ms(300);
                 ; 0000 00DE         }
0001a7 cff7      	RJMP _0x52
                 _0x54:
                 ; 0000 00DF 
                 ; 0000 00E0     while (up2==0)
                 _0x55:
0001a8 99b1      	SBIC 0x16,1
0001a9 c00d      	RJMP _0x57
                 ; 0000 00E1         {
                 ; 0000 00E2         while (down1==0)
                 _0x58:
0001aa 9998      	SBIC 0x13,0
0001ab c006      	RJMP _0x5A
                 ; 0000 00E3             {
                 ; 0000 00E4             timeoff=0;
0001ac e1aa      	LDI  R26,LOW(_timeoff)
0001ad e0b0      	LDI  R27,HIGH(_timeoff)
0001ae e0e0      	LDI  R30,LOW(0)
0001af e0f0      	LDI  R31,HIGH(0)
0001b0 d3af      	RCALL __EEPROMWRW
                 ; 0000 00E5             }
0001b1 cff8      	RJMP _0x58
                 _0x5A:
                 ; 0000 00E6         doamdat++;
0001b2 d26b      	RCALL SUBOPT_0x17
0001b3 d262      	RCALL SUBOPT_0x15
                 ; 0000 00E7         lcd_putnum(doamdat,7,1);
0001b4 d27a      	RCALL SUBOPT_0x1A
0001b5 d27c      	RCALL SUBOPT_0x1B
                 ; 0000 00E8         delay_ms(300);
                 ; 0000 00E9         }
0001b6 cff1      	RJMP _0x55
                 _0x57:
                 ; 0000 00EA     while (down2==0)
                 _0x5B:
0001b7 9999      	SBIC 0x13,1
0001b8 c007      	RJMP _0x5D
                 ; 0000 00EB         {
                 ; 0000 00EC         doamdat--;
0001b9 d275      	RCALL SUBOPT_0x1A
0001ba 9731      	SBIW R30,1
0001bb d3a4      	RCALL __EEPROMWRW
0001bc 9631      	ADIW R30,1
                 ; 0000 00ED         lcd_putnum(doamdat,7,1);
0001bd d271      	RCALL SUBOPT_0x1A
0001be d273      	RCALL SUBOPT_0x1B
                 ; 0000 00EE         delay_ms(300);
                 ; 0000 00EF         }
0001bf cff7      	RJMP _0x5B
                 _0x5D:
                 ; 0000 00F0     }
0001c0 9508      	RET
                 ;
                 ;
                 ;void main(void)
                 ; 0000 00F4 {
                 _main:
                 ; 0000 00F5 // Declare your local variables here
                 ; 0000 00F6 
                 ; 0000 00F7 // Input/Output Ports initialization
                 ; 0000 00F8 // Port B initialization
                 ; 0000 00F9 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 00FA // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 00FB PORTB=0xff;
0001c1 efef      	LDI  R30,LOW(255)
0001c2 bbe8      	OUT  0x18,R30
                 ; 0000 00FC DDRB=0x00;
0001c3 e0e0      	LDI  R30,LOW(0)
0001c4 bbe7      	OUT  0x17,R30
                 ; 0000 00FD 
                 ; 0000 00FE // Port C initialization
                 ; 0000 00FF // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0100 // State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0101 PORTC=0xff;
0001c5 efef      	LDI  R30,LOW(255)
0001c6 bbe5      	OUT  0x15,R30
                 ; 0000 0102 DDRC=0b11111100;
0001c7 efec      	LDI  R30,LOW(252)
0001c8 bbe4      	OUT  0x14,R30
                 ; 0000 0103 
                 ; 0000 0104 // Port D initialization
                 ; 0000 0105 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0106 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0107 PORTD=0x00;
0001c9 e0e0      	LDI  R30,LOW(0)
0001ca bbe2      	OUT  0x12,R30
                 ; 0000 0108 DDRD=0x00;
0001cb bbe1      	OUT  0x11,R30
                 ; 0000 0109 
                 ; 0000 010A // Timer/Counter 0 initialization
                 ; 0000 010B // Clock source: System Clock
                 ; 0000 010C // Clock value: Timer 0 Stopped
                 ; 0000 010D TCCR0=0x00;
0001cc d223      	RCALL SUBOPT_0x10
                 ; 0000 010E TCNT0=0x00;
0001cd d1fa      	RCALL SUBOPT_0xB
                 ; 0000 010F 
                 ; 0000 0110 // Timer/Counter 1 initialization
                 ; 0000 0111 // Clock source: System Clock
                 ; 0000 0112 // Clock value: 15.625 kHz
                 ; 0000 0113 // Mode: CTC top=OCR1A
                 ; 0000 0114 // OC1A output: Discon.
                 ; 0000 0115 // OC1B output: Discon.
                 ; 0000 0116 // Noise Canceler: Off
                 ; 0000 0117 // Input Capture on Falling Edge
                 ; 0000 0118 // Timer1 Overflow Interrupt: Off
                 ; 0000 0119 // Input Capture Interrupt: Off
                 ; 0000 011A // Compare A Match Interrupt: On
                 ; 0000 011B // Compare B Match Interrupt: Off
                 ; 0000 011C TCCR1A=0x00;
0001ce d26e      	RCALL SUBOPT_0x1C
                 ; 0000 011D TCCR1B=0x0D;
                 ; 0000 011E TCNT1H=0x00;
                 ; 0000 011F TCNT1L=0x00;
                 ; 0000 0120 ICR1H=0x00;
                 ; 0000 0121 ICR1L=0x00;
                 ; 0000 0122 OCR1AH=0x3D;
                 ; 0000 0123 OCR1AL=0x09;
                 ; 0000 0124 OCR1BH=0x00;
                 ; 0000 0125 OCR1BL=0x00;
                 ; 0000 0126 
                 ; 0000 0127 // Timer/Counter 2 initialization
                 ; 0000 0128 // Clock source: System Clock
                 ; 0000 0129 // Clock value: Timer2 Stopped
                 ; 0000 012A // Mode: Normal top=0xFF
                 ; 0000 012B // OC2 output: Disconnected
                 ; 0000 012C ASSR=0x00;
0001cf e0e0      	LDI  R30,LOW(0)
0001d0 bde2      	OUT  0x22,R30
                 ; 0000 012D TCCR2=0x00;
0001d1 bde5      	OUT  0x25,R30
                 ; 0000 012E TCNT2=0x00;
0001d2 bde4      	OUT  0x24,R30
                 ; 0000 012F OCR2=0x00;
0001d3 bde3      	OUT  0x23,R30
                 ; 0000 0130 
                 ; 0000 0131 // External Interrupt(s) initialization
                 ; 0000 0132 // INT0: Off
                 ; 0000 0133 // INT1: Off
                 ; 0000 0134 MCUCR=0x00;
0001d4 bfe5      	OUT  0x35,R30
                 ; 0000 0135 
                 ; 0000 0136 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0137 TIMSK=0x10;
0001d5 e1e0      	LDI  R30,LOW(16)
0001d6 bfe9      	OUT  0x39,R30
                 ; 0000 0138 
                 ; 0000 0139 // USART initialization
                 ; 0000 013A // USART disabled
                 ; 0000 013B UCSRB=0x00;
0001d7 e0e0      	LDI  R30,LOW(0)
0001d8 b9ea      	OUT  0xA,R30
                 ; 0000 013C 
                 ; 0000 013D // Analog Comparator initialization
                 ; 0000 013E // Analog Comparator: Off
                 ; 0000 013F // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 0140 ACSR=0x80;
0001d9 e8e0      	LDI  R30,LOW(128)
0001da b9e8      	OUT  0x8,R30
                 ; 0000 0141 SFIOR=0x00;
0001db e0e0      	LDI  R30,LOW(0)
0001dc bfe0      	OUT  0x30,R30
                 ; 0000 0142 
                 ; 0000 0143 // ADC initialization
                 ; 0000 0144 // ADC disabled
                 ; 0000 0145 ADCSRA=0x00;
0001dd b9e6      	OUT  0x6,R30
                 ; 0000 0146 
                 ; 0000 0147 // SPI initialization
                 ; 0000 0148 // SPI disabled
                 ; 0000 0149 SPCR=0x00;
0001de b9ed      	OUT  0xD,R30
                 ; 0000 014A 
                 ; 0000 014B // TWI initialization
                 ; 0000 014C // TWI disabled
                 ; 0000 014D TWCR=0x00;
0001df bfe6      	OUT  0x36,R30
                 ; 0000 014E 
                 ; 0000 014F // Alphanumeric LCD initialization
                 ; 0000 0150 // Connections specified in the
                 ; 0000 0151 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0152 // RS - PORTD Bit 7
                 ; 0000 0153 // RD - PORTD Bit 6
                 ; 0000 0154 // EN - PORTD Bit 5
                 ; 0000 0155 // D4 - PORTD Bit 4
                 ; 0000 0156 // D5 - PORTD Bit 3
                 ; 0000 0157 // D6 - PORTD Bit 2
                 ; 0000 0158 // D7 - PORTD Bit 1
                 ; 0000 0159 // Characters/line: 16
                 ; 0000 015A lcd_init(16);
0001e0 e1e0      	LDI  R30,LOW(16)
0001e1 93ea      	ST   -Y,R30
0001e2 d124      	RCALL _lcd_init
                 ; 0000 015B lcd_putsf("Start System.....");
                +
0001e3 e2ee     +LDI R30 , LOW ( 2 * _0x0 + ( 2 ) )
0001e4 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 2 ) )
                 	__POINTW1FN _0x0,2
0001e5 d268      	RCALL SUBOPT_0x1D
                 ; 0000 015C lcd_gotoxy(0,1);
0001e6 d269      	RCALL SUBOPT_0x1E
0001e7 d26b      	RCALL SUBOPT_0x1F
0001e8 d0df      	RCALL _lcd_gotoxy
                 ; 0000 015D lcd_putsf("> ");
                +
0001e9 e4e0     +LDI R30 , LOW ( 2 * _0x0 + ( 20 ) )
0001ea e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 20 ) )
                 	__POINTW1FN _0x0,20
0001eb d262      	RCALL SUBOPT_0x1D
                 ; 0000 015E delay_ms(500);
0001ec efe4      	LDI  R30,LOW(500)
0001ed e0f1      	LDI  R31,HIGH(500)
0001ee d267      	RCALL SUBOPT_0x20
                 ; 0000 015F lcd_putsf(">");
                +
0001ef e4e3     +LDI R30 , LOW ( 2 * _0x0 + ( 23 ) )
0001f0 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 23 ) )
                 	__POINTW1FN _0x0,23
0001f1 d25c      	RCALL SUBOPT_0x1D
                 ; 0000 0160 delay_ms(200);
0001f2 d265      	RCALL SUBOPT_0x21
                 ; 0000 0161 lcd_putsf("F");
                +
0001f3 e4e5     +LDI R30 , LOW ( 2 * _0x0 + ( 25 ) )
0001f4 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 25 ) )
                 	__POINTW1FN _0x0,25
0001f5 d258      	RCALL SUBOPT_0x1D
                 ; 0000 0162 delay_ms(200);
0001f6 d261      	RCALL SUBOPT_0x21
                 ; 0000 0163 lcd_putsf("a");
                +
0001f7 e4e7     +LDI R30 , LOW ( 2 * _0x0 + ( 27 ) )
0001f8 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 27 ) )
                 	__POINTW1FN _0x0,27
0001f9 d254      	RCALL SUBOPT_0x1D
                 ; 0000 0164 delay_ms(200);
0001fa d25d      	RCALL SUBOPT_0x21
                 ; 0000 0165 lcd_putsf("i");
                +
0001fb e4e9     +LDI R30 , LOW ( 2 * _0x0 + ( 29 ) )
0001fc e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 29 ) )
                 	__POINTW1FN _0x0,29
0001fd d250      	RCALL SUBOPT_0x1D
                 ; 0000 0166 delay_ms(200);
0001fe d259      	RCALL SUBOPT_0x21
                 ; 0000 0167 lcd_putsf("r");
                +
0001ff e4eb     +LDI R30 , LOW ( 2 * _0x0 + ( 31 ) )
000200 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 31 ) )
                 	__POINTW1FN _0x0,31
000201 d24c      	RCALL SUBOPT_0x1D
                 ; 0000 0168 delay_ms(200);
000202 d255      	RCALL SUBOPT_0x21
                 ; 0000 0169 lcd_putsf("y");
                +
000203 e4ed     +LDI R30 , LOW ( 2 * _0x0 + ( 33 ) )
000204 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 33 ) )
                 	__POINTW1FN _0x0,33
000205 d248      	RCALL SUBOPT_0x1D
                 ; 0000 016A delay_ms(200);
000206 d251      	RCALL SUBOPT_0x21
                 ; 0000 016B lcd_putsf("-");
                +
000207 e4ef     +LDI R30 , LOW ( 2 * _0x0 + ( 35 ) )
000208 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 35 ) )
                 	__POINTW1FN _0x0,35
000209 d244      	RCALL SUBOPT_0x1D
                 ; 0000 016C delay_ms(200);
00020a d24d      	RCALL SUBOPT_0x21
                 ; 0000 016D lcd_putsf("E");
                +
00020b e5e1     +LDI R30 , LOW ( 2 * _0x0 + ( 37 ) )
00020c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 37 ) )
                 	__POINTW1FN _0x0,37
00020d d240      	RCALL SUBOPT_0x1D
                 ; 0000 016E delay_ms(200);
00020e d249      	RCALL SUBOPT_0x21
                 ; 0000 016F lcd_putsf("l");
                +
00020f e5e3     +LDI R30 , LOW ( 2 * _0x0 + ( 39 ) )
000210 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 39 ) )
                 	__POINTW1FN _0x0,39
000211 d23c      	RCALL SUBOPT_0x1D
                 ; 0000 0170 delay_ms(200);
000212 d245      	RCALL SUBOPT_0x21
                 ; 0000 0171 lcd_putsf("a");
                +
000213 e4e7     +LDI R30 , LOW ( 2 * _0x0 + ( 27 ) )
000214 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 27 ) )
                 	__POINTW1FN _0x0,27
000215 d238      	RCALL SUBOPT_0x1D
                 ; 0000 0172 delay_ms(200);
000216 d241      	RCALL SUBOPT_0x21
                 ; 0000 0173 lcd_putsf("b");
                +
000217 e5e5     +LDI R30 , LOW ( 2 * _0x0 + ( 41 ) )
000218 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 41 ) )
                 	__POINTW1FN _0x0,41
000219 d234      	RCALL SUBOPT_0x1D
                 ; 0000 0174 delay_ms(200);
00021a d23d      	RCALL SUBOPT_0x21
                 ; 0000 0175 lcd_putsf("> ");
                +
00021b e4e0     +LDI R30 , LOW ( 2 * _0x0 + ( 20 ) )
00021c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 20 ) )
                 	__POINTW1FN _0x0,20
00021d d230      	RCALL SUBOPT_0x1D
                 ; 0000 0176 delay_ms(200);
00021e d239      	RCALL SUBOPT_0x21
                 ; 0000 0177 lcd_putsf(">");
                +
00021f e4e3     +LDI R30 , LOW ( 2 * _0x0 + ( 23 ) )
000220 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 23 ) )
                 	__POINTW1FN _0x0,23
000221 d22c      	RCALL SUBOPT_0x1D
                 ; 0000 0178 role4=0;
000222 98ad      	CBI  0x15,5
                 ; 0000 0179 delay_ms(300);
000223 e2ec      	LDI  R30,LOW(300)
000224 e0f1      	LDI  R31,HIGH(300)
000225 d230      	RCALL SUBOPT_0x20
                 ; 0000 017A role4=1;
000226 9aad      	SBI  0x15,5
                 ; 0000 017B delay_ms(1300);
000227 e1e4      	LDI  R30,LOW(1300)
000228 e0f5      	LDI  R31,HIGH(1300)
000229 d22c      	RCALL SUBOPT_0x20
                 ; 0000 017C lcd_clear();
00022a d0a9      	RCALL _lcd_clear
                 ; 0000 017D // Global enable interrupts
                 ; 0000 017E TCCR1A=0x00;
00022b d211      	RCALL SUBOPT_0x1C
                 ; 0000 017F TCCR1B=0x0D;
                 ; 0000 0180 TCNT1H=0x00;
                 ; 0000 0181 TCNT1L=0x00;
                 ; 0000 0182 ICR1H=0x00;
                 ; 0000 0183 ICR1L=0x00;
                 ; 0000 0184 OCR1AH=0x3D;
                 ; 0000 0185 OCR1AL=0x09;
                 ; 0000 0186 OCR1BH=0x00;
                 ; 0000 0187 OCR1BL=0x00;
                 ; 0000 0188 #asm("sei")
00022c 9478      	sei
                 ; 0000 0189 
                 ; 0000 018A while (1)
                 _0x62:
                 ; 0000 018B       {
                 ; 0000 018C       // Place your code here
                 ; 0000 018D         read_key();
00022d df5f      	RCALL _read_key
                 ; 0000 018E         lcd_gotoxy(0,0);
00022e d221      	RCALL SUBOPT_0x1E
00022f d220      	RCALL SUBOPT_0x1E
000230 d097      	RCALL _lcd_gotoxy
                 ; 0000 018F 
                 ; 0000 0190         lcd_putnum(nhietdo,1,0);
000231 91e0 0178 	LDS  R30,_nhietdo
000233 91f0 0179 	LDS  R31,_nhietdo+1
000235 9160 017a 	LDS  R22,_nhietdo+2
000237 9170 017b 	LDS  R23,_nhietdo+3
000239 d304      	RCALL __PUTPARD1
00023a d218      	RCALL SUBOPT_0x1F
00023b d214      	RCALL SUBOPT_0x1E
00023c de29      	RCALL _lcd_putnum
                 ; 0000 0191         lcd_putnum(nhietdodat,7,0);
00023d d1e3      	RCALL SUBOPT_0x18
00023e d21c      	RCALL SUBOPT_0x22
00023f d210      	RCALL SUBOPT_0x1E
000240 de25      	RCALL _lcd_putnum
                 ; 0000 0192         lcd_gotoxy(0,1);
000241 d20e      	RCALL SUBOPT_0x1E
000242 d210      	RCALL SUBOPT_0x1F
000243 d084      	RCALL _lcd_gotoxy
                 ; 0000 0193 
                 ; 0000 0194         lcd_putnum(doam,1,1);
000244 91e0 017c 	LDS  R30,_doam
000246 91f0 017d 	LDS  R31,_doam+1
000248 9160 017e 	LDS  R22,_doam+2
00024a 9170 017f 	LDS  R23,_doam+3
00024c d2f1      	RCALL __PUTPARD1
00024d d205      	RCALL SUBOPT_0x1F
00024e d204      	RCALL SUBOPT_0x1F
00024f de16      	RCALL _lcd_putnum
                 ; 0000 0195         lcd_putnum(doamdat,7,1);
000250 d1de      	RCALL SUBOPT_0x1A
000251 d209      	RCALL SUBOPT_0x22
000252 d200      	RCALL SUBOPT_0x1F
000253 de12      	RCALL _lcd_putnum
                 ; 0000 0196         lcd_putnum1(sldao,13,0);
000254 01f3      	MOVW R30,R6
000255 d20a      	RCALL SUBOPT_0x23
000256 d2e7      	RCALL __PUTPARD1
000257 e0ed      	LDI  R30,LOW(13)
000258 93ea      	ST   -Y,R30
000259 d1f6      	RCALL SUBOPT_0x1E
00025a de1b      	RCALL _lcd_putnum1
                 ; 0000 0197 
                 ; 0000 0198       if ( nhietdo < nhietdodat-5 ) role1=0;
00025b d1c5      	RCALL SUBOPT_0x18
00025c 9735      	SBIW R30,5
00025d d204      	RCALL SUBOPT_0x24
00025e d31f      	RCALL __CPD21
00025f f40c      	BRGE _0x65
000260 98aa      	CBI  0x15,2
                 ; 0000 0199       if ( nhietdo > nhietdodat+5 ) role1=1;
                 _0x65:
000261 d1bf      	RCALL SUBOPT_0x18
000262 9635      	ADIW R30,5
000263 d1fe      	RCALL SUBOPT_0x24
000264 d314      	RCALL __CPD12
000265 f40c      	BRGE _0x68
000266 9aaa      	SBI  0x15,2
                 ; 0000 019A       if ( doam < doamdat-20 ) role2=0;
                 _0x68:
000267 d1c7      	RCALL SUBOPT_0x1A
000268 9774      	SBIW R30,20
000269 d201      	RCALL SUBOPT_0x25
00026a d313      	RCALL __CPD21
00026b f40c      	BRGE _0x6B
00026c 98ab      	CBI  0x15,3
                 ; 0000 019B       if ( doam > doamdat+20 ) role2=1;
                 _0x6B:
00026d d1c1      	RCALL SUBOPT_0x1A
00026e 9674      	ADIW R30,20
00026f d1fb      	RCALL SUBOPT_0x25
000270 d308      	RCALL __CPD12
000271 f40c      	BRGE _0x6E
000272 9aab      	SBI  0x15,3
                 ; 0000 019C       if ((nhietdo < 350)|(doam < 500)|(nhietdo > 385)|(doam > 800)) error=0;
                 _0x6E:
000273 d200      	RCALL SUBOPT_0x26
                +
000274 e5ee     +LDI R30 , LOW ( 0x15E )
000275 e0f1     +LDI R31 , HIGH ( 0x15E )
000276 e060     +LDI R22 , BYTE3 ( 0x15E )
000277 e070     +LDI R23 , BYTE4 ( 0x15E )
                 	__GETD1N 0x15E
000278 d244      	RCALL __LTD12
000279 2e0e      	MOV  R0,R30
00027a d202      	RCALL SUBOPT_0x27
                +
00027b efe4     +LDI R30 , LOW ( 0x1F4 )
00027c e0f1     +LDI R31 , HIGH ( 0x1F4 )
00027d e060     +LDI R22 , BYTE3 ( 0x1F4 )
00027e e070     +LDI R23 , BYTE4 ( 0x1F4 )
                 	__GETD1N 0x1F4
00027f d23d      	RCALL __LTD12
000280 2a0e      	OR   R0,R30
000281 d1f2      	RCALL SUBOPT_0x26
                +
000282 e8e1     +LDI R30 , LOW ( 0x181 )
000283 e0f1     +LDI R31 , HIGH ( 0x181 )
000284 e060     +LDI R22 , BYTE3 ( 0x181 )
000285 e070     +LDI R23 , BYTE4 ( 0x181 )
                 	__GETD1N 0x181
000286 d23e      	RCALL __GTD12
000287 2a0e      	OR   R0,R30
000288 d1f4      	RCALL SUBOPT_0x27
                +
000289 e2e0     +LDI R30 , LOW ( 0x320 )
00028a e0f3     +LDI R31 , HIGH ( 0x320 )
00028b e060     +LDI R22 , BYTE3 ( 0x320 )
00028c e070     +LDI R23 , BYTE4 ( 0x320 )
                 	__GETD1N 0x320
00028d d237      	RCALL __GTD12
00028e 29e0      	OR   R30,R0
00028f f019      	BREQ _0x71
000290 94e8      	CLT
000291 f820      	BLD  R2,0
                 ; 0000 019D       else { error=1; role4=1;}
000292 c003      	RJMP _0x72
                 _0x71:
000293 9468      	SET
000294 f820      	BLD  R2,0
000295 9aad      	SBI  0x15,5
                 _0x72:
                 ; 0000 019E 
                 ; 0000 019F       }
000296 cf96      	RJMP _0x62
                 ; 0000 01A0 }
                 _0x75:
000297 cfff      	RJMP _0x75
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
000298 81e8      	LD   R30,Y
000299 71e0      	ANDI R30,LOW(0x10)
00029a f011      	BREQ _0x2000004
00029b 9a94      	SBI  0x12,4
00029c c001      	RJMP _0x2000005
                 _0x2000004:
00029d 9894      	CBI  0x12,4
                 _0x2000005:
00029e 81e8      	LD   R30,Y
00029f 72e0      	ANDI R30,LOW(0x20)
0002a0 f011      	BREQ _0x2000006
0002a1 9a93      	SBI  0x12,3
0002a2 c001      	RJMP _0x2000007
                 _0x2000006:
0002a3 9893      	CBI  0x12,3
                 _0x2000007:
0002a4 81e8      	LD   R30,Y
0002a5 74e0      	ANDI R30,LOW(0x40)
0002a6 f011      	BREQ _0x2000008
0002a7 9a92      	SBI  0x12,2
0002a8 c001      	RJMP _0x2000009
                 _0x2000008:
0002a9 9892      	CBI  0x12,2
                 _0x2000009:
0002aa 81e8      	LD   R30,Y
0002ab 78e0      	ANDI R30,LOW(0x80)
0002ac f011      	BREQ _0x200000A
0002ad 9a91      	SBI  0x12,1
0002ae c001      	RJMP _0x200000B
                 _0x200000A:
0002af 9891      	CBI  0x12,1
                 _0x200000B:
                +
0002b0 e08b     +LDI R24 , LOW ( 11 )
                +__DELAY_USB_LOOP :
0002b1 958a     +DEC R24
0002b2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 11
0002b3 9a95      	SBI  0x12,5
                +
0002b4 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0002b5 958a     +DEC R24
0002b6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0002b7 9895      	CBI  0x12,5
                +
0002b8 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0002b9 958a     +DEC R24
0002ba f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0002bb c072      	RJMP _0x2020001
                 __lcd_write_data:
0002bc 81e8      	LD   R30,Y
0002bd d1c8      	RCALL SUBOPT_0x28
0002be 81e8          ld    r30,y
0002bf 95e2          swap  r30
0002c0 83e8          st    y,r30
0002c1 81e8      	LD   R30,Y
0002c2 d1c3      	RCALL SUBOPT_0x28
                +
0002c3 ec88     +LDI R24 , LOW ( 200 )
0002c4 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0002c5 9701     +SBIW R24 , 1
0002c6 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0002c7 c066      	RJMP _0x2020001
                 _lcd_gotoxy:
0002c8 81e8      	LD   R30,Y
0002c9 e0f0      	LDI  R31,0
0002ca 57ec      	SUBI R30,LOW(-__base_y_G100)
0002cb 4ffe      	SBCI R31,HIGH(-__base_y_G100)
0002cc 81e0      	LD   R30,Z
0002cd 81a9      	LDD  R26,Y+1
0002ce 0fea      	ADD  R30,R26
0002cf d1b8      	RCALL SUBOPT_0x29
0002d0 8099      	LDD  R9,Y+1
0002d1 8088      	LDD  R8,Y+0
0002d2 9622      	ADIW R28,2
0002d3 9508      	RET
                 _lcd_clear:
0002d4 e0e2      	LDI  R30,LOW(2)
0002d5 d1b2      	RCALL SUBOPT_0x29
0002d6 e0e3      	LDI  R30,LOW(3)
0002d7 e0f0      	LDI  R31,HIGH(3)
0002d8 d17d      	RCALL SUBOPT_0x20
0002d9 e0ec      	LDI  R30,LOW(12)
0002da d1ad      	RCALL SUBOPT_0x29
0002db d177      	RCALL SUBOPT_0x1F
0002dc dfdf      	RCALL __lcd_write_data
0002dd e0e3      	LDI  R30,LOW(3)
0002de e0f0      	LDI  R31,HIGH(3)
0002df d176      	RCALL SUBOPT_0x20
0002e0 e0e0      	LDI  R30,LOW(0)
0002e1 2e8e      	MOV  R8,R30
0002e2 2e9e      	MOV  R9,R30
0002e3 9508      	RET
                 _lcd_putchar:
0002e4 81a8      	LD   R26,Y
0002e5 30aa      	CPI  R26,LOW(0xA)
0002e6 f011      	BREQ _0x2000011
0002e7 149b      	CP   R9,R11
0002e8 f038      	BRLO _0x2000010
                 _0x2000011:
0002e9 d166      	RCALL SUBOPT_0x1E
0002ea 9483      	INC  R8
0002eb 928a      	ST   -Y,R8
0002ec dfdb      	RCALL _lcd_gotoxy
0002ed 81a8      	LD   R26,Y
0002ee 30aa      	CPI  R26,LOW(0xA)
0002ef f1f1      	BREQ _0x2020001
                 _0x2000010:
0002f0 9493      	INC  R9
0002f1 9a97      	SBI  0x12,7
0002f2 81e8      	LD   R30,Y
0002f3 d194      	RCALL SUBOPT_0x29
0002f4 9897      	CBI  0x12,7
0002f5 c038      	RJMP _0x2020001
                 _lcd_putsf:
0002f6 931a      	ST   -Y,R17
                 _0x2000017:
0002f7 81e9      	LDD  R30,Y+1
0002f8 81fa      	LDD  R31,Y+1+1
0002f9 9631      	ADIW R30,1
0002fa 83e9      	STD  Y+1,R30
0002fb 83fa      	STD  Y+1+1,R31
0002fc 9731      	SBIW R30,1
0002fd 91e4      	LPM  R30,Z
0002fe 2f1e      	MOV  R17,R30
0002ff 30e0      	CPI  R30,0
000300 f019      	BREQ _0x2000019
000301 931a      	ST   -Y,R17
000302 dfe1      	RCALL _lcd_putchar
000303 cff3      	RJMP _0x2000017
                 _0x2000019:
000304 8118      	LDD  R17,Y+0
000305 9623      	ADIW R28,3
000306 9508      	RET
                 _lcd_init:
000307 9a8c      	SBI  0x11,4
000308 9a8b      	SBI  0x11,3
000309 9a8a      	SBI  0x11,2
00030a 9a89      	SBI  0x11,1
00030b 9a8d      	SBI  0x11,5
00030c 9a8f      	SBI  0x11,7
00030d 9a8e      	SBI  0x11,6
00030e 9895      	CBI  0x12,5
00030f 9897      	CBI  0x12,7
000310 9896      	CBI  0x12,6
000311 80b8      	LDD  R11,Y+0
000312 81e8      	LD   R30,Y
000313 58e0      	SUBI R30,-LOW(128)
                +
000314 93e0 0186+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000316 81e8      	LD   R30,Y
000317 54e0      	SUBI R30,-LOW(192)
                +
000318 93e0 0187+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
00031a e1e4      	LDI  R30,LOW(20)
00031b e0f0      	LDI  R31,HIGH(20)
00031c d139      	RCALL SUBOPT_0x20
00031d e3e0      	LDI  R30,LOW(48)
00031e d167      	RCALL SUBOPT_0x28
00031f d16a      	RCALL SUBOPT_0x2A
000320 d169      	RCALL SUBOPT_0x2A
000321 d16e      	RCALL SUBOPT_0x2B
000322 e2e0      	LDI  R30,LOW(32)
000323 d162      	RCALL SUBOPT_0x28
000324 d16b      	RCALL SUBOPT_0x2B
000325 e2e8      	LDI  R30,LOW(40)
000326 d161      	RCALL SUBOPT_0x29
000327 e0e4      	LDI  R30,LOW(4)
000328 d15f      	RCALL SUBOPT_0x29
000329 e8e5      	LDI  R30,LOW(133)
00032a d15d      	RCALL SUBOPT_0x29
00032b e0e6      	LDI  R30,LOW(6)
00032c d15b      	RCALL SUBOPT_0x29
00032d dfa6      	RCALL _lcd_clear
                 _0x2020001:
00032e 9621      	ADIW R28,1
00032f 9508      	RET
                 
                 	.ESEG
                 
                 	.ORG 0x10
                 _nhietdodat:
000010 72 01     	.DW  0x172
                 
                 	.ORG 0x0
                 
                 	.ORG 0x15
                 _doamdat:
000015 58 02     	.DW  0x258
                 
                 	.ORG 0x0
                 
                 	.ORG 0x1A
                 _timeoff:
00001a 01 00     	.DW  0x1
                 
                 	.ORG 0x0
                 
                 	.DSEG
                 _i:
000160           	.BYTE 0x4
                 _doamh:
000164           	.BYTE 0x4
                 _doaml:
000168           	.BYTE 0x4
                 _nhietdoh:
00016c           	.BYTE 0x4
                 _nhietdol:
000170           	.BYTE 0x4
                 _a:
000174           	.BYTE 0x4
                 _nhietdo:
000178           	.BYTE 0x4
                 _doam:
00017c           	.BYTE 0x4
                 _time1day:
000180           	.BYTE 0x4
                 __base_y_G100:
000184           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x0:
000330 972c      	SBIW R28,12
                +
000331 85ae     +LDD R26 , Y + 14
000332 85bf     +LDD R27 , Y + 14 + 1
000333 8988     +LDD R24 , Y + 14 + 2
000334 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
                +
000335 e6e4     +LDI R30 , LOW ( 0x64 )
000336 e0f0     +LDI R31 , HIGH ( 0x64 )
000337 e060     +LDI R22 , BYTE3 ( 0x64 )
000338 e070     +LDI R23 , BYTE4 ( 0x64 )
                 	__GETD1N 0x64
000339 d1dd      	RCALL __DIVD21
                +
00033a 87e8     +STD Y + 8 , R30
00033b 87f9     +STD Y + 8 + 1 , R31
00033c 876a     +STD Y + 8 + 2 , R22
00033d 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                +
00033e e6a4     +LDI R26 , LOW ( 0x64 )
00033f e0b0     +LDI R27 , HIGH ( 0x64 )
000340 e080     +LDI R24 , BYTE3 ( 0x64 )
000341 e090     +LDI R25 , BYTE4 ( 0x64 )
                 	__GETD2N 0x64
000342 d1aa      	RCALL __MULD12
                +
000343 85ae     +LDD R26 , Y + 14
000344 85bf     +LDD R27 , Y + 14 + 1
000345 8988     +LDD R24 , Y + 14 + 2
000346 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
000347 d163      	RCALL __SUBD21
                +
000348 e0ea     +LDI R30 , LOW ( 0xA )
000349 e0f0     +LDI R31 , HIGH ( 0xA )
00034a e060     +LDI R22 , BYTE3 ( 0xA )
00034b e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
00034c d1ca      	RCALL __DIVD21
                +
00034d 83ec     +STD Y + 4 , R30
00034e 83fd     +STD Y + 4 + 1 , R31
00034f 836e     +STD Y + 4 + 2 , R22
000350 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                +
000351 85e8     +LDD R30 , Y + 8
000352 85f9     +LDD R31 , Y + 8 + 1
000353 856a     +LDD R22 , Y + 8 + 2
000354 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
                +
000355 e6a4     +LDI R26 , LOW ( 0x64 )
000356 e0b0     +LDI R27 , HIGH ( 0x64 )
000357 e080     +LDI R24 , BYTE3 ( 0x64 )
000358 e090     +LDI R25 , BYTE4 ( 0x64 )
                 	__GETD2N 0x64
000359 d193      	RCALL __MULD12
                +
00035a 85ae     +LDD R26 , Y + 14
00035b 85bf     +LDD R27 , Y + 14 + 1
00035c 8988     +LDD R24 , Y + 14 + 2
00035d 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00035e d1e4      	RCALL __SWAPD12
00035f d146      	RCALL __SUBD12
000360 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1:
                +
000361 81ec     +LDD R30 , Y + 4
000362 81fd     +LDD R31 , Y + 4 + 1
000363 816e     +LDD R22 , Y + 4 + 2
000364 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000365 e0aa     +LDI R26 , LOW ( 0xA )
000366 e0b0     +LDI R27 , HIGH ( 0xA )
000367 e080     +LDI R24 , BYTE3 ( 0xA )
000368 e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
000369 d183      	RCALL __MULD12
00036a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2:
00036b d13f      	RCALL __SUBD21
00036c d1cc      	RCALL __PUTD2S0
00036d 85ed      	LDD  R30,Y+13
00036e 93ea      	ST   -Y,R30
00036f 85ed      	LDD  R30,Y+13
000370 93ea      	ST   -Y,R30
000371 df56      	RCALL _lcd_gotoxy
000372 85e8      	LDD  R30,Y+8
000373 5de0      	SUBI R30,-LOW(48)
000374 93ea      	ST   -Y,R30
000375 df6e      	RCALL _lcd_putchar
000376 81ec      	LDD  R30,Y+4
000377 5de0      	SUBI R30,-LOW(48)
000378 93ea      	ST   -Y,R30
000379 cf6a      	RJMP _lcd_putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 38 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x3:
00037a 93fa      	ST   -Y,R31
00037b 93ea      	ST   -Y,R30
00037c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
00037d 93e0 0170 	STS  _nhietdol,R30
00037f 93f0 0171 	STS  _nhietdol+1,R31
000381 9360 0172 	STS  _nhietdol+2,R22
000383 9370 0173 	STS  _nhietdol+3,R23
000385 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5:
000386 93e0 016c 	STS  _nhietdoh,R30
000388 93f0 016d 	STS  _nhietdoh+1,R31
00038a 9360 016e 	STS  _nhietdoh+2,R22
00038c 9370 016f 	STS  _nhietdoh+3,R23
00038e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
00038f 93e0 0168 	STS  _doaml,R30
000391 93f0 0169 	STS  _doaml+1,R31
000393 9360 016a 	STS  _doaml+2,R22
000395 9370 016b 	STS  _doaml+3,R23
000397 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
000398 93e0 0164 	STS  _doamh,R30
00039a 93f0 0165 	STS  _doamh+1,R31
00039c 9360 0166 	STS  _doamh+2,R22
00039e 9370 0167 	STS  _doamh+3,R23
0003a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x8:
                +
0003a1 e8e0     +LDI R30 , LOW ( 0x80 )
0003a2 e0f0     +LDI R31 , HIGH ( 0x80 )
0003a3 e060     +LDI R22 , BYTE3 ( 0x80 )
0003a4 e070     +LDI R23 , BYTE4 ( 0x80 )
                 	__GETD1N 0x80
0003a5 93e0 0174 	STS  _a,R30
0003a7 93f0 0175 	STS  _a+1,R31
0003a9 9360 0176 	STS  _a+2,R22
0003ab 9370 0177 	STS  _a+3,R23
0003ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x9:
0003ae e0e0      	LDI  R30,LOW(0)
0003af 93e0 0160 	STS  _i,R30
0003b1 93e0 0161 	STS  _i+1,R30
0003b3 93e0 0162 	STS  _i+2,R30
0003b5 93e0 0163 	STS  _i+3,R30
0003b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:40 WORDS
                 SUBOPT_0xA:
0003b8 91a0 0160 	LDS  R26,_i
0003ba 91b0 0161 	LDS  R27,_i+1
0003bc 9180 0162 	LDS  R24,_i+2
0003be 9190 0163 	LDS  R25,_i+3
                +
0003c0 30a8     +CPI R26 , LOW ( 0x8 )
0003c1 e0e0     +LDI R30 , HIGH ( 0x8 )
0003c2 07be     +CPC R27 , R30
0003c3 e0e0     +LDI R30 , BYTE3 ( 0x8 )
0003c4 078e     +CPC R24 , R30
0003c5 e0e0     +LDI R30 , BYTE4 ( 0x8 )
0003c6 079e     +CPC R25 , R30
                 	__CPD2N 0x8
0003c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xB:
0003c8 e0e0      	LDI  R30,LOW(0)
0003c9 bfe2      	OUT  0x32,R30
0003ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
0003cb e0e2      	LDI  R30,LOW(2)
0003cc bfe3      	OUT  0x33,R30
0003cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
0003ce b7e2      	IN   R30,0x32
0003cf 36e1      	CPI  R30,LOW(0x61)
0003d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xE:
0003d1 91e0 0174 	LDS  R30,_a
0003d3 91f0 0175 	LDS  R31,_a+1
0003d5 9160 0176 	LDS  R22,_a+2
0003d7 9170 0177 	LDS  R23,_a+3
0003d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:61 WORDS
                 SUBOPT_0xF:
0003da 91a0 0174 	LDS  R26,_a
0003dc 91b0 0175 	LDS  R27,_a+1
0003de 9180 0176 	LDS  R24,_a+2
0003e0 9190 0177 	LDS  R25,_a+3
                +
0003e2 e0e2     +LDI R30 , LOW ( 0x2 )
0003e3 e0f0     +LDI R31 , HIGH ( 0x2 )
0003e4 e060     +LDI R22 , BYTE3 ( 0x2 )
0003e5 e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
0003e6 d130      	RCALL __DIVD21
0003e7 93e0 0174 	STS  _a,R30
0003e9 93f0 0175 	STS  _a+1,R31
0003eb 9360 0176 	STS  _a+2,R22
0003ed 9370 0177 	STS  _a+3,R23
0003ef cfd8      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x10:
0003f0 e0e0      	LDI  R30,LOW(0)
0003f1 bfe3      	OUT  0x33,R30
0003f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x11:
0003f3 e6a0      	LDI  R26,LOW(_i)
0003f4 e0b1      	LDI  R27,HIGH(_i)
0003f5 d139      	RCALL __GETD1P_INC
                +
0003f6 5fef     +SUBI R30 , LOW ( - 1 )
0003f7 4fff     +SBCI R31 , HIGH ( - 1 )
0003f8 4f6f     +SBCI R22 , BYTE3 ( - 1 )
0003f9 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
0003fa d139      	RCALL __PUTDP1_DEC
0003fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x12:
0003fc 91a0 0168 	LDS  R26,_doaml
0003fe 91b0 0169 	LDS  R27,_doaml+1
000400 9180 016a 	LDS  R24,_doaml+2
000402 9190 016b 	LDS  R25,_doaml+3
000404 d09c      	RCALL __ADDD12
000405 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x13:
000406 91a0 0170 	LDS  R26,_nhietdol
000408 91b0 0171 	LDS  R27,_nhietdol+1
00040a 9180 0172 	LDS  R24,_nhietdol+2
00040c 9190 0173 	LDS  R25,_nhietdol+3
00040e d092      	RCALL __ADDD12
00040f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
                +
000410 e0a0     +LDI R26 , LOW ( 0x100 )
000411 e0b1     +LDI R27 , HIGH ( 0x100 )
000412 e080     +LDI R24 , BYTE3 ( 0x100 )
000413 e090     +LDI R25 , BYTE4 ( 0x100 )
                 	__GETD2N 0x100
000414 d0d8      	RCALL __MULD12
000415 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x15:
000416 d139      	RCALL __EEPROMRDW
000417 9631      	ADIW R30,1
000418 d147      	RCALL __EEPROMWRW
000419 9731      	SBIW R30,1
00041a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x16:
00041b e1a0      	LDI  R26,LOW(_nhietdodat)
00041c e0b0      	LDI  R27,HIGH(_nhietdodat)
00041d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17:
00041e e1a5      	LDI  R26,LOW(_doamdat)
00041f e0b0      	LDI  R27,HIGH(_doamdat)
000420 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18:
000421 dff9      	RCALL SUBOPT_0x16
000422 d12d      	RCALL __EEPROMRDW
000423 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x19:
000424 d093      	RCALL __CWD1
000425 d118      	RCALL __PUTPARD1
000426 e0e7      	LDI  R30,LOW(7)
000427 93ea      	ST   -Y,R30
000428 e0e0      	LDI  R30,LOW(0)
000429 93ea      	ST   -Y,R30
00042a dc3b      	RCALL _lcd_putnum
00042b e2ec      	LDI  R30,LOW(300)
00042c e0f1      	LDI  R31,HIGH(300)
00042d df4c      	RCALL SUBOPT_0x3
00042e c066      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A:
00042f dfee      	RCALL SUBOPT_0x17
000430 d11f      	RCALL __EEPROMRDW
000431 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1B:
000432 d085      	RCALL __CWD1
000433 d10a      	RCALL __PUTPARD1
000434 e0e7      	LDI  R30,LOW(7)
000435 93ea      	ST   -Y,R30
000436 e0e1      	LDI  R30,LOW(1)
000437 93ea      	ST   -Y,R30
000438 dc2d      	RCALL _lcd_putnum
000439 e2ec      	LDI  R30,LOW(300)
00043a e0f1      	LDI  R31,HIGH(300)
00043b df3e      	RCALL SUBOPT_0x3
00043c c058      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1C:
00043d e0e0      	LDI  R30,LOW(0)
00043e bdef      	OUT  0x2F,R30
00043f e0ed      	LDI  R30,LOW(13)
000440 bdee      	OUT  0x2E,R30
000441 e0e0      	LDI  R30,LOW(0)
000442 bded      	OUT  0x2D,R30
000443 bdec      	OUT  0x2C,R30
000444 bde7      	OUT  0x27,R30
000445 bde6      	OUT  0x26,R30
000446 e3ed      	LDI  R30,LOW(61)
000447 bdeb      	OUT  0x2B,R30
000448 e0e9      	LDI  R30,LOW(9)
000449 bdea      	OUT  0x2A,R30
00044a e0e0      	LDI  R30,LOW(0)
00044b bde9      	OUT  0x29,R30
00044c bde8      	OUT  0x28,R30
00044d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1D:
00044e df2b      	RCALL SUBOPT_0x3
00044f cea6      	RJMP _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E:
000450 e0e0      	LDI  R30,LOW(0)
000451 93ea      	ST   -Y,R30
000452 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1F:
000453 e0e1      	LDI  R30,LOW(1)
000454 93ea      	ST   -Y,R30
000455 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x20:
000456 df23      	RCALL SUBOPT_0x3
000457 c03d      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:20 WORDS
                 SUBOPT_0x21:
000458 ece8      	LDI  R30,LOW(200)
000459 e0f0      	LDI  R31,HIGH(200)
00045a cffb      	RJMP SUBOPT_0x20
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x22:
00045b d05c      	RCALL __CWD1
00045c d0e1      	RCALL __PUTPARD1
00045d e0e7      	LDI  R30,LOW(7)
00045e 93ea      	ST   -Y,R30
00045f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x23:
000460 d057      	RCALL __CWD1
000461 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x24:
000462 91a0 0178 	LDS  R26,_nhietdo
000464 91b0 0179 	LDS  R27,_nhietdo+1
000466 9180 017a 	LDS  R24,_nhietdo+2
000468 9190 017b 	LDS  R25,_nhietdo+3
00046a cff5      	RJMP SUBOPT_0x23
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x25:
00046b 91a0 017c 	LDS  R26,_doam
00046d 91b0 017d 	LDS  R27,_doam+1
00046f 9180 017e 	LDS  R24,_doam+2
000471 9190 017f 	LDS  R25,_doam+3
000473 cfec      	RJMP SUBOPT_0x23
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
000474 91a0 0178 	LDS  R26,_nhietdo
000476 91b0 0179 	LDS  R27,_nhietdo+1
000478 9180 017a 	LDS  R24,_nhietdo+2
00047a 9190 017b 	LDS  R25,_nhietdo+3
00047c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27:
00047d 91a0 017c 	LDS  R26,_doam
00047f 91b0 017d 	LDS  R27,_doam+1
000481 9180 017e 	LDS  R24,_doam+2
000483 9190 017f 	LDS  R25,_doam+3
000485 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28:
000486 93ea      	ST   -Y,R30
000487 ce10      	RJMP __lcd_write_nibble_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x29:
000488 93ea      	ST   -Y,R30
000489 ce32      	RJMP __lcd_write_data
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A:
                +
00048a e980     +LDI R24 , LOW ( 400 )
00048b e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
00048c 9701     +SBIW R24 , 1
00048d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
00048e e3e0      	LDI  R30,LOW(48)
00048f cff6      	RJMP SUBOPT_0x28
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
                +
000490 e980     +LDI R24 , LOW ( 400 )
000491 e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
000492 9701     +SBIW R24 , 1
000493 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
000494 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000495 91e9      	ld   r30,y+
000496 91f9      	ld   r31,y+
000497 9630      	adiw r30,0
000498 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000499 ea80     +LDI R24 , LOW ( 0xFA0 )
00049a e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
00049b 9701     +SBIW R24 , 1
00049c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
00049d 95a8      	wdr
00049e 9731      	sbiw r30,1
00049f f7c9      	brne __delay_ms0
                 __delay_ms1:
0004a0 9508      	ret
                 
                 __ADDD12:
0004a1 0fea      	ADD  R30,R26
0004a2 1ffb      	ADC  R31,R27
0004a3 1f68      	ADC  R22,R24
0004a4 1f79      	ADC  R23,R25
0004a5 9508      	RET
                 
                 __SUBD12:
0004a6 1bea      	SUB  R30,R26
0004a7 0bfb      	SBC  R31,R27
0004a8 0b68      	SBC  R22,R24
0004a9 0b79      	SBC  R23,R25
0004aa 9508      	RET
                 
                 __SUBD21:
0004ab 1bae      	SUB  R26,R30
0004ac 0bbf      	SBC  R27,R31
0004ad 0b86      	SBC  R24,R22
0004ae 0b97      	SBC  R25,R23
0004af 9508      	RET
                 
                 __ANEGD1:
0004b0 95f0      	COM  R31
0004b1 9560      	COM  R22
0004b2 9570      	COM  R23
0004b3 95e1      	NEG  R30
0004b4 4fff      	SBCI R31,-1
0004b5 4f6f      	SBCI R22,-1
0004b6 4f7f      	SBCI R23,-1
0004b7 9508      	RET
                 
                 __CWD1:
0004b8 2f6f      	MOV  R22,R31
0004b9 0f66      	ADD  R22,R22
0004ba 0b66      	SBC  R22,R22
0004bb 2f76      	MOV  R23,R22
0004bc 9508      	RET
                 
                 __LTD12:
0004bd 17ae      	CP   R26,R30
0004be 07bf      	CPC  R27,R31
0004bf 0786      	CPC  R24,R22
0004c0 0797      	CPC  R25,R23
0004c1 e0e1      	LDI  R30,1
0004c2 f00c      	BRLT __LTD12T
0004c3 27ee      	CLR  R30
                 __LTD12T:
0004c4 9508      	RET
                 
                 __GTD12:
0004c5 17ea      	CP   R30,R26
0004c6 07fb      	CPC  R31,R27
0004c7 0768      	CPC  R22,R24
0004c8 0779      	CPC  R23,R25
0004c9 e0e1      	LDI  R30,1
0004ca f00c      	BRLT __GTD12T
0004cb 27ee      	CLR  R30
                 __GTD12T:
0004cc 9508      	RET
                 
                 __MULD12U:
0004cd 9f7a      	MUL  R23,R26
0004ce 2d70      	MOV  R23,R0
0004cf 9f6b      	MUL  R22,R27
0004d0 0d70      	ADD  R23,R0
0004d1 9ff8      	MUL  R31,R24
0004d2 0d70      	ADD  R23,R0
0004d3 9fe9      	MUL  R30,R25
0004d4 0d70      	ADD  R23,R0
0004d5 9f6a      	MUL  R22,R26
0004d6 2d60      	MOV  R22,R0
0004d7 0d71      	ADD  R23,R1
0004d8 9ffb      	MUL  R31,R27
0004d9 0d60      	ADD  R22,R0
0004da 1d71      	ADC  R23,R1
0004db 9fe8      	MUL  R30,R24
0004dc 0d60      	ADD  R22,R0
0004dd 1d71      	ADC  R23,R1
0004de 2788      	CLR  R24
0004df 9ffa      	MUL  R31,R26
0004e0 2df0      	MOV  R31,R0
0004e1 0d61      	ADD  R22,R1
0004e2 1f78      	ADC  R23,R24
0004e3 9feb      	MUL  R30,R27
0004e4 0df0      	ADD  R31,R0
0004e5 1d61      	ADC  R22,R1
0004e6 1f78      	ADC  R23,R24
0004e7 9fea      	MUL  R30,R26
0004e8 2de0      	MOV  R30,R0
0004e9 0df1      	ADD  R31,R1
0004ea 1f68      	ADC  R22,R24
0004eb 1f78      	ADC  R23,R24
0004ec 9508      	RET
                 
                 __MULD12:
0004ed d02e      	RCALL __CHKSIGND
0004ee dfde      	RCALL __MULD12U
0004ef f40e      	BRTC __MULD121
0004f0 dfbf      	RCALL __ANEGD1
                 __MULD121:
0004f1 9508      	RET
                 
                 __DIVD21U:
0004f2 933f      	PUSH R19
0004f3 934f      	PUSH R20
0004f4 935f      	PUSH R21
0004f5 2400      	CLR  R0
0004f6 2411      	CLR  R1
0004f7 2744      	CLR  R20
0004f8 2755      	CLR  R21
0004f9 e230      	LDI  R19,32
                 __DIVD21U1:
0004fa 0faa      	LSL  R26
0004fb 1fbb      	ROL  R27
0004fc 1f88      	ROL  R24
0004fd 1f99      	ROL  R25
0004fe 1c00      	ROL  R0
0004ff 1c11      	ROL  R1
000500 1f44      	ROL  R20
000501 1f55      	ROL  R21
000502 1a0e      	SUB  R0,R30
000503 0a1f      	SBC  R1,R31
000504 0b46      	SBC  R20,R22
000505 0b57      	SBC  R21,R23
000506 f428      	BRCC __DIVD21U2
000507 0e0e      	ADD  R0,R30
000508 1e1f      	ADC  R1,R31
000509 1f46      	ADC  R20,R22
00050a 1f57      	ADC  R21,R23
00050b c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00050c 60a1      	SBR  R26,1
                 __DIVD21U3:
00050d 953a      	DEC  R19
00050e f759      	BRNE __DIVD21U1
00050f 01fd      	MOVW R30,R26
000510 01bc      	MOVW R22,R24
000511 01d0      	MOVW R26,R0
000512 01ca      	MOVW R24,R20
000513 915f      	POP  R21
000514 914f      	POP  R20
000515 913f      	POP  R19
000516 9508      	RET
                 
                 __DIVD21:
000517 d004      	RCALL __CHKSIGND
000518 dfd9      	RCALL __DIVD21U
000519 f40e      	BRTC __DIVD211
00051a df95      	RCALL __ANEGD1
                 __DIVD211:
00051b 9508      	RET
                 
                 __CHKSIGND:
00051c 94e8      	CLT
00051d ff77      	SBRS R23,7
00051e c002      	RJMP __CHKSD1
00051f df90      	RCALL __ANEGD1
000520 9468      	SET
                 __CHKSD1:
000521 ff97      	SBRS R25,7
000522 c00b      	RJMP __CHKSD2
000523 2400      	CLR  R0
000524 95a0      	COM  R26
000525 95b0      	COM  R27
000526 9580      	COM  R24
000527 9590      	COM  R25
000528 9611      	ADIW R26,1
000529 1d80      	ADC  R24,R0
00052a 1d90      	ADC  R25,R0
00052b f800      	BLD  R0,0
00052c 9403      	INC  R0
00052d fa00      	BST  R0,0
                 __CHKSD2:
00052e 9508      	RET
                 
                 __GETD1P_INC:
00052f 91ed      	LD   R30,X+
000530 91fd      	LD   R31,X+
000531 916d      	LD   R22,X+
000532 917d      	LD   R23,X+
000533 9508      	RET
                 
                 __PUTDP1_DEC:
000534 937e      	ST   -X,R23
000535 936e      	ST   -X,R22
000536 93fe      	ST   -X,R31
000537 93ee      	ST   -X,R30
000538 9508      	RET
                 
                 __PUTD2S0:
000539 83a8      	ST   Y,R26
00053a 83b9      	STD  Y+1,R27
00053b 838a      	STD  Y+2,R24
00053c 839b      	STD  Y+3,R25
00053d 9508      	RET
                 
                 __PUTPARD1:
00053e 937a      	ST   -Y,R23
00053f 936a      	ST   -Y,R22
000540 93fa      	ST   -Y,R31
000541 93ea      	ST   -Y,R30
000542 9508      	RET
                 
                 __SWAPD12:
000543 2e18      	MOV  R1,R24
000544 2f86      	MOV  R24,R22
000545 2d61      	MOV  R22,R1
000546 2e19      	MOV  R1,R25
000547 2f97      	MOV  R25,R23
000548 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000549 2e1b      	MOV  R1,R27
00054a 2fbf      	MOV  R27,R31
00054b 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00054c 2e1a      	MOV  R1,R26
00054d 2fae      	MOV  R26,R30
00054e 2de1      	MOV  R30,R1
00054f 9508      	RET
                 
                 __EEPROMRDW:
000550 9611      	ADIW R26,1
000551 d002      	RCALL __EEPROMRDB
000552 2ffe      	MOV  R31,R30
000553 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
000554 99e1      	SBIC EECR,EEWE
000555 cffe      	RJMP __EEPROMRDB
000556 93ff      	PUSH R31
000557 b7ff      	IN   R31,SREG
000558 94f8      	CLI
000559 bbae      	OUT  EEARL,R26
00055a bbbf      	OUT  EEARH,R27
00055b 9ae0      	SBI  EECR,EERE
00055c b3ed      	IN   R30,EEDR
00055d bfff      	OUT  SREG,R31
00055e 91ff      	POP  R31
00055f 9508      	RET
                 
                 __EEPROMWRW:
000560 d007      	RCALL __EEPROMWRB
000561 9611      	ADIW R26,1
000562 93ef      	PUSH R30
000563 2fef      	MOV  R30,R31
000564 d003      	RCALL __EEPROMWRB
000565 91ef      	POP  R30
000566 9711      	SBIW R26,1
000567 9508      	RET
                 
                 __EEPROMWRB:
000568 9be1      	SBIS EECR,EEWE
000569 c002      	RJMP __EEPROMWRB1
00056a 95a8      	WDR
00056b cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
00056c b79f      	IN   R25,SREG
00056d 94f8      	CLI
00056e bbae      	OUT  EEARL,R26
00056f bbbf      	OUT  EEARH,R27
000570 9ae0      	SBI  EECR,EERE
000571 b38d      	IN   R24,EEDR
000572 17e8      	CP   R30,R24
000573 f019      	BREQ __EEPROMWRB0
000574 bbed      	OUT  EEDR,R30
000575 9ae2      	SBI  EECR,EEMWE
000576 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000577 bf9f      	OUT  SREG,R25
000578 9508      	RET
                 
                 __CPD12:
000579 17ea      	CP   R30,R26
00057a 07fb      	CPC  R31,R27
00057b 0768      	CPC  R22,R24
00057c 0779      	CPC  R23,R25
00057d 9508      	RET
                 
                 __CPD21:
00057e 17ae      	CP   R26,R30
00057f 07bf      	CPC  R27,R31
000580 0786      	CPC  R24,R22
000581 0797      	CPC  R25,R23
000582 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :  31 r1 :  21 r2 :   3 r3 :   0 r4 :   5 r5 :   3 r6 :   3 r7 :   0 
r8 :   4 r9 :   4 r10:   0 r11:   2 r12:   0 r13:   0 r14:   0 r15:   2 
r16:   0 r17:   4 r18:   0 r19:   4 r20:   7 r21:   6 r22:  65 r23:  61 
r24:  73 r25:  48 r26:  71 r27:  50 r28:   6 r29:   1 r30: 296 r31: 105 
x  :  11 y  : 111 z  :   9 
Registers used: 27 out of 35 (77.1%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  15 add   :  13 
adiw  :  16 and   :   0 andi  :   4 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  11 
brge  :   8 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   5 
brlt  :   2 brmi  :   0 brne  :  19 brpl  :   0 brsh  :   0 brtc  :   2 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 cbi   :  16 
cbr   :   0 clc   :   0 clh   :   0 cli   :   4 cln   :   0 clr   :  12 
cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   7 cp    :   8 
cpc   :  21 cpi   :   7 cpse  :   0 dec   :   6 des   :   0 eor   :   1 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   6 
inc   :   3 ld    :  33 ldd   :  31 ldi   : 210 lds   :  64 lpm   :   9 
lsl   :   1 lsr   :   0 mov   :  24 movw  :  12 mul   :  10 muls  :   0 
mulsu :   0 neg   :   1 nop   :   0 or    :   3 ori   :   0 out   :  51 
pop   :  13 push  :  13 rcall : 252 ret   :  62 reti  :   1 rjmp  :  82 
rol   :   7 ror   :   0 sbc   :  10 sbci  :  10 sbi   :  26 sbic  :  13 
sbis  :   7 sbiw  :  18 sbr   :   1 sbrc  :   1 sbrs  :   2 sec   :   0 
seh   :   0 sei   :   1 sen   :   0 ser   :   0 ses   :   0 set   :   2 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  46 std   :  13 
sts   :  38 sub   :   3 subi  :   8 swap  :   1 tst   :   0 wdr   :   2 

Instructions used: 62 out of 114 (54.4%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000b06   2750     72   2822    8192  34.4%
[.dseg] 0x000060 0x000188      0     40     40    1119   3.6%
[.eseg] 0x000000 0x00001c      0      6      6     512   1.2%

Assembly complete, 0 errors, 6 warnings
