
AVRASM ver. 2.1.30  D:\may ap trung\Fairy-Elab\test egg\New folder\List\teste2.asm Thu Oct 02 07:06:42 2014

D:\may ap trung\Fairy-Elab\test egg\New folder\List\teste2.asm(1060): warning: Register r4 already defined by the .DEF directive
D:\may ap trung\Fairy-Elab\test egg\New folder\List\teste2.asm(1061): warning: Register r6 already defined by the .DEF directive
D:\may ap trung\Fairy-Elab\test egg\New folder\List\teste2.asm(1062): warning: Register r8 already defined by the .DEF directive
D:\may ap trung\Fairy-Elab\test egg\New folder\List\teste2.asm(1063): warning: Register r10 already defined by the .DEF directive
D:\may ap trung\Fairy-Elab\test egg\New folder\List\teste2.asm(1064): warning: Register r13 already defined by the .DEF directive
D:\may ap trung\Fairy-Elab\test egg\New folder\List\teste2.asm(1065): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega64
                 ;Program type             : Application
                 ;Clock frequency          : 16.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega64
                 	#pragma AVRPART MEMORY PROG_FLASH 65536
                 	#pragma AVRPART MEMORY EEPROM 2048
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _demcb=R4
                 	.DEF _demwdog=R6
                 	.DEF _demquat=R8
                 	.DEF _demdtr=R10
                 	.DEF _select=R13
                 	.DEF __lcd_x=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 008f 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0196 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
000046 2710
000047 03e8
000048 0064
000049 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00004a 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00004b 1000
00004c 0100
00004d 0010
00004e 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
00004f 0000      	.DW  0x0000
                 
                 _0x74:
000050 0000
000051 0000
000052 0000
000053 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000054 0000      	.DB  0x0,0x0
                 _0x0:
000055 6146
000056 7269
000057 2d79
000058 6c45      	.DB  0x46,0x61,0x69,0x72,0x79,0x2D,0x45,0x6C
000059 6261
00005a 4e00
00005b 6968
00005c 7465      	.DB  0x61,0x62,0x0,0x4E,0x68,0x69,0x65,0x74
00005d 4420
00005e 3a6f
00005f 3625
000060 2e69      	.DB  0x20,0x44,0x6F,0x3A,0x25,0x36,0x69,0x2E
000061 2d25
000062 2575
000063 4363
000064 440a      	.DB  0x25,0x2D,0x75,0x25,0x63,0x43,0xA,0x44
000065 206f
000066 6d41
000067 253a
000068 6939      	.DB  0x6F,0x20,0x41,0x6D,0x3A,0x25,0x39,0x69
000069 252e
00006a 752d
00006b 2525
00006c 4400      	.DB  0x2E,0x25,0x2D,0x75,0x25,0x25,0x0,0x44
00006d 6f61
00006e 203a
00006f 2d25
000070 0069      	.DB  0x61,0x6F,0x3A,0x20,0x25,0x2D,0x69,0x0
000071 2d25
000072 0075
000073 514e
000074 4620      	.DB  0x25,0x2D,0x75,0x0,0x4E,0x51,0x20,0x46
000075 6961
000076 7972
D:\may ap trung\Fairy-Elab\test egg\New folder\List\teste2.asm(1132): warning: .cseg .db misalignment - padding zero byte
000077 0000      	.DB  0x61,0x69,0x72,0x79,0x0
                 _0x2000003:
000078 c080      	.DB  0x80,0xC0
                 _0x2040060:
D:\may ap trung\Fairy-Elab\test egg\New folder\List\teste2.asm(1136): warning: .cseg .db misalignment - padding zero byte
000079 0001      	.DB  0x1
                 _0x2040000:
00007a 4e2d
00007b 4e41
00007c 4900
00007d 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\may ap trung\Fairy-Elab\test egg\New folder\List\teste2.asm(1139): warning: .cseg .db misalignment - padding zero byte
00007e 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00007f 0001      	.DW  0x01
000080 0002      	.DW  0x02
000081 009e      	.DW  __REG_BIT_VARS*2
                 
000082 000b      	.DW  0x0B
000083 0500      	.DW  _0x5C
000084 00aa      	.DW  _0x0*2
                 
000085 000a      	.DW  0x0A
000086 0004      	.DW  0x04
000087 00a0      	.DW  _0x74*2
                 
000088 0002      	.DW  0x02
000089 0573      	.DW  __base_y_G100
00008a 00f0      	.DW  _0x2000003*2
                 
00008b 0001      	.DW  0x01
00008c 0579      	.DW  __seed_G102
00008d 00f2      	.DW  _0x2040060*2
                 
                 _0xFFFFFFFF:
00008e 0000      	.DW  0
                 
                 __RESET:
00008f 94f8      	CLI
000090 27ee      	CLR  R30
000091 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000092 e0f1      	LDI  R31,1
000093 bff5      	OUT  MCUCR,R31
000094 bfe5      	OUT  MCUCR,R30
000095 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
000097 e1f8      	LDI  R31,0x18
000098 bdf1      	OUT  WDTCR,R31
000099 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00009a e08d      	LDI  R24,(14-2)+1
00009b e0a2      	LDI  R26,2
00009c 27bb      	CLR  R27
                 __CLEAR_REG:
00009d 93ed      	ST   X+,R30
00009e 958a      	DEC  R24
00009f f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000a0 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000a1 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000a2 e0a0      	LDI  R26,LOW(__SRAM_START)
0000a3 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000a4 93ed      	ST   X+,R30
0000a5 9701      	SBIW R24,1
0000a6 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000a7 efee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000a8 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000a9 9185      	LPM  R24,Z+
0000aa 9195      	LPM  R25,Z+
0000ab 9700      	SBIW R24,0
0000ac f061      	BREQ __GLOBAL_INI_END
0000ad 91a5      	LPM  R26,Z+
0000ae 91b5      	LPM  R27,Z+
0000af 9005      	LPM  R0,Z+
0000b0 9015      	LPM  R1,Z+
0000b1 01bf      	MOVW R22,R30
0000b2 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000b3 9005      	LPM  R0,Z+
0000b4 920d      	ST   X+,R0
0000b5 9701      	SBIW R24,1
0000b6 f7e1      	BRNE __GLOBAL_INI_LOOP
0000b7 01fb      	MOVW R30,R22
0000b8 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000b9 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000ba bfed      	OUT  SPL,R30
0000bb e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000bc bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000bd e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000be e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000bf 940c 0294 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*****************************************************
                 ;
                 ;Chip type               : ATmega64
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 16.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 1024
                 ;*****************************************************/
                 ;
                 ;#include <mega64.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;
                 ;// Alphanumeric LCD Module functions
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;// Declare your global variables here
                 ;
                 ;void beep()
                 ; 0000 0015 {
                 
                 	.CSEG
                 _beep:
                 ; 0000 0016 DDRC.7=1;
0000c1 9aa7      	SBI  0x14,7
                 ; 0000 0017 PORTC.7=0;
0000c2 98af      	CBI  0x15,7
                 ; 0000 0018 delay_ms(30);
0000c3 e1ee      	LDI  R30,LOW(30)
0000c4 e0f0      	LDI  R31,HIGH(30)
0000c5 940e 063a 	CALL SUBOPT_0x0
                 ; 0000 0019 PORTC.7=1;
0000c7 9aaf      	SBI  0x15,7
                 ; 0000 001A delay_ms(70);
0000c8 e4e6      	LDI  R30,LOW(70)
0000c9 e0f0      	LDI  R31,HIGH(70)
0000ca c1c4      	RJMP _0x20C0004
                 ; 0000 001B }
                 ;
                 ;///////////////////////////////////////
                 ;#define ddrdata DDRC.6
                 ;#define portdata PORTC.6
                 ;#define data PINC.6
                 ;long doamh, doaml, nhietdoh, nhietdol, nhietdo, doam;
                 ;void read_am2301()   // Clock value: 1382.400 kHz
                 ; 0000 0023      {
                 _read_am2301:
                 ; 0000 0024      int i,a;
                 ; 0000 0025      a=128;
0000cb 940e 084a 	CALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	a -> R18,R19
                +
0000cd e820     +LDI R18 , LOW ( 128 )
0000ce e030     +LDI R19 , HIGH ( 128 )
                 	__GETWRN 18,19,128
                 ; 0000 0026      ddrdata=1;
0000cf 9aa6      	SBI  0x14,6
                 ; 0000 0027      portdata=0;
0000d0 98ae      	CBI  0x15,6
                 ; 0000 0028      delay_us(1000);
                +
0000d1 ea80     +LDI R24 , LOW ( 4000 )
0000d2 e09f     +LDI R25 , HIGH ( 4000 )
                +__DELAY_USW_LOOP :
0000d3 9701     +SBIW R24 , 1
0000d4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 4000
                 ; 0000 0029      portdata=1;
0000d5 9aae      	SBI  0x15,6
                 ; 0000 002A      delay_us(30);
                +
0000d6 ea80     +LDI R24 , LOW ( 160 )
                +__DELAY_USB_LOOP :
0000d7 958a     +DEC R24
0000d8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 160
                 ; 0000 002B      portdata=0;
0000d9 98ae      	CBI  0x15,6
                 ; 0000 002C      ddrdata=0;
0000da 98a6      	CBI  0x14,6
                 ; 0000 002D      while(data==0)
                 _0x13:
0000db 9b9e      	SBIS 0x13,6
                 ; 0000 002E           {
                 ; 0000 002F           }
0000dc cffe      	RJMP _0x13
                 ; 0000 0030      while(data==1)
                 _0x16:
0000dd 999e      	SBIC 0x13,6
                 ; 0000 0031           {
                 ; 0000 0032           }
0000de cffe      	RJMP _0x16
                 ; 0000 0033      while(data==0)
                 _0x19:
0000df 9b9e      	SBIS 0x13,6
                 ; 0000 0034           {
                 ; 0000 0035           }
0000e0 cffe      	RJMP _0x19
                 ; 0000 0036      a=128;
0000e1 940e 063e 	CALL SUBOPT_0x1
                 ; 0000 0037      for (i=0;i<8;i++)
                 _0x1D:
                +
0000e3 3008     +CPI R16 , LOW ( 8 )
0000e4 e0e0     +LDI R30 , HIGH ( 8 )
0000e5 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
0000e6 f4dc      	BRGE _0x1E
                 ; 0000 0038           {
                 ; 0000 0039           TCNT2=0x00;
0000e7 940e 0643 	CALL SUBOPT_0x2
                 ; 0000 003A           TCCR2=0x02;
                 ; 0000 003B           while(data==1)
                 _0x1F:
0000e9 999e      	SBIC 0x13,6
                 ; 0000 003C                {
                 ; 0000 003D                }
0000ea cffe      	RJMP _0x1F
                 ; 0000 003E           if (TCNT2 > 96) doamh = doamh + a ;
0000eb b5e4      	IN   R30,0x24
0000ec 36e1      	CPI  R30,LOW(0x61)
0000ed f068      	BRLO _0x22
0000ee 01f9      	MOVW R30,R18
0000ef 91a0 050b 	LDS  R26,_doamh
0000f1 91b0 050c 	LDS  R27,_doamh+1
0000f3 9180 050d 	LDS  R24,_doamh+2
0000f5 9190 050e 	LDS  R25,_doamh+3
0000f7 940e 0648 	CALL SUBOPT_0x3
0000f9 940e 064d 	CALL SUBOPT_0x4
                 ; 0000 003F           a=a/2;
                 _0x22:
0000fb 940e 0656 	CALL SUBOPT_0x5
                 ; 0000 0040           TCNT2=0x00;
                 ; 0000 0041           TCCR2=0x00;
                 ; 0000 0042           while (data==0)
                 _0x23:
0000fd 9b9e      	SBIS 0x13,6
                 ; 0000 0043                {
                 ; 0000 0044                }
0000fe cffe      	RJMP _0x23
                 ; 0000 0045           }
                +
0000ff 5f0f     +SUBI R16 , LOW ( - 1 )
000100 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000101 cfe1      	RJMP _0x1D
                 _0x1E:
                 ; 0000 0046      a=128;
000102 940e 063e 	CALL SUBOPT_0x1
                 ; 0000 0047      for (i=0;i<8;i++)
                 _0x27:
                +
000104 3008     +CPI R16 , LOW ( 8 )
000105 e0e0     +LDI R30 , HIGH ( 8 )
000106 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000107 f4ac      	BRGE _0x28
                 ; 0000 0048           {
                 ; 0000 0049           TCNT2=0x00;
000108 940e 0643 	CALL SUBOPT_0x2
                 ; 0000 004A           TCCR2=0x02;
                 ; 0000 004B           while(data==1)
                 _0x29:
00010a 999e      	SBIC 0x13,6
                 ; 0000 004C                {
                 ; 0000 004D                }
00010b cffe      	RJMP _0x29
                 ; 0000 004E           if (TCNT2 > 96) doaml = doaml + a ;
00010c b5e4      	IN   R30,0x24
00010d 36e1      	CPI  R30,LOW(0x61)
00010e f038      	BRLO _0x2C
00010f 01f9      	MOVW R30,R18
000110 940e 0660 	CALL SUBOPT_0x6
000112 940e 0648 	CALL SUBOPT_0x3
000114 940e 0669 	CALL SUBOPT_0x7
                 ; 0000 004F           a=a/2;
                 _0x2C:
000116 940e 0656 	CALL SUBOPT_0x5
                 ; 0000 0050           TCNT2=0x00;
                 ; 0000 0051           TCCR2=0x00;
                 ; 0000 0052           while (data==0)
                 _0x2D:
000118 9b9e      	SBIS 0x13,6
                 ; 0000 0053                {
                 ; 0000 0054                }
000119 cffe      	RJMP _0x2D
                 ; 0000 0055           }
                +
00011a 5f0f     +SUBI R16 , LOW ( - 1 )
00011b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00011c cfe7      	RJMP _0x27
                 _0x28:
                 ; 0000 0056      a=128;
00011d 940e 063e 	CALL SUBOPT_0x1
                 ; 0000 0057      for (i=0;i<8;i++)
                 _0x31:
                +
00011f 3008     +CPI R16 , LOW ( 8 )
000120 e0e0     +LDI R30 , HIGH ( 8 )
000121 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000122 f4dc      	BRGE _0x32
                 ; 0000 0058           {
                 ; 0000 0059           TCNT2=0x00;
000123 940e 0643 	CALL SUBOPT_0x2
                 ; 0000 005A           TCCR2=0x02;
                 ; 0000 005B           while(data==1)
                 _0x33:
000125 999e      	SBIC 0x13,6
                 ; 0000 005C                {
                 ; 0000 005D                }
000126 cffe      	RJMP _0x33
                 ; 0000 005E           if (TCNT2 > 96 ) nhietdoh = nhietdoh + a ;
000127 b5e4      	IN   R30,0x24
000128 36e1      	CPI  R30,LOW(0x61)
000129 f068      	BRLO _0x36
00012a 01f9      	MOVW R30,R18
00012b 91a0 0513 	LDS  R26,_nhietdoh
00012d 91b0 0514 	LDS  R27,_nhietdoh+1
00012f 9180 0515 	LDS  R24,_nhietdoh+2
000131 9190 0516 	LDS  R25,_nhietdoh+3
000133 940e 0648 	CALL SUBOPT_0x3
000135 940e 0672 	CALL SUBOPT_0x8
                 ; 0000 005F           a=a/2;
                 _0x36:
000137 940e 0656 	CALL SUBOPT_0x5
                 ; 0000 0060           TCNT2=0x00;
                 ; 0000 0061           TCCR2=0x00;
                 ; 0000 0062           while (data==0)
                 _0x37:
000139 9b9e      	SBIS 0x13,6
                 ; 0000 0063                {
                 ; 0000 0064                }
00013a cffe      	RJMP _0x37
                 ; 0000 0065           }
                +
00013b 5f0f     +SUBI R16 , LOW ( - 1 )
00013c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00013d cfe1      	RJMP _0x31
                 _0x32:
                 ; 0000 0066      a=128;
00013e 940e 063e 	CALL SUBOPT_0x1
                 ; 0000 0067      for (i=0;i<8;i++)
                 _0x3B:
                +
000140 3008     +CPI R16 , LOW ( 8 )
000141 e0e0     +LDI R30 , HIGH ( 8 )
000142 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000143 f4ac      	BRGE _0x3C
                 ; 0000 0068           {
                 ; 0000 0069           TCNT2=0x00;
000144 940e 0643 	CALL SUBOPT_0x2
                 ; 0000 006A           TCCR2=0x02;
                 ; 0000 006B           while(data==1)
                 _0x3D:
000146 999e      	SBIC 0x13,6
                 ; 0000 006C                {
                 ; 0000 006D                }
000147 cffe      	RJMP _0x3D
                 ; 0000 006E           if (TCNT2 > 96) nhietdol = nhietdol + a ;
000148 b5e4      	IN   R30,0x24
000149 36e1      	CPI  R30,LOW(0x61)
00014a f038      	BRLO _0x40
00014b 01f9      	MOVW R30,R18
00014c 940e 067b 	CALL SUBOPT_0x9
00014e 940e 0648 	CALL SUBOPT_0x3
000150 940e 0684 	CALL SUBOPT_0xA
                 ; 0000 006F           a=a/2;
                 _0x40:
000152 940e 0656 	CALL SUBOPT_0x5
                 ; 0000 0070           TCNT2=0x00;
                 ; 0000 0071           TCCR2=0x00;
                 ; 0000 0072           while (data==0)
                 _0x41:
000154 9b9e      	SBIS 0x13,6
                 ; 0000 0073                {
                 ; 0000 0074                }
000155 cffe      	RJMP _0x41
                 ; 0000 0075           }
                +
000156 5f0f     +SUBI R16 , LOW ( - 1 )
000157 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000158 cfe7      	RJMP _0x3B
                 _0x3C:
                 ; 0000 0076      nhietdo = nhietdoh*256 + nhietdol;
000159 91e0 0513 	LDS  R30,_nhietdoh
00015b 91f0 0514 	LDS  R31,_nhietdoh+1
00015d 9160 0515 	LDS  R22,_nhietdoh+2
00015f 9170 0516 	LDS  R23,_nhietdoh+3
000161 940e 068d 	CALL SUBOPT_0xB
000163 940e 067b 	CALL SUBOPT_0x9
000165 940e 074b 	CALL __ADDD12
000167 93e0 051b 	STS  _nhietdo,R30
000169 93f0 051c 	STS  _nhietdo+1,R31
00016b 9360 051d 	STS  _nhietdo+2,R22
00016d 9370 051e 	STS  _nhietdo+3,R23
                 ; 0000 0077      doam = doamh*256 + doaml;
00016f 91e0 050b 	LDS  R30,_doamh
000171 91f0 050c 	LDS  R31,_doamh+1
000173 9160 050d 	LDS  R22,_doamh+2
000175 9170 050e 	LDS  R23,_doamh+3
000177 940e 068d 	CALL SUBOPT_0xB
000179 940e 0660 	CALL SUBOPT_0x6
00017b 940e 074b 	CALL __ADDD12
00017d 93e0 051f 	STS  _doam,R30
00017f 93f0 0520 	STS  _doam+1,R31
000181 9360 0521 	STS  _doam+2,R22
000183 9370 0522 	STS  _doam+3,R23
                 ; 0000 0078      doamh=doaml=nhietdoh=nhietdol=0;
                +
000185 e0e0     +LDI R30 , LOW ( 0x0 )
000186 e0f0     +LDI R31 , HIGH ( 0x0 )
000187 e060     +LDI R22 , BYTE3 ( 0x0 )
000188 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
000189 940e 0684 	CALL SUBOPT_0xA
00018b 940e 0672 	CALL SUBOPT_0x8
00018d 940e 0669 	CALL SUBOPT_0x7
00018f 940e 064d 	CALL SUBOPT_0x4
                 ; 0000 0079      portdata=1;
000191 9aae      	SBI  0x15,6
                 ; 0000 007A      }
000192 940e 0851 	CALL __LOADLOCR4
000194 9624      	ADIW R28,4
000195 9508      	RET
                 ;
                 ;///////////////////////////////////////
                 ;#define daotrung PORTB.4
                 ;#define ctht1 PIND.6
                 ;#define ctht2 PIND.7
                 ;
                 ;eeprom char hong1=0x00, hong2=0xff, hong3=0x7f, hong4=0xff;
                 ;eeprom int solandtr=0;
                 ;eeprom unsigned char dempdtr=0;
                 ;
                 ;int demcb=0, demwdog=0, demquat=0, demdtr=0 ;
                 ;bit kichquat=0;
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0089 {
                 _timer0_ovf_isr:
000196 920a      	ST   -Y,R0
000197 921a      	ST   -Y,R1
000198 92fa      	ST   -Y,R15
000199 936a      	ST   -Y,R22
00019a 937a      	ST   -Y,R23
00019b 938a      	ST   -Y,R24
00019c 939a      	ST   -Y,R25
00019d 93aa      	ST   -Y,R26
00019e 93ba      	ST   -Y,R27
00019f 93ea      	ST   -Y,R30
0001a0 93fa      	ST   -Y,R31
0001a1 b7ef      	IN   R30,SREG
0001a2 93ea      	ST   -Y,R30
                 ; 0000 008A // Reinitialize Timer 0 value
                 ; 0000 008B TCNT0=0x27;
0001a3 e2e7      	LDI  R30,LOW(39)
0001a4 bfe2      	OUT  0x32,R30
                 ; 0000 008C // Place your code here
                 ; 0000 008D demdtr++;
0001a5 01f5      	MOVW R30,R10
0001a6 9631      	ADIW R30,1
0001a7 015f      	MOVW R10,R30
                 ; 0000 008E demcb++;
0001a8 01f2      	MOVW R30,R4
0001a9 9631      	ADIW R30,1
0001aa 012f      	MOVW R4,R30
                 ; 0000 008F demwdog++;
0001ab 01f3      	MOVW R30,R6
0001ac 9631      	ADIW R30,1
0001ad 013f      	MOVW R6,R30
                 ; 0000 0090 demquat++;
0001ae 01f4      	MOVW R30,R8
0001af 9631      	ADIW R30,1
0001b0 014f      	MOVW R8,R30
                 ; 0000 0091 if (demwdog >=50)
0001b1 e3e2      	LDI  R30,LOW(50)
0001b2 e0f0      	LDI  R31,HIGH(50)
0001b3 166e      	CP   R6,R30
0001b4 067f      	CPC  R7,R31
0001b5 f01c      	BRLT _0x46
                 ; 0000 0092     {
                 ; 0000 0093     demwdog=0;
0001b6 2466      	CLR  R6
0001b7 2477      	CLR  R7
                 ; 0000 0094     #asm("WDR") ;
0001b8 95a8      	WDR
                 ; 0000 0095     }
                 ; 0000 0096 if (demcb >=100)
                 _0x46:
0001b9 e6e4      	LDI  R30,LOW(100)
0001ba e0f0      	LDI  R31,HIGH(100)
0001bb 164e      	CP   R4,R30
0001bc 065f      	CPC  R5,R31
0001bd f01c      	BRLT _0x47
                 ; 0000 0097     {
                 ; 0000 0098     demcb=0;
0001be 2444      	CLR  R4
0001bf 2455      	CLR  R5
                 ; 0000 0099     read_am2301();
0001c0 df0a      	RCALL _read_am2301
                 ; 0000 009A     };
                 _0x47:
                 ; 0000 009B 
                 ; 0000 009C switch (demquat)
0001c1 01f4      	MOVW R30,R8
                 ; 0000 009D     {
                 ; 0000 009E     case 3 :
0001c2 30e3      	CPI  R30,LOW(0x3)
0001c3 e0a0      	LDI  R26,HIGH(0x3)
0001c4 07fa      	CPC  R31,R26
0001c5 f419      	BRNE _0x4B
                 ; 0000 009F         kichquat=1;
0001c6 9468      	SET
0001c7 f820      	BLD  R2,0
                 ; 0000 00A0         break;
0001c8 c00d      	RJMP _0x4A
                 ; 0000 00A1     case 600 :
                 _0x4B:
0001c9 35e8      	CPI  R30,LOW(0x258)
0001ca e0a2      	LDI  R26,HIGH(0x258)
0001cb 07fa      	CPC  R31,R26
0001cc f419      	BRNE _0x4C
                 ; 0000 00A2         kichquat=0;
0001cd 94e8      	CLT
0001ce f820      	BLD  R2,0
                 ; 0000 00A3         break;
0001cf c006      	RJMP _0x4A
                 ; 0000 00A4     case 5000 :
                 _0x4C:
0001d0 38e8      	CPI  R30,LOW(0x1388)
0001d1 e1a3      	LDI  R26,HIGH(0x1388)
0001d2 07fa      	CPC  R31,R26
0001d3 f411      	BRNE _0x4A
                 ; 0000 00A5         demquat=0;
0001d4 2488      	CLR  R8
0001d5 2499      	CLR  R9
                 ; 0000 00A6         break;
                 ; 0000 00A7     }
                 _0x4A:
                 ; 0000 00A8 
                 ; 0000 00A9 }
0001d6 91e9      	LD   R30,Y+
0001d7 bfef      	OUT  SREG,R30
0001d8 91f9      	LD   R31,Y+
0001d9 91e9      	LD   R30,Y+
0001da 91b9      	LD   R27,Y+
0001db 91a9      	LD   R26,Y+
0001dc 9199      	LD   R25,Y+
0001dd 9189      	LD   R24,Y+
0001de 9179      	LD   R23,Y+
0001df 9169      	LD   R22,Y+
0001e0 90f9      	LD   R15,Y+
0001e1 9019      	LD   R1,Y+
0001e2 9009      	LD   R0,Y+
0001e3 9518      	RETI
                 ;
                 ;//////////////////////////////////
                 ;char select=0;
                 ;void kiemtradr()
                 ; 0000 00AE {
                 _kiemtradr:
                 ; 0000 00AF     if (demdtr >=9000)
0001e4 e2e8      	LDI  R30,LOW(9000)
0001e5 e2f3      	LDI  R31,HIGH(9000)
0001e6 16ae      	CP   R10,R30
0001e7 06bf      	CPC  R11,R31
0001e8 f184      	BRLT _0x4E
                 ; 0000 00B0     {
                 ; 0000 00B1     demdtr=0;
0001e9 24aa      	CLR  R10
0001ea 24bb      	CLR  R11
                 ; 0000 00B2     dempdtr++;
0001eb 940e 0694 	CALL SUBOPT_0xC
0001ed 5fef      	SUBI R30,-LOW(1)
0001ee 940e 0837 	CALL __EEPROMWRB
0001f0 50e1      	SUBI R30,LOW(1)
                 ; 0000 00B3     if (dempdtr >=60)
0001f1 940e 0694 	CALL SUBOPT_0xC
0001f3 33ec      	CPI  R30,LOW(0x3C)
0001f4 f120      	BRLO _0x4F
                 ; 0000 00B4         {
                 ; 0000 00B5         dempdtr=0;
0001f5 e0a6      	LDI  R26,LOW(_dempdtr)
0001f6 e0b0      	LDI  R27,HIGH(_dempdtr)
0001f7 e0e0      	LDI  R30,LOW(0)
0001f8 940e 0837 	CALL __EEPROMWRB
                 ; 0000 00B6         solandtr++;
0001fa e0a4      	LDI  R26,LOW(_solandtr)
0001fb e0b0      	LDI  R27,HIGH(_solandtr)
0001fc 940e 081f 	CALL __EEPROMRDW
0001fe 9631      	ADIW R30,1
0001ff 940e 082f 	CALL __EEPROMWRW
000201 9731      	SBIW R30,1
                 ; 0000 00B7         if ((ctht1==0)|((ctht1==1)&(ctht1==1))) {select=1;}
000202 e0a0      	LDI  R26,0
000203 9986      	SBIC 0x10,6
000204 e0a1      	LDI  R26,1
000205 e0e0      	LDI  R30,LOW(0)
000206 940e 0761 	CALL __EQB12
000208 2e1e      	MOV  R1,R30
000209 940e 0699 	CALL SUBOPT_0xD
00020b 2e0e      	MOV  R0,R30
00020c 940e 0699 	CALL SUBOPT_0xD
00020e 21e0      	AND  R30,R0
00020f 29e1      	OR   R30,R1
000210 f011      	BREQ _0x50
000211 e0e1      	LDI  R30,LOW(1)
000212 2ede      	MOV  R13,R30
                 ; 0000 00B8         if (ctht2==0) {select=2;}
                 _0x50:
000213 9987      	SBIC 0x10,7
000214 c002      	RJMP _0x51
000215 e0e2      	LDI  R30,LOW(2)
000216 2ede      	MOV  R13,R30
                 ; 0000 00B9         daotrung=0;
                 _0x51:
000217 98c4      	CBI  0x18,4
                 ; 0000 00BA         beep();
000218 dea8      	RCALL _beep
                 ; 0000 00BB         }
                 ; 0000 00BC     }
                 _0x4F:
                 ; 0000 00BD       if (select==1) {if (ctht2==0) {beep(); daotrung=1; select=0;}}
                 _0x4E:
000219 e0e1      	LDI  R30,LOW(1)
00021a 15ed      	CP   R30,R13
00021b f429      	BRNE _0x54
00021c 9987      	SBIC 0x10,7
00021d c003      	RJMP _0x55
00021e dea2      	RCALL _beep
00021f 9ac4      	SBI  0x18,4
000220 24dd      	CLR  R13
                 _0x55:
                 ; 0000 00BE       if (select==2) {if (ctht1==0) {beep(); daotrung=1; select=0;}}
                 _0x54:
000221 e0e2      	LDI  R30,LOW(2)
000222 15ed      	CP   R30,R13
000223 f429      	BRNE _0x58
000224 9986      	SBIC 0x10,6
000225 c003      	RJMP _0x59
000226 de9a      	RCALL _beep
000227 9ac4      	SBI  0x18,4
000228 24dd      	CLR  R13
                 _0x59:
                 ; 0000 00BF }
                 _0x58:
000229 9508      	RET
                 ;
                 ;/////////////////////////////////
                 ;char display_buffer[80];
                 ;void hienthilcd()
                 ; 0000 00C4 {
                 _hienthilcd:
                 ; 0000 00C5     lcd_clear();
00022a 940e 03f9 	CALL _lcd_clear
                 ; 0000 00C6     lcd_gotoxy(5,0);
00022c e0e5      	LDI  R30,LOW(5)
00022d 93ea      	ST   -Y,R30
00022e e0e0      	LDI  R30,LOW(0)
00022f 93ea      	ST   -Y,R30
000230 940e 03ea 	CALL _lcd_gotoxy
                 ; 0000 00C7     lcd_puts("Fairy-Elab");
                +
000232 e0e0     +LDI R30 , LOW ( _0x5C + ( 0 ) )
000233 e0f5     +LDI R31 , HIGH ( _0x5C + ( 0 ) )
                 	__POINTW1MN _0x5C,0
000234 940e 06a0 	CALL SUBOPT_0xE
                 ; 0000 00C8     sprintf(display_buffer,"Nhiet Do:%6i.%-u%cC\nDo Am:%9i.%-u%%",
                 ; 0000 00C9     nhietdo/10,abs(nhietdo%10),0xdf,doam/10,abs(doam%10),0xdf);
                +
000236 ebe5     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
000237 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
000238 93fa      	ST   -Y,R31
000239 93ea      	ST   -Y,R30
00023a 940e 06a9 	CALL SUBOPT_0xF
00023c 940e 07d8 	CALL __DIVD21
00023e 940e 081a 	CALL __PUTPARD1
000240 940e 06a9 	CALL SUBOPT_0xF
000242 940e 06b6 	CALL SUBOPT_0x10
000244 940e 06c7 	CALL SUBOPT_0x11
000246 940e 07d8 	CALL __DIVD21
000248 940e 081a 	CALL __PUTPARD1
00024a 940e 06c7 	CALL SUBOPT_0x11
00024c 940e 06b6 	CALL SUBOPT_0x10
00024e e188      	LDI  R24,24
00024f 940e 05e7 	CALL _sprintf
000251 966c      	ADIW R28,28
                 ; 0000 00CA     lcd_gotoxy(0,1);
000252 e0e0      	LDI  R30,LOW(0)
000253 93ea      	ST   -Y,R30
000254 e0e1      	LDI  R30,LOW(1)
000255 940e 06d4 	CALL SUBOPT_0x12
                 ; 0000 00CB     lcd_puts(display_buffer);
                 ; 0000 00CC     sprintf(display_buffer,"Dao: %-i",solandtr);
                +
000257 ede9     +LDI R30 , LOW ( 2 * _0x0 + ( 47 ) )
000258 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 47 ) )
                 	__POINTW1FN _0x0,47
000259 93fa      	ST   -Y,R31
00025a 93ea      	ST   -Y,R30
00025b e0a4      	LDI  R26,LOW(_solandtr)
00025c e0b0      	LDI  R27,HIGH(_solandtr)
00025d 940e 081f 	CALL __EEPROMRDW
00025f 940e 06da 	CALL SUBOPT_0x13
                 ; 0000 00CD     lcd_gotoxy(0,3);
000261 e0e0      	LDI  R30,LOW(0)
000262 93ea      	ST   -Y,R30
000263 e0e3      	LDI  R30,LOW(3)
000264 940e 06d4 	CALL SUBOPT_0x12
                 ; 0000 00CE     lcd_puts(display_buffer);
                 ; 0000 00CF     sprintf(display_buffer,"%-u",dempdtr);
                +
000266 eee2     +LDI R30 , LOW ( 2 * _0x0 + ( 56 ) )
000267 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 56 ) )
                 	__POINTW1FN _0x0,56
000268 93fa      	ST   -Y,R31
000269 93ea      	ST   -Y,R30
00026a 940e 0694 	CALL SUBOPT_0xC
00026c 27ff      	CLR  R31
00026d 2766      	CLR  R22
00026e 2777      	CLR  R23
00026f 940e 081a 	CALL __PUTPARD1
000271 e084      	LDI  R24,4
000272 940e 05e7 	CALL _sprintf
000274 9628      	ADIW R28,8
                 ; 0000 00D0     lcd_gotoxy(10,3);
000275 e0ea      	LDI  R30,LOW(10)
000276 93ea      	ST   -Y,R30
000277 e0e3      	LDI  R30,LOW(3)
000278 940e 06d4 	CALL SUBOPT_0x12
                 ; 0000 00D1     lcd_puts(display_buffer);
                 ; 0000 00D2     sprintf(display_buffer,"%-i",demdtr);
                +
00027a edee     +LDI R30 , LOW ( 2 * _0x0 + ( 52 ) )
00027b e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 52 ) )
                 	__POINTW1FN _0x0,52
00027c 93fa      	ST   -Y,R31
00027d 93ea      	ST   -Y,R30
00027e 01f5      	MOVW R30,R10
00027f 940e 06da 	CALL SUBOPT_0x13
                 ; 0000 00D3     lcd_gotoxy(15,3);
000281 e0ef      	LDI  R30,LOW(15)
000282 93ea      	ST   -Y,R30
000283 e0e3      	LDI  R30,LOW(3)
000284 93ea      	ST   -Y,R30
000285 940e 03ea 	CALL _lcd_gotoxy
                 ; 0000 00D4     lcd_puts(display_buffer);
000287 e2e3      	LDI  R30,LOW(_display_buffer)
000288 e0f5      	LDI  R31,HIGH(_display_buffer)
000289 93fa      	ST   -Y,R31
00028a 93ea      	ST   -Y,R30
00028b 940e 0422 	CALL _lcd_puts
                 ; 0000 00D5     delay_ms(50);
00028d e3e2      	LDI  R30,LOW(50)
00028e e0f0      	LDI  R31,HIGH(50)
                 _0x20C0004:
00028f 93fa      	ST   -Y,R31
000290 93ea      	ST   -Y,R30
000291 940e 073b 	CALL _delay_ms
                 ; 0000 00D6 }
000293 9508      	RET
                 
                 	.DSEG
                 _0x5C:
000500           	.BYTE 0xB
                 ;
                 ;void main(void)
                 ; 0000 00D9 {
                 
                 	.CSEG
                 _main:
                 ; 0000 00DA // Declare your local variables here
                 ; 0000 00DB unsigned char k, biennd;
                 ; 0000 00DC 
                 ; 0000 00DD // Input/Output Ports initialization
                 ; 0000 00DE // Port A initialization
                 ; 0000 00DF // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 00E0 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 00E1 PORTA=0x00;
                 ;	k -> R17
                 ;	biennd -> R16
000294 e0e0      	LDI  R30,LOW(0)
000295 bbeb      	OUT  0x1B,R30
                 ; 0000 00E2 DDRA=0x00;
000296 bbea      	OUT  0x1A,R30
                 ; 0000 00E3 
                 ; 0000 00E4 // Port B initialization
                 ; 0000 00E5 // Func7=Out Func6=Out Func5=Out Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 00E6 // State7=0 State6=0 State5=0 State4=T State3=T State2=T State1=T State0=T
                 ; 0000 00E7 PORTB=0xff;
000297 efef      	LDI  R30,LOW(255)
000298 bbe8      	OUT  0x18,R30
                 ; 0000 00E8 DDRB=0xff;
000299 bbe7      	OUT  0x17,R30
                 ; 0000 00E9 
                 ; 0000 00EA // Port C initialization
                 ; 0000 00EB // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 00EC // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 00ED PORTC=0b00010000;
00029a e1e0      	LDI  R30,LOW(16)
00029b bbe5      	OUT  0x15,R30
                 ; 0000 00EE DDRC=0b00001111;
00029c e0ef      	LDI  R30,LOW(15)
00029d bbe4      	OUT  0x14,R30
                 ; 0000 00EF 
                 ; 0000 00F0 // Port D initialization
                 ; 0000 00F1 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 00F2 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 00F3 PORTD=0xff;
00029e efef      	LDI  R30,LOW(255)
00029f bbe2      	OUT  0x12,R30
                 ; 0000 00F4 DDRD=0x00;
0002a0 e0e0      	LDI  R30,LOW(0)
0002a1 bbe1      	OUT  0x11,R30
                 ; 0000 00F5 
                 ; 0000 00F6 // Port E initialization
                 ; 0000 00F7 // Func7=In Func6=In Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=In
                 ; 0000 00F8 // State7=T State6=T State5=0 State4=0 State3=0 State2=T State1=T State0=T
                 ; 0000 00F9 PORTE=0xff;
0002a2 efef      	LDI  R30,LOW(255)
0002a3 b9e3      	OUT  0x3,R30
                 ; 0000 00FA DDRE=0xff;
0002a4 b9e2      	OUT  0x2,R30
                 ; 0000 00FB 
                 ; 0000 00FC // Port F initialization
                 ; 0000 00FD // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 00FE // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0000 00FF PORTF=0x00;
0002a5 e0e0      	LDI  R30,LOW(0)
0002a6 93e0 0062 	STS  98,R30
                 ; 0000 0100 DDRF=0x00;
0002a8 93e0 0061 	STS  97,R30
                 ; 0000 0101 
                 ; 0000 0102 // Port G initialization
                 ; 0000 0103 // Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0000 0104 // State4=T State3=T State2=T State1=T State0=T
                 ; 0000 0105 PORTG=0x00;
0002aa 93e0 0065 	STS  101,R30
                 ; 0000 0106 DDRG=0x00;
0002ac 93e0 0064 	STS  100,R30
                 ; 0000 0107 
                 ; 0000 0108 // Timer/Counter 0 initialization
                 ; 0000 0109 // Clock source: System Clock
                 ; 0000 010A // Clock value: 10.800 kHz
                 ; 0000 010B // Mode: Normal top=0xFF
                 ; 0000 010C // OC0 output: Disconnected
                 ; 0000 010D ASSR=0x00;
0002ae bfe0      	OUT  0x30,R30
                 ; 0000 010E TCCR0=0x07;
0002af e0e7      	LDI  R30,LOW(7)
0002b0 bfe3      	OUT  0x33,R30
                 ; 0000 010F TCNT0=0x27;
0002b1 e2e7      	LDI  R30,LOW(39)
0002b2 bfe2      	OUT  0x32,R30
                 ; 0000 0110 OCR0=0x00;
0002b3 e0e0      	LDI  R30,LOW(0)
0002b4 bfe1      	OUT  0x31,R30
                 ; 0000 0111 
                 ; 0000 0112 // Timer/Counter 1 initialization
                 ; 0000 0113 // Clock source: System Clock
                 ; 0000 0114 // Clock value: 11059,200 kHz
                 ; 0000 0115 // Mode: Fast PWM top=ICR1
                 ; 0000 0116 // OC1A output: Inverted
                 ; 0000 0117 // OC1B output: Inverted
                 ; 0000 0118 // OC1C output: Inverted
                 ; 0000 0119 // Noise Canceler: Off
                 ; 0000 011A // Input Capture on Falling Edge
                 ; 0000 011B // Timer1 Overflow Interrupt: Off
                 ; 0000 011C // Input Capture Interrupt: Off
                 ; 0000 011D // Compare A Match Interrupt: Off
                 ; 0000 011E // Compare B Match Interrupt: Off
                 ; 0000 011F // Compare C Match Interrupt: Off
                 ; 0000 0120 TCCR1A=0xFE;
0002b5 efee      	LDI  R30,LOW(254)
0002b6 bdef      	OUT  0x2F,R30
                 ; 0000 0121 TCCR1B=0x19;
0002b7 e1e9      	LDI  R30,LOW(25)
0002b8 bdee      	OUT  0x2E,R30
                 ; 0000 0122 TCNT1H=0x00;
0002b9 e0e0      	LDI  R30,LOW(0)
0002ba bded      	OUT  0x2D,R30
                 ; 0000 0123 TCNT1L=0x00;
0002bb bdec      	OUT  0x2C,R30
                 ; 0000 0124 ICR1H=0x00;
0002bc bde7      	OUT  0x27,R30
                 ; 0000 0125 ICR1L=0x00;
0002bd bde6      	OUT  0x26,R30
                 ; 0000 0126 ICR1=50000;
0002be e5e0      	LDI  R30,LOW(50000)
0002bf ecf3      	LDI  R31,HIGH(50000)
0002c0 bdf7      	OUT  0x26+1,R31
0002c1 bde6      	OUT  0x26,R30
                 ; 0000 0127 OCR1AH=0x00;
0002c2 e0e0      	LDI  R30,LOW(0)
0002c3 bdeb      	OUT  0x2B,R30
                 ; 0000 0128 OCR1AL=0x00;
0002c4 bdea      	OUT  0x2A,R30
                 ; 0000 0129 OCR1BH=0x00;
0002c5 bde9      	OUT  0x29,R30
                 ; 0000 012A OCR1BL=0x00;
0002c6 bde8      	OUT  0x28,R30
                 ; 0000 012B OCR1CH=0x00;
0002c7 940e 06e3 	CALL SUBOPT_0x14
                 ; 0000 012C OCR1CL=0x00;
                 ; 0000 012D 
                 ; 0000 012E // Timer/Counter 2 initialization
                 ; 0000 012F // Clock source: System Clock
                 ; 0000 0130 // Clock value: Timer2 Stopped
                 ; 0000 0131 // Mode: Normal top=0xFF
                 ; 0000 0132 // OC2 output: Disconnected
                 ; 0000 0133 TCCR2=0x00;
0002c9 e0e0      	LDI  R30,LOW(0)
0002ca bde5      	OUT  0x25,R30
                 ; 0000 0134 TCNT2=0x00;
0002cb bde4      	OUT  0x24,R30
                 ; 0000 0135 OCR2=0x00;
0002cc bde3      	OUT  0x23,R30
                 ; 0000 0136 
                 ; 0000 0137 // Timer/Counter 3 initialization
                 ; 0000 0138 // Clock source: System Clock
                 ; 0000 0139 // Clock value: 11059,200 kHz
                 ; 0000 013A // Mode: Fast PWM top=ICR3
                 ; 0000 013B // OC3A output: Inverted
                 ; 0000 013C // OC3B output: Inverted
                 ; 0000 013D // OC3C output: Inverted
                 ; 0000 013E // Noise Canceler: Off
                 ; 0000 013F // Input Capture on Falling Edge
                 ; 0000 0140 // Timer3 Overflow Interrupt: Off
                 ; 0000 0141 // Input Capture Interrupt: Off
                 ; 0000 0142 // Compare A Match Interrupt: Off
                 ; 0000 0143 // Compare B Match Interrupt: Off
                 ; 0000 0144 // Compare C Match Interrupt: Off
                 ; 0000 0145 TCCR3A=0xFE;
0002cd efee      	LDI  R30,LOW(254)
0002ce 93e0 008b 	STS  139,R30
                 ; 0000 0146 TCCR3B=0x19;
0002d0 e1e9      	LDI  R30,LOW(25)
0002d1 93e0 008a 	STS  138,R30
                 ; 0000 0147 TCNT3H=0x00;
0002d3 e0e0      	LDI  R30,LOW(0)
0002d4 93e0 0089 	STS  137,R30
                 ; 0000 0148 TCNT3L=0x00;
0002d6 93e0 0088 	STS  136,R30
                 ; 0000 0149 ICR3H=0xc3;
0002d8 ece3      	LDI  R30,LOW(195)
0002d9 93e0 0081 	STS  129,R30
                 ; 0000 014A ICR3L=0x50;
0002db e5e0      	LDI  R30,LOW(80)
0002dc 93e0 0080 	STS  128,R30
                 ; 0000 014B OCR3AH=0x00;
0002de e0e0      	LDI  R30,LOW(0)
0002df 93e0 0087 	STS  135,R30
                 ; 0000 014C OCR3AL=0x00;
0002e1 93e0 0086 	STS  134,R30
                 ; 0000 014D OCR3BH=0x00;
0002e3 940e 06e9 	CALL SUBOPT_0x15
                 ; 0000 014E OCR3BL=0x00;
                 ; 0000 014F OCR3CH=0x00;
                 ; 0000 0150 OCR3CL=0x00;
                 ; 0000 0151 
                 ; 0000 0152 // External Interrupt(s) initialization
                 ; 0000 0153 // INT0: Off
                 ; 0000 0154 // INT1: Off
                 ; 0000 0155 // INT2: Off
                 ; 0000 0156 // INT3: Off
                 ; 0000 0157 // INT4: Off
                 ; 0000 0158 // INT5: Off
                 ; 0000 0159 // INT6: Off
                 ; 0000 015A // INT7: Off
                 ; 0000 015B EICRA=0x00;
0002e5 e0e0      	LDI  R30,LOW(0)
0002e6 93e0 006a 	STS  106,R30
                 ; 0000 015C EICRB=0x00;
0002e8 bfea      	OUT  0x3A,R30
                 ; 0000 015D EIMSK=0x00;
0002e9 bfe9      	OUT  0x39,R30
                 ; 0000 015E 
                 ; 0000 015F // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0160 TIMSK=0x01;
0002ea e0e1      	LDI  R30,LOW(1)
0002eb bfe7      	OUT  0x37,R30
                 ; 0000 0161 
                 ; 0000 0162 ETIMSK=0x00;
0002ec e0e0      	LDI  R30,LOW(0)
0002ed 93e0 007d 	STS  125,R30
                 ; 0000 0163 
                 ; 0000 0164 // USART0 initialization
                 ; 0000 0165 // USART0 disabled
                 ; 0000 0166 UCSR0B=0x00;
0002ef b9ea      	OUT  0xA,R30
                 ; 0000 0167 
                 ; 0000 0168 // USART1 initialization
                 ; 0000 0169 // USART1 disabled
                 ; 0000 016A UCSR1B=0x00;
0002f0 93e0 009a 	STS  154,R30
                 ; 0000 016B 
                 ; 0000 016C // Analog Comparator initialization
                 ; 0000 016D // Analog Comparator: Off
                 ; 0000 016E // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 016F ACSR=0x80;
0002f2 e8e0      	LDI  R30,LOW(128)
0002f3 b9e8      	OUT  0x8,R30
                 ; 0000 0170 SFIOR=0x00;
0002f4 e0e0      	LDI  R30,LOW(0)
0002f5 bde0      	OUT  0x20,R30
                 ; 0000 0171 
                 ; 0000 0172 // ADC initialization
                 ; 0000 0173 // ADC disabled
                 ; 0000 0174 ADCSRA=0x00;
0002f6 b9e6      	OUT  0x6,R30
                 ; 0000 0175 
                 ; 0000 0176 // SPI initialization
                 ; 0000 0177 // SPI disabled
                 ; 0000 0178 SPCR=0x00;
0002f7 b9ed      	OUT  0xD,R30
                 ; 0000 0179 
                 ; 0000 017A // TWI initialization
                 ; 0000 017B // TWI disabled
                 ; 0000 017C TWCR=0x00;
0002f8 93e0 0074 	STS  116,R30
                 ; 0000 017D 
                 ; 0000 017E // Alphanumeric LCD initialization
                 ; 0000 017F // Connections specified in the
                 ; 0000 0180 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0181 // RS - PORTA Bit 0
                 ; 0000 0182 // RD - PORTA Bit 1
                 ; 0000 0183 // EN - PORTA Bit 2
                 ; 0000 0184 // D4 - PORTA Bit 4
                 ; 0000 0185 // D5 - PORTA Bit 5
                 ; 0000 0186 // D6 - PORTA Bit 6
                 ; 0000 0187 // D7 - PORTA Bit 7
                 ; 0000 0188 // Characters/line: 20
                 ; 0000 0189 lcd_init(20);
0002fa e1e4      	LDI  R30,LOW(20)
0002fb 93ea      	ST   -Y,R30
0002fc d143      	RCALL _lcd_init
                 ; 0000 018A 
                 ; 0000 018B lcd_putsf("NQ Fairy");
                +
0002fd eee6     +LDI R30 , LOW ( 2 * _0x0 + ( 60 ) )
0002fe e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 60 ) )
                 	__POINTW1FN _0x0,60
0002ff 93fa      	ST   -Y,R31
000300 93ea      	ST   -Y,R30
000301 d12d      	RCALL _lcd_putsf
                 ; 0000 018C for (k=0;k<4;k++) beep();
000302 e010      	LDI  R17,LOW(0)
                 _0x5E:
000303 3014      	CPI  R17,4
000304 f418      	BRSH _0x5F
000305 ddbb      	RCALL _beep
000306 5f1f      	SUBI R17,-1
000307 cffb      	RJMP _0x5E
                 _0x5F:
                 ; 0000 018D lcd_clear();
000308 d0f0      	RCALL _lcd_clear
                 ; 0000 018E 
                 ; 0000 018F // Watchdog Timer initialization
                 ; 0000 0190 // Watchdog Timer Prescaler: OSC/2048k
                 ; 0000 0191 #pragma optsize-
                 ; 0000 0192 WDTCR=0x1F;
000309 e1ef      	LDI  R30,LOW(31)
00030a bde1      	OUT  0x21,R30
                 ; 0000 0193 WDTCR=0x0F;
00030b e0ef      	LDI  R30,LOW(15)
00030c bde1      	OUT  0x21,R30
                 ; 0000 0194 #ifdef _OPTIMIZE_SIZE_
                 ; 0000 0195 #pragma optsize+
                 ; 0000 0196 #endif
                 ; 0000 0197 
                 ; 0000 0198 #asm("sei")
00030d 9478      	sei
                 ; 0000 0199 
                 ; 0000 019A hong1=0x00;
00030e e0a0      	LDI  R26,LOW(_hong1)
00030f e0b0      	LDI  R27,HIGH(_hong1)
000310 e0e0      	LDI  R30,LOW(0)
000311 940e 0837 	CALL __EEPROMWRB
                 ; 0000 019B hong2=0xff;
000313 e0a1      	LDI  R26,LOW(_hong2)
000314 e0b0      	LDI  R27,HIGH(_hong2)
000315 efef      	LDI  R30,LOW(255)
000316 940e 0837 	CALL __EEPROMWRB
                 ; 0000 019C hong3=0x7f;
000318 e0a2      	LDI  R26,LOW(_hong3)
000319 e0b0      	LDI  R27,HIGH(_hong3)
00031a e7ef      	LDI  R30,LOW(127)
00031b 940e 0837 	CALL __EEPROMWRB
                 ; 0000 019D hong4=0xff;
00031d e0a3      	LDI  R26,LOW(_hong4)
00031e e0b0      	LDI  R27,HIGH(_hong4)
00031f efef      	LDI  R30,LOW(255)
000320 940e 0837 	CALL __EEPROMWRB
                 ; 0000 019E 
                 ; 0000 019F read_am2301();
000322 dda8      	RCALL _read_am2301
                 ; 0000 01A0 while (1)
                 _0x60:
                 ; 0000 01A1       {
                 ; 0000 01A2       if (nhietdo<373)
000323 940e 06f3 	CALL SUBOPT_0x16
                +
000325 37a5     +CPI R26 , LOW ( 0x175 )
000326 e0e1     +LDI R30 , HIGH ( 0x175 )
000327 07be     +CPC R27 , R30
000328 e0e0     +LDI R30 , BYTE3 ( 0x175 )
000329 078e     +CPC R24 , R30
00032a e0e0     +LDI R30 , BYTE4 ( 0x175 )
00032b 079e     +CPC R25 , R30
                 	__CPD2N 0x175
00032c f424      	BRGE _0x63
                 ; 0000 01A3        {
                 ; 0000 01A4        kichquat=0;
00032d 94e8      	CLT
00032e f820      	BLD  R2,0
                 ; 0000 01A5 
                 ; 0000 01A6        OCR3BH=0;
00032f 940e 06e9 	CALL SUBOPT_0x15
                 ; 0000 01A7        OCR3BL=0;
                 ; 0000 01A8 
                 ; 0000 01A9        OCR3CH=0;
                 ; 0000 01AA        OCR3CL=0;
                 ; 0000 01AB        }
                 ; 0000 01AC       if (nhietdo<=365) biennd=1;
                 _0x63:
000331 940e 06f3 	CALL SUBOPT_0x16
                +
000333 36ae     +CPI R26 , LOW ( 0x16E )
000334 e0e1     +LDI R30 , HIGH ( 0x16E )
000335 07be     +CPC R27 , R30
000336 e0e0     +LDI R30 , BYTE3 ( 0x16E )
000337 078e     +CPC R24 , R30
000338 e0e0     +LDI R30 , BYTE4 ( 0x16E )
000339 079e     +CPC R25 , R30
                 	__CPD2N 0x16E
00033a f40c      	BRGE _0x64
00033b e001      	LDI  R16,LOW(1)
                 ; 0000 01AD       if ((nhietdo>365)&(nhietdo<368)) biennd=2;
                 _0x64:
00033c 940e 06f3 	CALL SUBOPT_0x16
                +
00033e e6ed     +LDI R30 , LOW ( 0x16D )
00033f e0f1     +LDI R31 , HIGH ( 0x16D )
000340 e060     +LDI R22 , BYTE3 ( 0x16D )
000341 e070     +LDI R23 , BYTE4 ( 0x16D )
                 	__GETD1N 0x16D
000342 940e 076e 	CALL __GTD12
000344 2e0e      	MOV  R0,R30
000345 940e 06f3 	CALL SUBOPT_0x16
                +
000347 e7e0     +LDI R30 , LOW ( 0x170 )
000348 e0f1     +LDI R31 , HIGH ( 0x170 )
000349 e060     +LDI R22 , BYTE3 ( 0x170 )
00034a e070     +LDI R23 , BYTE4 ( 0x170 )
                 	__GETD1N 0x170
00034b 940e 0766 	CALL __LTD12
00034d 21e0      	AND  R30,R0
00034e f009      	BREQ _0x65
00034f e002      	LDI  R16,LOW(2)
                 ; 0000 01AE       if (nhietdo>=368) biennd=3;
                 _0x65:
000350 940e 06f3 	CALL SUBOPT_0x16
                +
000352 37a0     +CPI R26 , LOW ( 0x170 )
000353 e0e1     +LDI R30 , HIGH ( 0x170 )
000354 07be     +CPC R27 , R30
000355 e0e0     +LDI R30 , BYTE3 ( 0x170 )
000356 078e     +CPC R24 , R30
000357 e0e0     +LDI R30 , BYTE4 ( 0x170 )
000358 079e     +CPC R25 , R30
                 	__CPD2N 0x170
000359 f00c      	BRLT _0x66
00035a e003      	LDI  R16,LOW(3)
                 ; 0000 01AF       if (kichquat==1)
                 _0x66:
00035b fe20      	SBRS R2,0
00035c c00b      	RJMP _0x67
                 ; 0000 01B0         {
                 ; 0000 01B1         OCR3BH=0x55;
00035d e5e5      	LDI  R30,LOW(85)
00035e 93e0 0085 	STS  133,R30
                 ; 0000 01B2         OCR3BL=0xf0;
000360 efe0      	LDI  R30,LOW(240)
000361 93e0 0084 	STS  132,R30
                 ; 0000 01B3 
                 ; 0000 01B4         OCR3CH=0x2e;
000363 e2ee      	LDI  R30,LOW(46)
000364 93e0 0083 	STS  131,R30
                 ; 0000 01B5         OCR3CL=0xe0;
000366 eee0      	LDI  R30,LOW(224)
000367 c007      	RJMP _0x72
                 ; 0000 01B6         }
                 ; 0000 01B7       else
                 _0x67:
                 ; 0000 01B8         {
                 ; 0000 01B9         OCR3BH=0;
000368 e0e0      	LDI  R30,LOW(0)
000369 93e0 0085 	STS  133,R30
                 ; 0000 01BA         OCR3BL=0;
00036b 93e0 0084 	STS  132,R30
                 ; 0000 01BB 
                 ; 0000 01BC         OCR3CH=0;
00036d 93e0 0083 	STS  131,R30
                 ; 0000 01BD         OCR3CL=0;
                 _0x72:
00036f 93e0 0082 	STS  130,R30
                 ; 0000 01BE         }
                 ; 0000 01BF 
                 ; 0000 01C0       switch (biennd)
000371 2fe0      	MOV  R30,R16
000372 e0f0      	LDI  R31,0
                 ; 0000 01C1         {
                 ; 0000 01C2             case 1 :
000373 30e1      	CPI  R30,LOW(0x1)
000374 e0a0      	LDI  R26,HIGH(0x1)
000375 07fa      	CPC  R31,R26
000376 f459      	BRNE _0x6C
                 ; 0000 01C3                 OCR1A=40000;
000377 e4e0      	LDI  R30,LOW(40000)
000378 e9fc      	LDI  R31,HIGH(40000)
000379 bdfb      	OUT  0x2A+1,R31
00037a bdea      	OUT  0x2A,R30
                 ; 0000 01C4 
                 ; 0000 01C5                 OCR1CH=0x9c;
00037b e9ec      	LDI  R30,LOW(156)
00037c 93e0 0079 	STS  121,R30
                 ; 0000 01C6                 OCR1CL=0x40;
00037e e4e0      	LDI  R30,LOW(64)
00037f 93e0 0078 	STS  120,R30
                 ; 0000 01C7 
                 ; 0000 01C8                 break;
000381 c01b      	RJMP _0x6B
                 ; 0000 01C9             case 2 :
                 _0x6C:
000382 30e2      	CPI  R30,LOW(0x2)
000383 e0a0      	LDI  R26,HIGH(0x2)
000384 07fa      	CPC  R31,R26
000385 f439      	BRNE _0x6D
                 ; 0000 01CA                 OCR1A=0;
000386 e0e0      	LDI  R30,LOW(0)
000387 e0f0      	LDI  R31,HIGH(0)
000388 bdfb      	OUT  0x2A+1,R31
000389 bdea      	OUT  0x2A,R30
                 ; 0000 01CB 
                 ; 0000 01CC                 OCR1CH=0;
00038a 940e 06e3 	CALL SUBOPT_0x14
                 ; 0000 01CD                 OCR1CL=0;
                 ; 0000 01CE 
                 ; 0000 01CF                 break;
00038c c010      	RJMP _0x6B
                 ; 0000 01D0             case 3 :
                 _0x6D:
00038d 30e3      	CPI  R30,LOW(0x3)
00038e e0a0      	LDI  R26,HIGH(0x3)
00038f 07fa      	CPC  R31,R26
000390 f461      	BRNE _0x6B
                 ; 0000 01D1                 OCR3BH=0x9c;
000391 e9ec      	LDI  R30,LOW(156)
000392 93e0 0085 	STS  133,R30
                 ; 0000 01D2                 OCR3BL=0x40;
000394 e4e0      	LDI  R30,LOW(64)
000395 93e0 0084 	STS  132,R30
                 ; 0000 01D3 
                 ; 0000 01D4                 OCR3CH=0x9c;
000397 e9ec      	LDI  R30,LOW(156)
000398 93e0 0083 	STS  131,R30
                 ; 0000 01D5                 OCR3CL=0x40;
00039a e4e0      	LDI  R30,LOW(64)
00039b 93e0 0082 	STS  130,R30
                 ; 0000 01D6                 break;
                 ; 0000 01D7         };
                 _0x6B:
                 ; 0000 01D8       if (doam < 750)
00039d 91a0 051f 	LDS  R26,_doam
00039f 91b0 0520 	LDS  R27,_doam+1
0003a1 9180 0521 	LDS  R24,_doam+2
0003a3 9190 0522 	LDS  R25,_doam+3
                +
0003a5 3eae     +CPI R26 , LOW ( 0x2EE )
0003a6 e0e2     +LDI R30 , HIGH ( 0x2EE )
0003a7 07be     +CPC R27 , R30
0003a8 e0e0     +LDI R30 , BYTE3 ( 0x2EE )
0003a9 078e     +CPC R24 , R30
0003aa e0e0     +LDI R30 , BYTE4 ( 0x2EE )
0003ab 079e     +CPC R25 , R30
                 	__CPD2N 0x2EE
0003ac f41c      	BRGE _0x6F
                 ; 0000 01D9         {
                 ; 0000 01DA         OCR1B=50000;
0003ad e5e0      	LDI  R30,LOW(50000)
0003ae ecf3      	LDI  R31,HIGH(50000)
0003af c002      	RJMP _0x73
                 ; 0000 01DB         }
                 ; 0000 01DC       else
                 _0x6F:
                 ; 0000 01DD         {
                 ; 0000 01DE         OCR1B=0;
0003b0 e0e0      	LDI  R30,LOW(0)
0003b1 e0f0      	LDI  R31,HIGH(0)
                 _0x73:
0003b2 bdf9      	OUT  0x28+1,R31
0003b3 bde8      	OUT  0x28,R30
                 ; 0000 01DF         }
                 ; 0000 01E0 
                 ; 0000 01E1       kiemtradr();
0003b4 de2f      	RCALL _kiemtradr
                 ; 0000 01E2       hienthilcd();
0003b5 de74      	RCALL _hienthilcd
                 ; 0000 01E3 
                 ; 0000 01E4       }
0003b6 cf6c      	RJMP _0x60
                 ; 0000 01E5 }
                 _0x71:
0003b7 cfff      	RJMP _0x71
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
0003b8 81e8      	LD   R30,Y
0003b9 71e0      	ANDI R30,LOW(0x10)
0003ba f011      	BREQ _0x2000004
0003bb 9adc      	SBI  0x1B,4
0003bc c001      	RJMP _0x2000005
                 _0x2000004:
0003bd 98dc      	CBI  0x1B,4
                 _0x2000005:
0003be 81e8      	LD   R30,Y
0003bf 72e0      	ANDI R30,LOW(0x20)
0003c0 f011      	BREQ _0x2000006
0003c1 9add      	SBI  0x1B,5
0003c2 c001      	RJMP _0x2000007
                 _0x2000006:
0003c3 98dd      	CBI  0x1B,5
                 _0x2000007:
0003c4 81e8      	LD   R30,Y
0003c5 74e0      	ANDI R30,LOW(0x40)
0003c6 f011      	BREQ _0x2000008
0003c7 9ade      	SBI  0x1B,6
0003c8 c001      	RJMP _0x2000009
                 _0x2000008:
0003c9 98de      	CBI  0x1B,6
                 _0x2000009:
0003ca 81e8      	LD   R30,Y
0003cb 78e0      	ANDI R30,LOW(0x80)
0003cc f011      	BREQ _0x200000A
0003cd 9adf      	SBI  0x1B,7
0003ce c001      	RJMP _0x200000B
                 _0x200000A:
0003cf 98df      	CBI  0x1B,7
                 _0x200000B:
                +
0003d0 e08b     +LDI R24 , LOW ( 11 )
                +__DELAY_USB_LOOP :
0003d1 958a     +DEC R24
0003d2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 11
0003d3 9ada      	SBI  0x1B,2
                +
0003d4 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0003d5 958a     +DEC R24
0003d6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0003d7 98da      	CBI  0x1B,2
                +
0003d8 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0003d9 958a     +DEC R24
0003da f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0003db c096      	RJMP _0x20C0002
                 __lcd_write_data:
0003dc 81e8      	LD   R30,Y
0003dd 93ea      	ST   -Y,R30
0003de dfd9      	RCALL __lcd_write_nibble_G100
0003df 81e8          ld    r30,y
0003e0 95e2          swap  r30
0003e1 83e8          st    y,r30
0003e2 81e8      	LD   R30,Y
0003e3 93ea      	ST   -Y,R30
0003e4 dfd3      	RCALL __lcd_write_nibble_G100
                +
0003e5 ec88     +LDI R24 , LOW ( 200 )
0003e6 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0003e7 9701     +SBIW R24 , 1
0003e8 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0003e9 c088      	RJMP _0x20C0002
                 _lcd_gotoxy:
0003ea 81e8      	LD   R30,Y
0003eb e0f0      	LDI  R31,0
0003ec 58ed      	SUBI R30,LOW(-__base_y_G100)
0003ed 4ffa      	SBCI R31,HIGH(-__base_y_G100)
0003ee 81e0      	LD   R30,Z
0003ef 81a9      	LDD  R26,Y+1
0003f0 0fea      	ADD  R30,R26
0003f1 93ea      	ST   -Y,R30
0003f2 dfe9      	RCALL __lcd_write_data
0003f3 80c9      	LDD  R12,Y+1
0003f4 81e8      	LD   R30,Y
0003f5 93e0 0577 	STS  __lcd_y,R30
0003f7 9622      	ADIW R28,2
0003f8 9508      	RET
                 _lcd_clear:
0003f9 e0e2      	LDI  R30,LOW(2)
0003fa 940e 06fc 	CALL SUBOPT_0x17
0003fc e0ec      	LDI  R30,LOW(12)
0003fd 93ea      	ST   -Y,R30
0003fe dfdd      	RCALL __lcd_write_data
0003ff e0e1      	LDI  R30,LOW(1)
000400 940e 06fc 	CALL SUBOPT_0x17
000402 e0e0      	LDI  R30,LOW(0)
000403 93e0 0577 	STS  __lcd_y,R30
000405 2ece      	MOV  R12,R30
000406 9508      	RET
                 _lcd_putchar:
000407 81a8      	LD   R26,Y
000408 30aa      	CPI  R26,LOW(0xA)
000409 f021      	BREQ _0x2000011
00040a 91e0 0578 	LDS  R30,__lcd_maxx
00040c 16ce      	CP   R12,R30
00040d f068      	BRLO _0x2000010
                 _0x2000011:
00040e e0e0      	LDI  R30,LOW(0)
00040f 93ea      	ST   -Y,R30
000410 91e0 0577 	LDS  R30,__lcd_y
000412 5fef      	SUBI R30,-LOW(1)
000413 93e0 0577 	STS  __lcd_y,R30
000415 93ea      	ST   -Y,R30
000416 dfd3      	RCALL _lcd_gotoxy
000417 81a8      	LD   R26,Y
000418 30aa      	CPI  R26,LOW(0xA)
000419 f409      	BRNE _0x2000013
00041a c057      	RJMP _0x20C0002
                 _0x2000013:
                 _0x2000010:
00041b 94c3      	INC  R12
00041c 9ad8      	SBI  0x1B,0
00041d 81e8      	LD   R30,Y
00041e 93ea      	ST   -Y,R30
00041f dfbc      	RCALL __lcd_write_data
000420 98d8      	CBI  0x1B,0
000421 c050      	RJMP _0x20C0002
                 _lcd_puts:
000422 931a      	ST   -Y,R17
                 _0x2000014:
000423 81a9      	LDD  R26,Y+1
000424 81ba      	LDD  R27,Y+1+1
000425 91ed      	LD   R30,X+
000426 83a9      	STD  Y+1,R26
000427 83ba      	STD  Y+1+1,R27
000428 2f1e      	MOV  R17,R30
000429 30e0      	CPI  R30,0
00042a f019      	BREQ _0x2000016
00042b 931a      	ST   -Y,R17
00042c dfda      	RCALL _lcd_putchar
00042d cff5      	RJMP _0x2000014
                 _0x2000016:
00042e c00e      	RJMP _0x20C0003
                 _lcd_putsf:
00042f 931a      	ST   -Y,R17
                 _0x2000017:
000430 81e9      	LDD  R30,Y+1
000431 81fa      	LDD  R31,Y+1+1
000432 9631      	ADIW R30,1
000433 83e9      	STD  Y+1,R30
000434 83fa      	STD  Y+1+1,R31
000435 9731      	SBIW R30,1
000436 91e4      	LPM  R30,Z
000437 2f1e      	MOV  R17,R30
000438 30e0      	CPI  R30,0
000439 f019      	BREQ _0x2000019
00043a 931a      	ST   -Y,R17
00043b dfcb      	RCALL _lcd_putchar
00043c cff3      	RJMP _0x2000017
                 _0x2000019:
                 _0x20C0003:
00043d 8118      	LDD  R17,Y+0
00043e 9623      	ADIW R28,3
00043f 9508      	RET
                 _lcd_init:
000440 9ad4      	SBI  0x1A,4
000441 9ad5      	SBI  0x1A,5
000442 9ad6      	SBI  0x1A,6
000443 9ad7      	SBI  0x1A,7
000444 9ad2      	SBI  0x1A,2
000445 9ad0      	SBI  0x1A,0
000446 9ad1      	SBI  0x1A,1
000447 98da      	CBI  0x1B,2
000448 98d8      	CBI  0x1B,0
000449 98d9      	CBI  0x1B,1
00044a 81e8      	LD   R30,Y
00044b 93e0 0578 	STS  __lcd_maxx,R30
00044d 58e0      	SUBI R30,-LOW(128)
                +
00044e 93e0 0575+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000450 81e8      	LD   R30,Y
000451 54e0      	SUBI R30,-LOW(192)
                +
000452 93e0 0576+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000454 e1e4      	LDI  R30,LOW(20)
000455 e0f0      	LDI  R31,HIGH(20)
000456 940e 063a 	CALL SUBOPT_0x0
000458 940e 0702 	CALL SUBOPT_0x18
00045a 940e 0702 	CALL SUBOPT_0x18
00045c 940e 0702 	CALL SUBOPT_0x18
00045e e2e0      	LDI  R30,LOW(32)
00045f 93ea      	ST   -Y,R30
000460 df57      	RCALL __lcd_write_nibble_G100
                +
000461 e980     +LDI R24 , LOW ( 400 )
000462 e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
000463 9701     +SBIW R24 , 1
000464 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
000465 e2e8      	LDI  R30,LOW(40)
000466 93ea      	ST   -Y,R30
000467 df74      	RCALL __lcd_write_data
000468 e0e4      	LDI  R30,LOW(4)
000469 93ea      	ST   -Y,R30
00046a df71      	RCALL __lcd_write_data
00046b e8e5      	LDI  R30,LOW(133)
00046c 93ea      	ST   -Y,R30
00046d df6e      	RCALL __lcd_write_data
00046e e0e6      	LDI  R30,LOW(6)
00046f 93ea      	ST   -Y,R30
000470 df6b      	RCALL __lcd_write_data
000471 df87      	RCALL _lcd_clear
                 _0x20C0002:
000472 9621      	ADIW R28,1
000473 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
000474 931a      	ST   -Y,R17
000475 930a      	ST   -Y,R16
000476 81aa      	LDD  R26,Y+2
000477 81bb      	LDD  R27,Y+2+1
000478 9612      	ADIW R26,2
000479 940e 0812 	CALL __GETW1P
00047b 9730      	SBIW R30,0
00047c f159      	BREQ _0x2020010
00047d 81aa      	LDD  R26,Y+2
00047e 81bb      	LDD  R27,Y+2+1
00047f 9614      	ADIW R26,4
000480 940e 0812 	CALL __GETW1P
000482 018f      	MOVW R16,R30
000483 9730      	SBIW R30,0
000484 f061      	BREQ _0x2020012
                +
000485 3002     +CPI R16 , LOW ( 2 )
000486 e0e0     +LDI R30 , HIGH ( 2 )
000487 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000488 f0f0      	BRLO _0x2020013
000489 01f8      	MOVW R30,R16
00048a 9731      	SBIW R30,1
00048b 018f      	MOVW R16,R30
                +
00048c 81aa     +LDD R26 , Y + 2
00048d 81bb     +LDD R27 , Y + 2 + 1
00048e 9614     +ADIW R26 , 4
00048f 93ed     +ST X + , R30
000490 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
000491 81aa      	LDD  R26,Y+2
000492 81bb      	LDD  R27,Y+2+1
000493 9612      	ADIW R26,2
000494 91ed      	LD   R30,X+
000495 91fd      	LD   R31,X+
000496 9631      	ADIW R30,1
000497 93fe      	ST   -X,R31
000498 93ee      	ST   -X,R30
000499 9731      	SBIW R30,1
00049a 81ac      	LDD  R26,Y+4
00049b 83a0      	STD  Z+0,R26
00049c 81aa      	LDD  R26,Y+2
00049d 81bb      	LDD  R27,Y+2+1
00049e 940e 0812 	CALL __GETW1P
0004a0 23ff      	TST  R31
0004a1 f02a      	BRMI _0x2020014
0004a2 91ed      	LD   R30,X+
0004a3 91fd      	LD   R31,X+
0004a4 9631      	ADIW R30,1
0004a5 93fe      	ST   -X,R31
0004a6 93ee      	ST   -X,R30
                 _0x2020014:
                 _0x2020013:
0004a7 c006      	RJMP _0x2020015
                 _0x2020010:
0004a8 81aa      	LDD  R26,Y+2
0004a9 81bb      	LDD  R27,Y+2+1
0004aa efef      	LDI  R30,LOW(65535)
0004ab efff      	LDI  R31,HIGH(65535)
0004ac 93ed      	ST   X+,R30
0004ad 93fc      	ST   X,R31
                 _0x2020015:
0004ae 8119      	LDD  R17,Y+1
0004af 8108      	LDD  R16,Y+0
0004b0 9625      	ADIW R28,5
0004b1 9508      	RET
                 __print_G101:
0004b2 9726      	SBIW R28,6
0004b3 940e 0848 	CALL __SAVELOCR6
0004b5 e010      	LDI  R17,0
0004b6 85ac      	LDD  R26,Y+12
0004b7 85bd      	LDD  R27,Y+12+1
0004b8 e0e0      	LDI  R30,LOW(0)
0004b9 e0f0      	LDI  R31,HIGH(0)
0004ba 93ed      	ST   X+,R30
0004bb 93fc      	ST   X,R31
                 _0x2020016:
0004bc 89ea      	LDD  R30,Y+18
0004bd 89fb      	LDD  R31,Y+18+1
0004be 9631      	ADIW R30,1
0004bf 8bea      	STD  Y+18,R30
0004c0 8bfb      	STD  Y+18+1,R31
0004c1 9731      	SBIW R30,1
0004c2 91e4      	LPM  R30,Z
0004c3 2f2e      	MOV  R18,R30
0004c4 30e0      	CPI  R30,0
0004c5 f411      	BRNE PC+3
0004c6 940c 05df 	JMP _0x2020018
0004c8 2fe1      	MOV  R30,R17
0004c9 30e0      	CPI  R30,0
0004ca f439      	BRNE _0x202001C
0004cb 3225      	CPI  R18,37
0004cc f411      	BRNE _0x202001D
0004cd e011      	LDI  R17,LOW(1)
0004ce c002      	RJMP _0x202001E
                 _0x202001D:
0004cf 940e 070b 	CALL SUBOPT_0x19
                 _0x202001E:
0004d1 c10c      	RJMP _0x202001B
                 _0x202001C:
0004d2 30e1      	CPI  R30,LOW(0x1)
0004d3 f4a9      	BRNE _0x202001F
0004d4 3225      	CPI  R18,37
0004d5 f419      	BRNE _0x2020020
0004d6 940e 070b 	CALL SUBOPT_0x19
0004d8 c104      	RJMP _0x20200C9
                 _0x2020020:
0004d9 e012      	LDI  R17,LOW(2)
0004da e040      	LDI  R20,LOW(0)
0004db e000      	LDI  R16,LOW(0)
0004dc 322d      	CPI  R18,45
0004dd f411      	BRNE _0x2020021
0004de e001      	LDI  R16,LOW(1)
0004df c0fe      	RJMP _0x202001B
                 _0x2020021:
0004e0 322b      	CPI  R18,43
0004e1 f411      	BRNE _0x2020022
0004e2 e24b      	LDI  R20,LOW(43)
0004e3 c0fa      	RJMP _0x202001B
                 _0x2020022:
0004e4 3220      	CPI  R18,32
0004e5 f411      	BRNE _0x2020023
0004e6 e240      	LDI  R20,LOW(32)
0004e7 c0f6      	RJMP _0x202001B
                 _0x2020023:
0004e8 c002      	RJMP _0x2020024
                 _0x202001F:
0004e9 30e2      	CPI  R30,LOW(0x2)
0004ea f439      	BRNE _0x2020025
                 _0x2020024:
0004eb e050      	LDI  R21,LOW(0)
0004ec e013      	LDI  R17,LOW(3)
0004ed 3320      	CPI  R18,48
0004ee f411      	BRNE _0x2020026
0004ef 6800      	ORI  R16,LOW(128)
0004f0 c0ed      	RJMP _0x202001B
                 _0x2020026:
0004f1 c004      	RJMP _0x2020027
                 _0x2020025:
0004f2 30e3      	CPI  R30,LOW(0x3)
0004f3 f011      	BREQ PC+3
0004f4 940c 05de 	JMP _0x202001B
                 _0x2020027:
0004f6 3320      	CPI  R18,48
0004f7 f010      	BRLO _0x202002A
0004f8 332a      	CPI  R18,58
0004f9 f008      	BRLO _0x202002B
                 _0x202002A:
0004fa c007      	RJMP _0x2020029
                 _0x202002B:
0004fb e0aa      	LDI  R26,LOW(10)
0004fc 9f5a      	MUL  R21,R26
0004fd 2d50      	MOV  R21,R0
0004fe 2fe2      	MOV  R30,R18
0004ff 53e0      	SUBI R30,LOW(48)
000500 0f5e      	ADD  R21,R30
000501 c0dc      	RJMP _0x202001B
                 _0x2020029:
000502 2fe2      	MOV  R30,R18
000503 36e3      	CPI  R30,LOW(0x63)
000504 f449      	BRNE _0x202002F
000505 940e 0714 	CALL SUBOPT_0x1A
000507 89e8      	LDD  R30,Y+16
000508 89f9      	LDD  R31,Y+16+1
000509 81a4      	LDD  R26,Z+4
00050a 93aa      	ST   -Y,R26
00050b 940e 071a 	CALL SUBOPT_0x1B
00050d c0cf      	RJMP _0x2020030
                 _0x202002F:
00050e 37e3      	CPI  R30,LOW(0x73)
00050f f441      	BRNE _0x2020032
000510 940e 0714 	CALL SUBOPT_0x1A
000512 940e 0722 	CALL SUBOPT_0x1C
000514 940e 0625 	CALL _strlen
000516 2f1e      	MOV  R17,R30
000517 c00a      	RJMP _0x2020033
                 _0x2020032:
000518 37e0      	CPI  R30,LOW(0x70)
000519 f461      	BRNE _0x2020035
00051a 940e 0714 	CALL SUBOPT_0x1A
00051c 940e 0722 	CALL SUBOPT_0x1C
00051e 940e 062f 	CALL _strlenf
000520 2f1e      	MOV  R17,R30
000521 6008      	ORI  R16,LOW(8)
                 _0x2020033:
000522 6002      	ORI  R16,LOW(2)
000523 770f      	ANDI R16,LOW(127)
000524 e030      	LDI  R19,LOW(0)
000525 c035      	RJMP _0x2020036
                 _0x2020035:
000526 36e4      	CPI  R30,LOW(0x64)
000527 f011      	BREQ _0x2020039
000528 36e9      	CPI  R30,LOW(0x69)
000529 f411      	BRNE _0x202003A
                 _0x2020039:
00052a 6004      	ORI  R16,LOW(4)
00052b c002      	RJMP _0x202003B
                 _0x202003A:
00052c 37e5      	CPI  R30,LOW(0x75)
00052d f431      	BRNE _0x202003C
                 _0x202003B:
00052e e8ec      	LDI  R30,LOW(_tbl10_G101*2)
00052f e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
000530 83ee      	STD  Y+6,R30
000531 83ff      	STD  Y+6+1,R31
000532 e015      	LDI  R17,LOW(5)
000533 c00d      	RJMP _0x202003D
                 _0x202003C:
000534 35e8      	CPI  R30,LOW(0x58)
000535 f411      	BRNE _0x202003F
000536 6008      	ORI  R16,LOW(8)
000537 c004      	RJMP _0x2020040
                 _0x202003F:
000538 37e8      	CPI  R30,LOW(0x78)
000539 f011      	BREQ PC+3
00053a 940c 05dd 	JMP _0x2020071
                 _0x2020040:
00053c e9e6      	LDI  R30,LOW(_tbl16_G101*2)
00053d e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
00053e 83ee      	STD  Y+6,R30
00053f 83ff      	STD  Y+6+1,R31
000540 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000541 ff02      	SBRS R16,2
000542 c014      	RJMP _0x2020042
000543 940e 0714 	CALL SUBOPT_0x1A
000545 940e 072c 	CALL SUBOPT_0x1D
000547 85ab      	LDD  R26,Y+11
000548 23aa      	TST  R26
000549 f43a      	BRPL _0x2020043
00054a 85ea      	LDD  R30,Y+10
00054b 85fb      	LDD  R31,Y+10+1
00054c 940e 0750 	CALL __ANEGW1
00054e 87ea      	STD  Y+10,R30
00054f 87fb      	STD  Y+10+1,R31
000550 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000551 3040      	CPI  R20,0
000552 f011      	BREQ _0x2020044
000553 5f1f      	SUBI R17,-LOW(1)
000554 c001      	RJMP _0x2020045
                 _0x2020044:
000555 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000556 c004      	RJMP _0x2020046
                 _0x2020042:
000557 940e 0714 	CALL SUBOPT_0x1A
000559 940e 072c 	CALL SUBOPT_0x1D
                 _0x2020046:
                 _0x2020036:
00055b fd00      	SBRC R16,0
00055c c011      	RJMP _0x2020047
                 _0x2020048:
00055d 1715      	CP   R17,R21
00055e f478      	BRSH _0x202004A
00055f ff07      	SBRS R16,7
000560 c008      	RJMP _0x202004B
000561 ff02      	SBRS R16,2
000562 c004      	RJMP _0x202004C
000563 7f0b      	ANDI R16,LOW(251)
000564 2f24      	MOV  R18,R20
000565 5011      	SUBI R17,LOW(1)
000566 c001      	RJMP _0x202004D
                 _0x202004C:
000567 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000568 c001      	RJMP _0x202004E
                 _0x202004B:
000569 e220      	LDI  R18,LOW(32)
                 _0x202004E:
00056a 940e 070b 	CALL SUBOPT_0x19
00056c 5051      	SUBI R21,LOW(1)
00056d cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
00056e 2f31      	MOV  R19,R17
00056f ff01      	SBRS R16,1
000570 c017      	RJMP _0x202004F
                 _0x2020050:
000571 3030      	CPI  R19,0
000572 f0a1      	BREQ _0x2020052
000573 ff03      	SBRS R16,3
000574 c006      	RJMP _0x2020053
000575 81ee      	LDD  R30,Y+6
000576 81ff      	LDD  R31,Y+6+1
000577 9125      	LPM  R18,Z+
000578 83ee      	STD  Y+6,R30
000579 83ff      	STD  Y+6+1,R31
00057a c005      	RJMP _0x2020054
                 _0x2020053:
00057b 81ae      	LDD  R26,Y+6
00057c 81bf      	LDD  R27,Y+6+1
00057d 912d      	LD   R18,X+
00057e 83ae      	STD  Y+6,R26
00057f 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000580 940e 070b 	CALL SUBOPT_0x19
000582 3050      	CPI  R21,0
000583 f009      	BREQ _0x2020055
000584 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000585 5031      	SUBI R19,LOW(1)
000586 cfea      	RJMP _0x2020050
                 _0x2020052:
000587 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000588 e320      	LDI  R18,LOW(48)
000589 81ee      	LDD  R30,Y+6
00058a 81ff      	LDD  R31,Y+6+1
00058b 940e 0816 	CALL __GETW1PF
00058d 87e8      	STD  Y+8,R30
00058e 87f9      	STD  Y+8+1,R31
00058f 81ee      	LDD  R30,Y+6
000590 81ff      	LDD  R31,Y+6+1
000591 9632      	ADIW R30,2
000592 83ee      	STD  Y+6,R30
000593 83ff      	STD  Y+6+1,R31
                 _0x202005A:
000594 85e8      	LDD  R30,Y+8
000595 85f9      	LDD  R31,Y+8+1
000596 85aa      	LDD  R26,Y+10
000597 85bb      	LDD  R27,Y+10+1
000598 17ae      	CP   R26,R30
000599 07bf      	CPC  R27,R31
00059a f050      	BRLO _0x202005C
00059b 5f2f      	SUBI R18,-LOW(1)
00059c 85a8      	LDD  R26,Y+8
00059d 85b9      	LDD  R27,Y+8+1
00059e 85ea      	LDD  R30,Y+10
00059f 85fb      	LDD  R31,Y+10+1
0005a0 1bea      	SUB  R30,R26
0005a1 0bfb      	SBC  R31,R27
0005a2 87ea      	STD  Y+10,R30
0005a3 87fb      	STD  Y+10+1,R31
0005a4 cfef      	RJMP _0x202005A
                 _0x202005C:
0005a5 332a      	CPI  R18,58
0005a6 f028      	BRLO _0x202005D
0005a7 ff03      	SBRS R16,3
0005a8 c002      	RJMP _0x202005E
0005a9 5f29      	SUBI R18,-LOW(7)
0005aa c001      	RJMP _0x202005F
                 _0x202005E:
0005ab 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0005ac fd04      	SBRC R16,4
0005ad c01a      	RJMP _0x2020061
0005ae 3321      	CPI  R18,49
0005af f420      	BRSH _0x2020063
0005b0 85a8      	LDD  R26,Y+8
0005b1 85b9      	LDD  R27,Y+8+1
0005b2 9711      	SBIW R26,1
0005b3 f409      	BRNE _0x2020062
                 _0x2020063:
0005b4 c009      	RJMP _0x20200CA
                 _0x2020062:
0005b5 1753      	CP   R21,R19
0005b6 f010      	BRLO _0x2020067
0005b7 ff00      	SBRS R16,0
0005b8 c001      	RJMP _0x2020068
                 _0x2020067:
0005b9 c013      	RJMP _0x2020066
                 _0x2020068:
0005ba e220      	LDI  R18,LOW(32)
0005bb ff07      	SBRS R16,7
0005bc c00b      	RJMP _0x2020069
0005bd e320      	LDI  R18,LOW(48)
                 _0x20200CA:
0005be 6100      	ORI  R16,LOW(16)
0005bf ff02      	SBRS R16,2
0005c0 c007      	RJMP _0x202006A
0005c1 7f0b      	ANDI R16,LOW(251)
0005c2 934a      	ST   -Y,R20
0005c3 940e 071a 	CALL SUBOPT_0x1B
0005c5 3050      	CPI  R21,0
0005c6 f009      	BREQ _0x202006B
0005c7 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0005c8 940e 070b 	CALL SUBOPT_0x19
0005ca 3050      	CPI  R21,0
0005cb f009      	BREQ _0x202006C
0005cc 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0005cd 5031      	SUBI R19,LOW(1)
0005ce 85a8      	LDD  R26,Y+8
0005cf 85b9      	LDD  R27,Y+8+1
0005d0 9712      	SBIW R26,2
0005d1 f008      	BRLO _0x2020059
0005d2 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0005d3 ff00      	SBRS R16,0
0005d4 c008      	RJMP _0x202006D
                 _0x202006E:
0005d5 3050      	CPI  R21,0
0005d6 f031      	BREQ _0x2020070
0005d7 5051      	SUBI R21,LOW(1)
0005d8 e2e0      	LDI  R30,LOW(32)
0005d9 93ea      	ST   -Y,R30
0005da 940e 071a 	CALL SUBOPT_0x1B
0005dc cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200C9:
0005dd e010      	LDI  R17,LOW(0)
                 _0x202001B:
0005de cedd      	RJMP _0x2020016
                 _0x2020018:
0005df 85ac      	LDD  R26,Y+12
0005e0 85bd      	LDD  R27,Y+12+1
0005e1 940e 0812 	CALL __GETW1P
0005e3 940e 084f 	CALL __LOADLOCR6
0005e5 9664      	ADIW R28,20
0005e6 9508      	RET
                 _sprintf:
0005e7 92ff      	PUSH R15
0005e8 2ef8      	MOV  R15,R24
0005e9 9726      	SBIW R28,6
0005ea 940e 084a 	CALL __SAVELOCR4
0005ec 940e 0734 	CALL SUBOPT_0x1E
0005ee 9730      	SBIW R30,0
0005ef f419      	BRNE _0x2020072
0005f0 efef      	LDI  R30,LOW(65535)
0005f1 efff      	LDI  R31,HIGH(65535)
0005f2 c025      	RJMP _0x20C0001
                 _0x2020072:
0005f3 01de      	MOVW R26,R28
0005f4 9616      	ADIW R26,6
0005f5 940e 0747 	CALL __ADDW2R15
0005f7 018d      	MOVW R16,R26
0005f8 940e 0734 	CALL SUBOPT_0x1E
0005fa 83ee      	STD  Y+6,R30
0005fb 83ff      	STD  Y+6+1,R31
0005fc e0e0      	LDI  R30,LOW(0)
0005fd 87e8      	STD  Y+8,R30
0005fe 87e9      	STD  Y+8+1,R30
0005ff 01de      	MOVW R26,R28
000600 961a      	ADIW R26,10
000601 940e 0747 	CALL __ADDW2R15
000603 940e 0812 	CALL __GETW1P
000605 93fa      	ST   -Y,R31
000606 93ea      	ST   -Y,R30
000607 931a      	ST   -Y,R17
000608 930a      	ST   -Y,R16
000609 e7e4      	LDI  R30,LOW(_put_buff_G101)
00060a e0f4      	LDI  R31,HIGH(_put_buff_G101)
00060b 93fa      	ST   -Y,R31
00060c 93ea      	ST   -Y,R30
00060d 01fe      	MOVW R30,R28
00060e 963a      	ADIW R30,10
00060f 93fa      	ST   -Y,R31
000610 93ea      	ST   -Y,R30
000611 dea0      	RCALL __print_G101
000612 019f      	MOVW R18,R30
000613 81ae      	LDD  R26,Y+6
000614 81bf      	LDD  R27,Y+6+1
000615 e0e0      	LDI  R30,LOW(0)
000616 93ec      	ST   X,R30
000617 01f9      	MOVW R30,R18
                 _0x20C0001:
000618 940e 0851 	CALL __LOADLOCR4
00061a 962a      	ADIW R28,10
00061b 90ff      	POP  R15
00061c 9508      	RET
                 
                 	.CSEG
                 _abs:
00061d 91e9          ld   r30,y+
00061e 91f9          ld   r31,y+
00061f 9730          sbiw r30,0
000620 f41a          brpl __abs0
000621 95e0          com  r30
000622 95f0          com  r31
000623 9631          adiw r30,1
                 __abs0:
000624 9508          ret
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
000625 91a9          ld   r26,y+
000626 91b9          ld   r27,y+
000627 27ee          clr  r30
000628 27ff          clr  r31
                 strlen0:
000629 916d          ld   r22,x+
00062a 2366          tst  r22
00062b f011          breq strlen1
00062c 9631          adiw r30,1
00062d cffb          rjmp strlen0
                 strlen1:
00062e 9508          ret
                 _strlenf:
00062f 27aa          clr  r26
000630 27bb          clr  r27
000631 91e9          ld   r30,y+
000632 91f9          ld   r31,y+
                 strlenf0:
000633 9005      	lpm  r0,z+
000634 2000          tst  r0
000635 f011          breq strlenf1
000636 9611          adiw r26,1
000637 cffb          rjmp strlenf0
                 strlenf1:
000638 01fd          movw r30,r26
000639 9508          ret
                 
                 	.CSEG
                 
                 	.DSEG
                 _doamh:
00050b           	.BYTE 0x4
                 _doaml:
00050f           	.BYTE 0x4
                 _nhietdoh:
000513           	.BYTE 0x4
                 _nhietdol:
000517           	.BYTE 0x4
                 _nhietdo:
00051b           	.BYTE 0x4
                 _doam:
00051f           	.BYTE 0x4
                 
                 	.ESEG
                 _hong1:
000000 00        	.DB  0x0
                 _hong2:
000001 ff        	.DB  0xFF
                 _hong3:
000002 7f        	.DB  0x7F
                 _hong4:
000003 ff        	.DB  0xFF
                 _solandtr:
000004 00 00     	.DW  0x0
                 _dempdtr:
000006 00        	.DB  0x0
                 
                 	.DSEG
                 _display_buffer:
000523           	.BYTE 0x50
                 __base_y_G100:
000573           	.BYTE 0x4
                 __lcd_y:
000577           	.BYTE 0x1
                 __lcd_maxx:
000578           	.BYTE 0x1
                 __seed_G102:
000579           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
00063a 93fa      	ST   -Y,R31
00063b 93ea      	ST   -Y,R30
00063c 940c 073b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
                +
00063e e820     +LDI R18 , LOW ( 128 )
00063f e030     +LDI R19 , HIGH ( 128 )
                 	__GETWRN 18,19,128
                +
000640 e000     +LDI R16 , LOW ( 0 )
000641 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
000642 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000643 e0e0      	LDI  R30,LOW(0)
000644 bde4      	OUT  0x24,R30
000645 e0e2      	LDI  R30,LOW(2)
000646 bde5      	OUT  0x25,R30
000647 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000648 940e 075c 	CALL __CWD1
00064a 940e 074b 	CALL __ADDD12
00064c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
00064d 93e0 050b 	STS  _doamh,R30
00064f 93f0 050c 	STS  _doamh+1,R31
000651 9360 050d 	STS  _doamh+2,R22
000653 9370 050e 	STS  _doamh+3,R23
000655 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5:
000656 01d9      	MOVW R26,R18
000657 e0e2      	LDI  R30,LOW(2)
000658 e0f0      	LDI  R31,HIGH(2)
000659 940e 07ae 	CALL __DIVW21
00065b 019f      	MOVW R18,R30
00065c e0e0      	LDI  R30,LOW(0)
00065d bde4      	OUT  0x24,R30
00065e bde5      	OUT  0x25,R30
00065f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
000660 91a0 050f 	LDS  R26,_doaml
000662 91b0 0510 	LDS  R27,_doaml+1
000664 9180 0511 	LDS  R24,_doaml+2
000666 9190 0512 	LDS  R25,_doaml+3
000668 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
000669 93e0 050f 	STS  _doaml,R30
00066b 93f0 0510 	STS  _doaml+1,R31
00066d 9360 0511 	STS  _doaml+2,R22
00066f 9370 0512 	STS  _doaml+3,R23
000671 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
000672 93e0 0513 	STS  _nhietdoh,R30
000674 93f0 0514 	STS  _nhietdoh+1,R31
000676 9360 0515 	STS  _nhietdoh+2,R22
000678 9370 0516 	STS  _nhietdoh+3,R23
00067a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
00067b 91a0 0517 	LDS  R26,_nhietdol
00067d 91b0 0518 	LDS  R27,_nhietdol+1
00067f 9180 0519 	LDS  R24,_nhietdol+2
000681 9190 051a 	LDS  R25,_nhietdol+3
000683 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
000684 93e0 0517 	STS  _nhietdol,R30
000686 93f0 0518 	STS  _nhietdol+1,R31
000688 9360 0519 	STS  _nhietdol+2,R22
00068a 9370 051a 	STS  _nhietdol+3,R23
00068c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
                +
00068d e0a0     +LDI R26 , LOW ( 0x100 )
00068e e0b1     +LDI R27 , HIGH ( 0x100 )
00068f e080     +LDI R24 , BYTE3 ( 0x100 )
000690 e090     +LDI R25 , BYTE4 ( 0x100 )
                 	__GETD2N 0x100
000691 940e 0796 	CALL __MULD12
000693 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
000694 e0a6      	LDI  R26,LOW(_dempdtr)
000695 e0b0      	LDI  R27,HIGH(_dempdtr)
000696 940e 0823 	CALL __EEPROMRDB
000698 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000699 e0a0      	LDI  R26,0
00069a 9986      	SBIC 0x10,6
00069b e0a1      	LDI  R26,1
00069c e0e1      	LDI  R30,LOW(1)
00069d 940e 0761 	CALL __EQB12
00069f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xE:
0006a0 93fa      	ST   -Y,R31
0006a1 93ea      	ST   -Y,R30
0006a2 940e 0422 	CALL _lcd_puts
0006a4 e2e3      	LDI  R30,LOW(_display_buffer)
0006a5 e0f5      	LDI  R31,HIGH(_display_buffer)
0006a6 93fa      	ST   -Y,R31
0006a7 93ea      	ST   -Y,R30
0006a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xF:
0006a9 91a0 051b 	LDS  R26,_nhietdo
0006ab 91b0 051c 	LDS  R27,_nhietdo+1
0006ad 9180 051d 	LDS  R24,_nhietdo+2
0006af 9190 051e 	LDS  R25,_nhietdo+3
                +
0006b1 e0ea     +LDI R30 , LOW ( 0xA )
0006b2 e0f0     +LDI R31 , HIGH ( 0xA )
0006b3 e060     +LDI R22 , BYTE3 ( 0xA )
0006b4 e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
0006b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x10:
0006b6 940e 07dd 	CALL __MODD21
0006b8 93fa      	ST   -Y,R31
0006b9 93ea      	ST   -Y,R30
0006ba 940e 061d 	CALL _abs
0006bc 2766      	CLR  R22
0006bd 2777      	CLR  R23
0006be 940e 081a 	CALL __PUTPARD1
                +
0006c0 edef     +LDI R30 , LOW ( 0xDF )
0006c1 e0f0     +LDI R31 , HIGH ( 0xDF )
0006c2 e060     +LDI R22 , BYTE3 ( 0xDF )
0006c3 e070     +LDI R23 , BYTE4 ( 0xDF )
                 	__GETD1N 0xDF
0006c4 940e 081a 	CALL __PUTPARD1
0006c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x11:
0006c7 91a0 051f 	LDS  R26,_doam
0006c9 91b0 0520 	LDS  R27,_doam+1
0006cb 9180 0521 	LDS  R24,_doam+2
0006cd 9190 0522 	LDS  R25,_doam+3
                +
0006cf e0ea     +LDI R30 , LOW ( 0xA )
0006d0 e0f0     +LDI R31 , HIGH ( 0xA )
0006d1 e060     +LDI R22 , BYTE3 ( 0xA )
0006d2 e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
0006d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x12:
0006d4 93ea      	ST   -Y,R30
0006d5 940e 03ea 	CALL _lcd_gotoxy
0006d7 e2e3      	LDI  R30,LOW(_display_buffer)
0006d8 e0f5      	LDI  R31,HIGH(_display_buffer)
0006d9 cfc6      	RJMP SUBOPT_0xE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
0006da 940e 075c 	CALL __CWD1
0006dc 940e 081a 	CALL __PUTPARD1
0006de e084      	LDI  R24,4
0006df 940e 05e7 	CALL _sprintf
0006e1 9628      	ADIW R28,8
0006e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
0006e3 e0e0      	LDI  R30,LOW(0)
0006e4 93e0 0079 	STS  121,R30
0006e6 93e0 0078 	STS  120,R30
0006e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15:
0006e9 e0e0      	LDI  R30,LOW(0)
0006ea 93e0 0085 	STS  133,R30
0006ec 93e0 0084 	STS  132,R30
0006ee 93e0 0083 	STS  131,R30
0006f0 93e0 0082 	STS  130,R30
0006f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x16:
0006f3 91a0 051b 	LDS  R26,_nhietdo
0006f5 91b0 051c 	LDS  R27,_nhietdo+1
0006f7 9180 051d 	LDS  R24,_nhietdo+2
0006f9 9190 051e 	LDS  R25,_nhietdo+3
0006fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x17:
0006fc 93ea      	ST   -Y,R30
0006fd 940e 03dc 	CALL __lcd_write_data
0006ff e0e3      	LDI  R30,LOW(3)
000700 e0f0      	LDI  R31,HIGH(3)
000701 cf38      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x18:
000702 e3e0      	LDI  R30,LOW(48)
000703 93ea      	ST   -Y,R30
000704 940e 03b8 	CALL __lcd_write_nibble_G100
                +
000706 e980     +LDI R24 , LOW ( 400 )
000707 e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
000708 9701     +SBIW R24 , 1
000709 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
00070a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x19:
00070b 932a      	ST   -Y,R18
00070c 85ed      	LDD  R30,Y+13
00070d 85fe      	LDD  R31,Y+13+1
00070e 93fa      	ST   -Y,R31
00070f 93ea      	ST   -Y,R30
000710 89e9      	LDD  R30,Y+17
000711 89fa      	LDD  R31,Y+17+1
000712 9509      	ICALL
000713 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1A:
000714 89e8      	LDD  R30,Y+16
000715 89f9      	LDD  R31,Y+16+1
000716 9734      	SBIW R30,4
000717 8be8      	STD  Y+16,R30
000718 8bf9      	STD  Y+16+1,R31
000719 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1B:
00071a 85ed      	LDD  R30,Y+13
00071b 85fe      	LDD  R31,Y+13+1
00071c 93fa      	ST   -Y,R31
00071d 93ea      	ST   -Y,R30
00071e 89e9      	LDD  R30,Y+17
00071f 89fa      	LDD  R31,Y+17+1
000720 9509      	ICALL
000721 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1C:
000722 89a8      	LDD  R26,Y+16
000723 89b9      	LDD  R27,Y+16+1
000724 9614      	ADIW R26,4
000725 940e 0812 	CALL __GETW1P
000727 83ee      	STD  Y+6,R30
000728 83ff      	STD  Y+6+1,R31
000729 93fa      	ST   -Y,R31
00072a 93ea      	ST   -Y,R30
00072b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1D:
00072c 89a8      	LDD  R26,Y+16
00072d 89b9      	LDD  R27,Y+16+1
00072e 9614      	ADIW R26,4
00072f 940e 0812 	CALL __GETW1P
000731 87ea      	STD  Y+10,R30
000732 87fb      	STD  Y+10+1,R31
000733 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
000734 01de      	MOVW R26,R28
000735 961c      	ADIW R26,12
000736 940e 0747 	CALL __ADDW2R15
000738 940e 0812 	CALL __GETW1P
00073a 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00073b 91e9      	ld   r30,y+
00073c 91f9      	ld   r31,y+
00073d 9630      	adiw r30,0
00073e f039      	breq __delay_ms1
                 __delay_ms0:
                +
00073f ea80     +LDI R24 , LOW ( 0xFA0 )
000740 e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
000741 9701     +SBIW R24 , 1
000742 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
000743 95a8      	wdr
000744 9731      	sbiw r30,1
000745 f7c9      	brne __delay_ms0
                 __delay_ms1:
000746 9508      	ret
                 
                 __ADDW2R15:
000747 2400      	CLR  R0
000748 0daf      	ADD  R26,R15
000749 1db0      	ADC  R27,R0
00074a 9508      	RET
                 
                 __ADDD12:
00074b 0fea      	ADD  R30,R26
00074c 1ffb      	ADC  R31,R27
00074d 1f68      	ADC  R22,R24
00074e 1f79      	ADC  R23,R25
00074f 9508      	RET
                 
                 __ANEGW1:
000750 95f1      	NEG  R31
000751 95e1      	NEG  R30
000752 40f0      	SBCI R31,0
000753 9508      	RET
                 
                 __ANEGD1:
000754 95f0      	COM  R31
000755 9560      	COM  R22
000756 9570      	COM  R23
000757 95e1      	NEG  R30
000758 4fff      	SBCI R31,-1
000759 4f6f      	SBCI R22,-1
00075a 4f7f      	SBCI R23,-1
00075b 9508      	RET
                 
                 __CWD1:
00075c 2f6f      	MOV  R22,R31
00075d 0f66      	ADD  R22,R22
00075e 0b66      	SBC  R22,R22
00075f 2f76      	MOV  R23,R22
000760 9508      	RET
                 
                 __EQB12:
000761 17ea      	CP   R30,R26
000762 e0e1      	LDI  R30,1
000763 f009      	BREQ __EQB12T
000764 27ee      	CLR  R30
                 __EQB12T:
000765 9508      	RET
                 
                 __LTD12:
000766 17ae      	CP   R26,R30
000767 07bf      	CPC  R27,R31
000768 0786      	CPC  R24,R22
000769 0797      	CPC  R25,R23
00076a e0e1      	LDI  R30,1
00076b f00c      	BRLT __LTD12T
00076c 27ee      	CLR  R30
                 __LTD12T:
00076d 9508      	RET
                 
                 __GTD12:
00076e 17ea      	CP   R30,R26
00076f 07fb      	CPC  R31,R27
000770 0768      	CPC  R22,R24
000771 0779      	CPC  R23,R25
000772 e0e1      	LDI  R30,1
000773 f00c      	BRLT __GTD12T
000774 27ee      	CLR  R30
                 __GTD12T:
000775 9508      	RET
                 
                 __MULD12U:
000776 9f7a      	MUL  R23,R26
000777 2d70      	MOV  R23,R0
000778 9f6b      	MUL  R22,R27
000779 0d70      	ADD  R23,R0
00077a 9ff8      	MUL  R31,R24
00077b 0d70      	ADD  R23,R0
00077c 9fe9      	MUL  R30,R25
00077d 0d70      	ADD  R23,R0
00077e 9f6a      	MUL  R22,R26
00077f 2d60      	MOV  R22,R0
000780 0d71      	ADD  R23,R1
000781 9ffb      	MUL  R31,R27
000782 0d60      	ADD  R22,R0
000783 1d71      	ADC  R23,R1
000784 9fe8      	MUL  R30,R24
000785 0d60      	ADD  R22,R0
000786 1d71      	ADC  R23,R1
000787 2788      	CLR  R24
000788 9ffa      	MUL  R31,R26
000789 2df0      	MOV  R31,R0
00078a 0d61      	ADD  R22,R1
00078b 1f78      	ADC  R23,R24
00078c 9feb      	MUL  R30,R27
00078d 0df0      	ADD  R31,R0
00078e 1d61      	ADC  R22,R1
00078f 1f78      	ADC  R23,R24
000790 9fea      	MUL  R30,R26
000791 2de0      	MOV  R30,R0
000792 0df1      	ADD  R31,R1
000793 1f68      	ADC  R22,R24
000794 1f78      	ADC  R23,R24
000795 9508      	RET
                 
                 __MULD12:
000796 d068      	RCALL __CHKSIGND
000797 dfde      	RCALL __MULD12U
000798 f40e      	BRTC __MULD121
000799 dfba      	RCALL __ANEGD1
                 __MULD121:
00079a 9508      	RET
                 
                 __DIVW21U:
00079b 2400      	CLR  R0
00079c 2411      	CLR  R1
00079d e190      	LDI  R25,16
                 __DIVW21U1:
00079e 0faa      	LSL  R26
00079f 1fbb      	ROL  R27
0007a0 1c00      	ROL  R0
0007a1 1c11      	ROL  R1
0007a2 1a0e      	SUB  R0,R30
0007a3 0a1f      	SBC  R1,R31
0007a4 f418      	BRCC __DIVW21U2
0007a5 0e0e      	ADD  R0,R30
0007a6 1e1f      	ADC  R1,R31
0007a7 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0007a8 60a1      	SBR  R26,1
                 __DIVW21U3:
0007a9 959a      	DEC  R25
0007aa f799      	BRNE __DIVW21U1
0007ab 01fd      	MOVW R30,R26
0007ac 01d0      	MOVW R26,R0
0007ad 9508      	RET
                 
                 __DIVW21:
0007ae d042      	RCALL __CHKSIGNW
0007af dfeb      	RCALL __DIVW21U
0007b0 f40e      	BRTC __DIVW211
0007b1 df9e      	RCALL __ANEGW1
                 __DIVW211:
0007b2 9508      	RET
                 
                 __DIVD21U:
0007b3 933f      	PUSH R19
0007b4 934f      	PUSH R20
0007b5 935f      	PUSH R21
0007b6 2400      	CLR  R0
0007b7 2411      	CLR  R1
0007b8 2744      	CLR  R20
0007b9 2755      	CLR  R21
0007ba e230      	LDI  R19,32
                 __DIVD21U1:
0007bb 0faa      	LSL  R26
0007bc 1fbb      	ROL  R27
0007bd 1f88      	ROL  R24
0007be 1f99      	ROL  R25
0007bf 1c00      	ROL  R0
0007c0 1c11      	ROL  R1
0007c1 1f44      	ROL  R20
0007c2 1f55      	ROL  R21
0007c3 1a0e      	SUB  R0,R30
0007c4 0a1f      	SBC  R1,R31
0007c5 0b46      	SBC  R20,R22
0007c6 0b57      	SBC  R21,R23
0007c7 f428      	BRCC __DIVD21U2
0007c8 0e0e      	ADD  R0,R30
0007c9 1e1f      	ADC  R1,R31
0007ca 1f46      	ADC  R20,R22
0007cb 1f57      	ADC  R21,R23
0007cc c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0007cd 60a1      	SBR  R26,1
                 __DIVD21U3:
0007ce 953a      	DEC  R19
0007cf f759      	BRNE __DIVD21U1
0007d0 01fd      	MOVW R30,R26
0007d1 01bc      	MOVW R22,R24
0007d2 01d0      	MOVW R26,R0
0007d3 01ca      	MOVW R24,R20
0007d4 915f      	POP  R21
0007d5 914f      	POP  R20
0007d6 913f      	POP  R19
0007d7 9508      	RET
                 
                 __DIVD21:
0007d8 d026      	RCALL __CHKSIGND
0007d9 dfd9      	RCALL __DIVD21U
0007da f40e      	BRTC __DIVD211
0007db df78      	RCALL __ANEGD1
                 __DIVD211:
0007dc 9508      	RET
                 
                 __MODD21:
0007dd 94e8      	CLT
0007de ff97      	SBRS R25,7
0007df c009      	RJMP __MODD211
0007e0 95a0      	COM  R26
0007e1 95b0      	COM  R27
0007e2 9580      	COM  R24
0007e3 9590      	COM  R25
0007e4 5faf      	SUBI R26,-1
0007e5 4fbf      	SBCI R27,-1
0007e6 4f8f      	SBCI R24,-1
0007e7 4f9f      	SBCI R25,-1
0007e8 9468      	SET
                 __MODD211:
0007e9 fd77      	SBRC R23,7
0007ea df69      	RCALL __ANEGD1
0007eb dfc7      	RCALL __DIVD21U
0007ec 01fd      	MOVW R30,R26
0007ed 01bc      	MOVW R22,R24
0007ee f40e      	BRTC __MODD212
0007ef df64      	RCALL __ANEGD1
                 __MODD212:
0007f0 9508      	RET
                 
                 __CHKSIGNW:
0007f1 94e8      	CLT
0007f2 fff7      	SBRS R31,7
0007f3 c002      	RJMP __CHKSW1
0007f4 df5b      	RCALL __ANEGW1
0007f5 9468      	SET
                 __CHKSW1:
0007f6 ffb7      	SBRS R27,7
0007f7 c006      	RJMP __CHKSW2
0007f8 95a0      	COM  R26
0007f9 95b0      	COM  R27
0007fa 9611      	ADIW R26,1
0007fb f800      	BLD  R0,0
0007fc 9403      	INC  R0
0007fd fa00      	BST  R0,0
                 __CHKSW2:
0007fe 9508      	RET
                 
                 __CHKSIGND:
0007ff 94e8      	CLT
000800 ff77      	SBRS R23,7
000801 c002      	RJMP __CHKSD1
000802 df51      	RCALL __ANEGD1
000803 9468      	SET
                 __CHKSD1:
000804 ff97      	SBRS R25,7
000805 c00b      	RJMP __CHKSD2
000806 2400      	CLR  R0
000807 95a0      	COM  R26
000808 95b0      	COM  R27
000809 9580      	COM  R24
00080a 9590      	COM  R25
00080b 9611      	ADIW R26,1
00080c 1d80      	ADC  R24,R0
00080d 1d90      	ADC  R25,R0
00080e f800      	BLD  R0,0
00080f 9403      	INC  R0
000810 fa00      	BST  R0,0
                 __CHKSD2:
000811 9508      	RET
                 
                 __GETW1P:
000812 91ed      	LD   R30,X+
000813 91fc      	LD   R31,X
000814 9711      	SBIW R26,1
000815 9508      	RET
                 
                 __GETW1PF:
000816 9005      	LPM  R0,Z+
000817 91f4      	LPM  R31,Z
000818 2de0      	MOV  R30,R0
000819 9508      	RET
                 
                 __PUTPARD1:
00081a 937a      	ST   -Y,R23
00081b 936a      	ST   -Y,R22
00081c 93fa      	ST   -Y,R31
00081d 93ea      	ST   -Y,R30
00081e 9508      	RET
                 
                 __EEPROMRDW:
00081f 9611      	ADIW R26,1
000820 d002      	RCALL __EEPROMRDB
000821 2ffe      	MOV  R31,R30
000822 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
000823 99e1      	SBIC EECR,EEWE
000824 cffe      	RJMP __EEPROMRDB
000825 93ff      	PUSH R31
000826 b7ff      	IN   R31,SREG
000827 94f8      	CLI
000828 bbae      	OUT  EEARL,R26
000829 bbbf      	OUT  EEARH,R27
00082a 9ae0      	SBI  EECR,EERE
00082b b3ed      	IN   R30,EEDR
00082c bfff      	OUT  SREG,R31
00082d 91ff      	POP  R31
00082e 9508      	RET
                 
                 __EEPROMWRW:
00082f d007      	RCALL __EEPROMWRB
000830 9611      	ADIW R26,1
000831 93ef      	PUSH R30
000832 2fef      	MOV  R30,R31
000833 d003      	RCALL __EEPROMWRB
000834 91ef      	POP  R30
000835 9711      	SBIW R26,1
000836 9508      	RET
                 
                 __EEPROMWRB:
000837 9be1      	SBIS EECR,EEWE
000838 c002      	RJMP __EEPROMWRB1
000839 95a8      	WDR
00083a cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
00083b b79f      	IN   R25,SREG
00083c 94f8      	CLI
00083d bbae      	OUT  EEARL,R26
00083e bbbf      	OUT  EEARH,R27
00083f 9ae0      	SBI  EECR,EERE
000840 b38d      	IN   R24,EEDR
000841 17e8      	CP   R30,R24
000842 f019      	BREQ __EEPROMWRB0
000843 bbed      	OUT  EEDR,R30
000844 9ae2      	SBI  EECR,EEMWE
000845 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000846 bf9f      	OUT  SREG,R25
000847 9508      	RET
                 
                 __SAVELOCR6:
000848 935a      	ST   -Y,R21
                 __SAVELOCR5:
000849 934a      	ST   -Y,R20
                 __SAVELOCR4:
00084a 933a      	ST   -Y,R19
                 __SAVELOCR3:
00084b 932a      	ST   -Y,R18
                 __SAVELOCR2:
00084c 931a      	ST   -Y,R17
00084d 930a      	ST   -Y,R16
00084e 9508      	RET
                 
                 __LOADLOCR6:
00084f 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000850 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000851 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000852 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000853 8119      	LDD  R17,Y+1
000854 8108      	LD   R16,Y
000855 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega64 register use summary:
r0 :  46 r1 :  19 r2 :   4 r3 :   0 r4 :   4 r5 :   2 r6 :   4 r7 :   2 
r8 :   4 r9 :   1 r10:   5 r11:   2 r12:   4 r13:   6 r14:   0 r15:   6 
r16:  47 r17:  39 r18:  37 r19:  14 r20:  16 r21:  23 r22:  46 r23:  40 
r24:  64 r25:  37 r26: 128 r27:  65 r28:  17 r29:   1 r30: 520 r31: 154 
x  :  23 y  : 233 z  :  16 
Registers used: 33 out of 35 (94.3%)

ATmega64 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :  16 
adiw  :  38 and   :   2 andi  :   8 asr   :   0 bclr  :   0 bld   :   5 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :  26 
brge  :   7 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  13 
brlt  :   6 brmi  :   1 brne  :  42 brpl  :   2 brsh  :   3 brtc  :   4 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   2 call  : 146 
cbi   :  14 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  33 cls   :   0 clt   :   5 clv   :   0 clz   :   0 com   :  15 
cp    :  13 cpc   :  33 cpi   :  54 cpse  :   0 dec   :   7 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   9 inc   :   3 jmp   :  40 ld    :  45 ldd   :  75 ldi   : 280 
lds   :  42 lpm   :  16 lsl   :   2 lsr   :   0 mov   :  28 movw  :  38 
mul   :  11 muls  :   0 mulsu :   0 neg   :   3 nop   :   0 or    :   1 
ori   :   6 out   :  65 pop   :   6 push  :   6 rcall :  43 ret   :  67 
reti  :   1 rjmp  : 101 rol   :  10 ror   :   0 sbc   :   6 sbci  :  12 
sbi   :  24 sbic  :  11 sbis  :   7 sbiw  :  26 sbr   :   2 sbrc  :   3 
sbrs  :  16 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   4 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 106 std   :  33 sts   :  66 sub   :   3 subi  :  25 swap  :   1 
tst   :   4 wdr   :   3 
Instructions used: 70 out of 116 (60.3%)

ATmega64 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0010ac   4122    146   4268   65536   6.5%
[.dseg] 0x000100 0x00057d      0    125    125    4351   2.9%
[.eseg] 0x000000 0x000007      0      7      7    2048   0.3%

Assembly complete, 0 errors, 9 warnings
